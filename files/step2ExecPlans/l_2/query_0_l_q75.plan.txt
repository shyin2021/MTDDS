                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=21706297.58..21706297.59 rows=1 width=80) (actual time=288834.807..288834.817 rows=100 loops=1)
   CTE all_sales
     ->  HashAggregate  (cost=21527341.67..21565697.93 rows=3068501 width=60) (actual time=288760.582..288794.912 rows=62057 loops=1)
           Group Key: d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id
           ->  HashAggregate  (cost=20376653.83..20683503.92 rows=30685009 width=56) (actual time=256761.585..270703.502 rows=48211847 loops=1)
                 Group Key: d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id, ((cs_quantity - COALESCE(cr_return_quantity, 0))), ((cs_ext_sales_price - COALESCE(cr_return_amount, 0.0)))
                 ->  Append  (cost=400617.65..19839666.18 rows=30685009 width=56) (actual time=5343.003..173117.214 rows=48749306 loops=1)
                       ->  Remote Subquery Scan on all (dn6)  (cost=400617.65..5994033.23 rows=8767130 width=56) (actual time=5343.002..81047.999 rows=14249922 loops=1)
                       ->  Remote Subquery Scan on all (dn2)  (cost=731741.65..10536345.00 rows=17534238 width=56) (actual time=11365.761..73685.280 rows=27344042 loops=1)
                       ->  Remote Subquery Scan on all (dn5)  (cost=199706.53..3002437.85 rows=4383641 width=56) (actual time=2252.491..13497.429 rows=7155342 loops=1)
   ->  Sort  (cost=140599.65..140599.65 rows=1 width=80) (actual time=288834.806..288834.810 rows=100 loops=1)
         Sort Key: ((curr_yr.sales_cnt - prev_yr.sales_cnt)), ((curr_yr.sales_amt - prev_yr.sales_amt))
         Sort Method: quicksort  Memory: 51kB
         ->  Merge Join  (cost=140216.03..140599.64 rows=1 width=80) (actual time=288826.042..288834.757 rows=189 loops=1)
               Merge Cond: ((curr_yr.i_brand_id = prev_yr.i_brand_id) AND (curr_yr.i_class_id = prev_yr.i_class_id) AND (curr_yr.i_category_id = prev_yr.i_category_id) AND (curr_yr.i_manufact_id = prev_yr.i_manufact_id))
               Join Filter: (((curr_yr.sales_cnt)::numeric(17,2) / (prev_yr.sales_cnt)::numeric(17,2)) < 0.9)
               Rows Removed by Join Filter: 9419
               ->  Sort  (cost=70108.02..70146.37 rows=15343 width=60) (actual time=288811.515..288812.163 rows=9625 loops=1)
                     Sort Key: curr_yr.i_brand_id, curr_yr.i_class_id, curr_yr.i_category_id, curr_yr.i_manufact_id
                     Sort Method: quicksort  Memory: 1137kB
                     ->  CTE Scan on all_sales curr_yr  (cost=0.00..69041.27 rows=15343 width=60) (actual time=288760.593..288807.777 rows=9633 loops=1)
                           Filter: (d_year = 1999)
                           Rows Removed by Filter: 52424
               ->  Sort  (cost=70108.02..70146.37 rows=15343 width=60) (actual time=14.508..14.915 rows=9625 loops=1)
                     Sort Key: prev_yr.i_brand_id, prev_yr.i_class_id, prev_yr.i_category_id, prev_yr.i_manufact_id
                     Sort Method: quicksort  Memory: 1137kB
                     ->  CTE Scan on all_sales prev_yr  (cost=0.00..69041.27 rows=15343 width=60) (actual time=0.002..3.832 rows=9633 loops=1)
                           Filter: (d_year = 1998)
                           Rows Removed by Filter: 52424
 Planning time: 1.785 ms
 Execution time: 289721.247 ms
(31 rows)

