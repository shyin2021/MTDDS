                                                                                                           QUERY PLAN                                                                                                           
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=500702.76..500702.76 rows=1 width=372) (actual time=5950.157..5950.165 rows=100 loops=1)
   CTE v1
     ->  WindowAgg  (cost=462297.69..478040.18 rows=83988 width=196) (actual time=3664.617..5389.716 rows=145074 loops=1)
           ->  WindowAgg  (cost=462297.69..475940.48 rows=83988 width=188) (actual time=3664.611..5281.576 rows=145074 loops=1)
                 ->  Finalize GroupAggregate  (cost=462297.69..474050.75 rows=83988 width=156) (actual time=3664.564..5158.755 rows=145074 loops=1)
                       Group Key: i_category, i_brand, cc_name, d_year, d_moy
                       ->  Remote Subquery Scan on all (dn1,dn2,dn3,dn4)  (cost=462297.69..471776.08 rows=69990 width=156) (actual time=3664.514..4815.639 rows=479868 loops=1)
   CTE v2
     ->  Hash Join  (cost=19617.95..22662.52 rows=1 width=340) (actual time=5715.293..5808.302 rows=118762 loops=1)
           Hash Cond: ((v1_lead.i_category = v1.i_category) AND (v1_lead.i_brand = v1.i_brand) AND ((v1_lead.cc_name)::text = (v1.cc_name)::text) AND ((v1_lead.rn - 1) = v1.rn))
           ->  CTE Scan on v1 v1_lead  (cost=0.00..1679.76 rows=83988 width=566) (actual time=3664.620..3679.214 rows=145074 loops=1)
           ->  Hash  (cost=19617.87..19617.87 rows=4 width=1172) (actual time=2050.629..2050.629 rows=129163 loops=1)
                 Buckets: 131072 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 41543kB
                 ->  Merge Join  (cost=17098.19..19617.87 rows=4 width=1172) (actual time=1915.163..1993.570 rows=129163 loops=1)
                       Merge Cond: ((v1.i_category = v1_lag.i_category) AND (v1.i_brand = v1_lag.i_brand) AND ((v1.cc_name)::text = (v1_lag.cc_name)::text) AND (v1.rn = ((v1_lag.rn + 1))))
                       ->  Sort  (cost=8549.09..8759.06 rows=83988 width=606) (actual time=1846.530..1850.889 rows=141645 loops=1)
                             Sort Key: v1.i_category, v1.i_brand, v1.cc_name, v1.rn
                             Sort Method: quicksort  Memory: 44065kB
                             ->  CTE Scan on v1  (cost=0.00..1679.76 rows=83988 width=606) (actual time=0.002..1787.124 rows=145074 loops=1)
                       ->  Sort  (cost=8549.09..8759.06 rows=83988 width=566) (actual time=68.619..73.105 rows=141519 loops=1)
                             Sort Key: v1_lag.i_category, v1_lag.i_brand, v1_lag.cc_name, ((v1_lag.rn + 1))
                             Sort Method: quicksort  Memory: 44060kB
                             ->  CTE Scan on v1 v1_lag  (cost=0.00..1679.76 rows=83988 width=566) (actual time=0.001..17.221 rows=145074 loops=1)
   ->  Sort  (cost=0.05..0.06 rows=1 width=372) (actual time=5950.156..5950.160 rows=100 loops=1)
         Sort Key: ((v2.sum_sales - v2.avg_monthly_sales)), v2.avg_monthly_sales
         Sort Method: top-N heapsort  Memory: 48kB
         ->  CTE Scan on v2  (cost=0.00..0.04 rows=1 width=372) (actual time=5715.300..5924.958 rows=108370 loops=1)
               Filter: ((avg_monthly_sales > '0'::numeric) AND (d_year = 2000) AND (CASE WHEN (avg_monthly_sales > '0'::numeric) THEN (abs((sum_sales - avg_monthly_sales)) / avg_monthly_sales) ELSE NULL::numeric END > 0.1))
               Rows Removed by Filter: 10392
 Planning time: 0.699 ms
 Execution time: 5979.433 ms
(31 rows)

