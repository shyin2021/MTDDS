                                                                                                                              QUERY PLAN                                                                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=765744.50..765744.51 rows=1 width=368) (actual time=9094.423..9094.431 rows=100 loops=1)
   CTE v1
     ->  WindowAgg  (cost=684428.37..717274.92 rows=167960 width=194) (actual time=6960.560..8711.132 rows=96195 loops=1)
           ->  WindowAgg  (cost=684428.37..712656.02 rows=167960 width=186) (actual time=6960.554..8631.905 rows=96195 loops=1)
                 ->  Finalize GroupAggregate  (cost=684428.37..708457.02 rows=167960 width=154) (actual time=6960.504..8540.892 rows=96195 loops=1)
                       Group Key: i_category, i_brand, s_store_name, s_company_name, d_year, d_moy
                       ->  Remote Subquery Scan on all (dn1,dn2,dn3,dn4)  (cost=684428.37..703558.20 rows=139966 width=154) (actual time=6960.448..8278.274 rows=351032 loops=1)
   CTE v2
     ->  Hash Join  (cost=41751.12..48469.53 rows=1 width=336) (actual time=8950.019..9009.687 rows=72742 loops=1)
           Hash Cond: ((v1_lead.i_category = v1.i_category) AND (v1_lead.i_brand = v1.i_brand) AND ((v1_lead.s_store_name)::text = (v1.s_store_name)::text) AND ((v1_lead.s_company_name)::text = (v1.s_company_name)::text) AND ((v1_lead.rn - 1) = v1.rn))
           ->  CTE Scan on v1 v1_lead  (cost=0.00..3359.20 rows=167960 width=684) (actual time=6960.563..6969.764 rows=96195 loops=1)
           ->  Hash  (cost=41751.10..41751.10 rows=1 width=1404) (actual time=1989.418..1989.418 rows=81301 loops=1)
                 Buckets: 131072 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 26183kB
                 ->  Merge Join  (cost=35872.49..41751.10 rows=1 width=1404) (actual time=1890.609..1950.912 rows=81301 loops=1)
                       Merge Cond: ((v1.i_category = v1_lag.i_category) AND (v1.i_brand = v1_lag.i_brand) AND ((v1.s_store_name)::text = (v1_lag.s_store_name)::text) AND ((v1.s_company_name)::text = (v1_lag.s_company_name)::text) AND (v1.rn = ((v1_lag.rn + 1))))
                       ->  Sort  (cost=17936.25..18356.15 rows=167960 width=720) (actual time=1839.515..1842.356 rows=91846 loops=1)
                             Sort Key: v1.i_category, v1.i_brand, v1.s_store_name, v1.s_company_name, v1.rn
                             Sort Method: quicksort  Memory: 27904kB
                             ->  CTE Scan on v1  (cost=0.00..3359.20 rows=167960 width=720) (actual time=0.002..1795.701 rows=96195 loops=1)
                       ->  Sort  (cost=17936.25..18356.15 rows=167960 width=684) (actual time=51.082..53.931 rows=91712 loops=1)
                             Sort Key: v1_lag.i_category, v1_lag.i_brand, v1_lag.s_store_name, v1_lag.s_company_name, ((v1_lag.rn + 1))
                             Sort Method: quicksort  Memory: 27904kB
                             ->  CTE Scan on v1 v1_lag  (cost=0.00..3359.20 rows=167960 width=684) (actual time=0.001..12.003 rows=96195 loops=1)
   ->  Sort  (cost=0.05..0.06 rows=1 width=368) (actual time=9094.422..9094.425 rows=100 loops=1)
         Sort Key: ((v2.sum_sales - v2.avg_monthly_sales)), v2.psum
         Sort Method: top-N heapsort  Memory: 49kB
         ->  CTE Scan on v2  (cost=0.00..0.04 rows=1 width=368) (actual time=8950.026..9079.288 rows=68049 loops=1)
               Filter: ((avg_monthly_sales > '0'::numeric) AND (d_year = 2001) AND (CASE WHEN (avg_monthly_sales > '0'::numeric) THEN (abs((sum_sales - avg_monthly_sales)) / avg_monthly_sales) ELSE NULL::numeric END > 0.1))
               Rows Removed by Filter: 4693
 Planning time: 0.592 ms
 Execution time: 9122.312 ms
(31 rows)

