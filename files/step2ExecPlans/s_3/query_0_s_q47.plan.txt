                                                                                                                              QUERY PLAN                                                                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=77323.92..77323.92 rows=1 width=400) (actual time=3531.818..3531.826 rows=100 loops=1)
   CTE v1
     ->  WindowAgg  (cost=69730.23..73023.22 rows=16839 width=195) (actual time=2666.020..3220.708 rows=63745 loops=1)
           ->  WindowAgg  (cost=69730.23..72560.15 rows=16839 width=187) (actual time=2665.997..3136.989 rows=63745 loops=1)
                 ->  Finalize GroupAggregate  (cost=69730.23..72139.18 rows=16839 width=155) (actual time=2665.971..3042.572 rows=63745 loops=1)
                       Group Key: i_category, i_brand, s_store_name, s_company_name, d_year, d_moy
                       ->  Remote Subquery Scan on all (dn1)  (cost=69730.23..71648.05 rows=14032 width=155) (actual time=2665.927..2865.888 rows=63745 loops=1)
   CTE v2
     ->  Hash Join  (cost=3627.07..4300.64 rows=1 width=368) (actual time=3426.065..3468.961 rows=52004 loops=1)
           Hash Cond: ((v1_lead.i_category = v1.i_category) AND (v1_lead.i_brand = v1.i_brand) AND ((v1_lead.s_store_name)::text = (v1.s_store_name)::text) AND ((v1_lead.s_company_name)::text = (v1.s_company_name)::text) AND ((v1_lead.rn - 1) = v1.rn))
           ->  CTE Scan on v1 v1_lead  (cost=0.00..336.78 rows=16839 width=684) (actual time=2666.023..2672.702 rows=63745 loops=1)
           ->  Hash  (cost=3627.05..3627.05 rows=1 width=1404) (actual time=760.006..760.006 rows=57128 loops=1)
                 Buckets: 65536 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 18187kB
                 ->  Merge Join  (cost=3037.67..3627.05 rows=1 width=1404) (actual time=691.134..732.648 rows=57128 loops=1)
                       Merge Cond: ((v1.i_category = v1_lag.i_category) AND (v1.i_brand = v1_lag.i_brand) AND ((v1.s_store_name)::text = (v1_lag.s_store_name)::text) AND ((v1.s_company_name)::text = (v1_lag.s_company_name)::text) AND (v1.rn = ((v1_lag.rn + 1))))
                       ->  Sort  (cost=1518.84..1560.93 rows=16839 width=720) (actual time=653.932..655.913 rows=62995 loops=1)
                             Sort Key: v1.i_category, v1.i_brand, v1.s_store_name, v1.s_company_name, v1.rn
                             Sort Method: quicksort  Memory: 18325kB
                             ->  CTE Scan on v1  (cost=0.00..336.78 rows=16839 width=720) (actual time=0.002..602.225 rows=63745 loops=1)
                       ->  Sort  (cost=1518.84..1560.93 rows=16839 width=684) (actual time=37.191..39.190 rows=62953 loops=1)
                             Sort Key: v1_lag.i_category, v1_lag.i_brand, v1_lag.s_store_name, v1_lag.s_company_name, ((v1_lag.rn + 1))
                             Sort Method: quicksort  Memory: 18325kB
                             ->  CTE Scan on v1 v1_lag  (cost=0.00..336.78 rows=16839 width=684) (actual time=0.002..8.645 rows=63745 loops=1)
   ->  Sort  (cost=0.05..0.06 rows=1 width=400) (actual time=3531.816..3531.820 rows=100 loops=1)
         Sort Key: ((v2.sum_sales - v2.avg_monthly_sales)), v2.nsum
         Sort Method: top-N heapsort  Memory: 49kB
         ->  CTE Scan on v2  (cost=0.00..0.04 rows=1 width=400) (actual time=3426.072..3520.516 rows=47161 loops=1)
               Filter: ((avg_monthly_sales > '0'::numeric) AND (d_year = 2000) AND (CASE WHEN (avg_monthly_sales > '0'::numeric) THEN (abs((sum_sales - avg_monthly_sales)) / avg_monthly_sales) ELSE NULL::numeric END > 0.1))
               Rows Removed by Filter: 4843
 Planning time: 0.611 ms
 Execution time: 3553.371 ms
(31 rows)

