                                                                                                                                                  QUERY PLAN                                                                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1476607.20..1476607.20 rows=1 width=334) (actual time=8491.660..8491.661 rows=4 loops=1)
   CTE year_total
     ->  Append  (cost=313754.42..682614.63 rows=5041184 width=255) (actual time=4127.867..8014.290 rows=384208 loops=1)
           ->  Finalize HashAggregate  (cost=313754.42..349757.17 rows=2880220 width=255) (actual time=4127.866..4240.079 rows=190581 loops=1)
                 Group Key: c_customer_id, c_first_name, c_last_name, c_preferred_cust_flag, c_birth_country, c_login, c_email_address, d_year
                 ->  Remote Subquery Scan on all (dn1)  (cost=191345.07..241748.92 rows=2880220 width=223) (actual time=3665.194..3771.504 rows=190581 loops=1)
           ->  Finalize HashAggregate  (cost=169625.14..187644.89 rows=1441580 width=255) (actual time=2400.609..2481.004 rows=136978 loops=1)
                 Group Key: c_customer_id, c_first_name, c_last_name, c_preferred_cust_flag, c_birth_country, c_login, c_email_address, d_year
                 ->  Remote Subquery Scan on all (dn1)  (cost=108357.99..133585.64 rows=1441580 width=223) (actual time=2074.861..2150.099 rows=136978 loops=1)
           ->  Finalize HashAggregate  (cost=85808.44..94800.74 rows=719384 width=255) (actual time=1247.260..1277.064 rows=56649 loops=1)
                 Group Key: c_customer_id, c_first_name, c_last_name, c_preferred_cust_flag, c_birth_country, c_login, c_email_address, d_year
                 ->  Remote Subquery Scan on all (dn1)  (cost=55234.62..67823.84 rows=719384 width=223) (actual time=1082.548..1132.079 rows=56649 loops=1)
   ->  Sort  (cost=793992.56..793992.57 rows=1 width=334) (actual time=8491.659..8491.659 rows=4 loops=1)
         Sort Key: t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name, t_s_secyear.customer_birth_country
         Sort Method: quicksort  Memory: 25kB
         ->  Hash Join  (cost=655359.69..793992.55 rows=1 width=334) (actual time=8480.547..8491.643 rows=4 loops=1)
               Hash Cond: (t_s_secyear.customer_id = t_w_secyear.customer_id)
               Join Filter: (CASE WHEN (t_c_firstyear.year_total > '0'::numeric) THEN (t_c_secyear.year_total / t_c_firstyear.year_total) ELSE NULL::numeric END > CASE WHEN (t_w_firstyear.year_total > '0'::numeric) THEN (t_w_secyear.year_total / t_w_firstyear.year_total) ELSE NULL::numeric END)
               Rows Removed by Join Filter: 3
               ->  Hash Join  (cost=529328.51..667961.34 rows=1 width=702) (actual time=288.229..299.304 rows=51 loops=1)
                     Hash Cond: (t_s_secyear.customer_id = t_c_secyear.customer_id)
                     Join Filter: (CASE WHEN (t_c_firstyear.year_total > '0'::numeric) THEN (t_c_secyear.year_total / t_c_firstyear.year_total) ELSE NULL::numeric END > CASE WHEN (t_s_firstyear.year_total > '0'::numeric) THEN (t_s_secyear.year_total / t_s_firstyear.year_total) ELSE NULL::numeric END)
                     Rows Removed by Join Filter: 68
                     ->  Hash Join  (cost=403297.34..541930.12 rows=1 width=666) (actual time=240.963..252.562 rows=404 loops=1)
                           Hash Cond: (t_s_firstyear.customer_id = t_s_secyear.customer_id)
                           ->  Hash Join  (cost=277266.16..415898.90 rows=2 width=300) (actual time=188.806..200.121 rows=1087 loops=1)
                                 Hash Cond: (t_w_firstyear.customer_id = t_s_firstyear.customer_id)
                                 ->  CTE Scan on year_total t_w_firstyear  (cost=0.00..138632.56 rows=42 width=100) (actual time=51.205..61.338 rows=11077 loops=1)
                                       Filter: ((year_total > '0'::numeric) AND (sale_type = 'w'::text) AND (dyear = 1999))
                                       Rows Removed by Filter: 373131
                                 ->  Hash  (cost=277266.05..277266.05 rows=9 width=200) (actual time=137.579..137.579 rows=9835 loops=1)
                                       Buckets: 16384 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 924kB
                                       ->  Hash Join  (cost=138633.09..277266.05 rows=9 width=200) (actual time=65.294..135.643 rows=9835 loops=1)
                                             Hash Cond: (t_s_firstyear.customer_id = t_c_firstyear.customer_id)
                                             ->  CTE Scan on year_total t_s_firstyear  (cost=0.00..138632.56 rows=42 width=100) (actual time=0.003..64.868 rows=37708 loops=1)
                                                   Filter: ((year_total > '0'::numeric) AND (sale_type = 's'::text) AND (dyear = 1999))
                                                   Rows Removed by Filter: 346500
                                             ->  Hash  (cost=138632.56..138632.56 rows=42 width=100) (actual time=65.281..65.281 rows=26331 loops=1)
                                                   Buckets: 32768 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 1726kB
                                                   ->  CTE Scan on year_total t_c_firstyear  (cost=0.00..138632.56 rows=42 width=100) (actual time=29.681..61.548 rows=26331 loops=1)
                                                         Filter: ((year_total > '0'::numeric) AND (sale_type = 'c'::text) AND (dyear = 1999))
                                                         Rows Removed by Filter: 357877
                           ->  Hash  (cost=126029.60..126029.60 rows=126 width=366) (actual time=52.148..52.148 rows=38252 loops=1)
                                 Buckets: 65536 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 4895kB
                                 ->  CTE Scan on year_total t_s_secyear  (cost=0.00..126029.60 rows=126 width=366) (actual time=0.003..43.985 rows=38252 loops=1)
                                       Filter: ((sale_type = 's'::text) AND (dyear = 2000))
                                       Rows Removed by Filter: 345956
                     ->  Hash  (cost=126029.60..126029.60 rows=126 width=100) (actual time=46.528..46.529 rows=27449 loops=1)
                           Buckets: 32768 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 1787kB
                           ->  CTE Scan on year_total t_c_secyear  (cost=0.00..126029.60 rows=126 width=100) (actual time=19.954..42.645 rows=27449 loops=1)
                                 Filter: ((sale_type = 'c'::text) AND (dyear = 2000))
                                 Rows Removed by Filter: 356759
               ->  Hash  (cost=126029.60..126029.60 rows=126 width=100) (actual time=8192.306..8192.306 rows=11153 loops=1)
                     Buckets: 16384 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 753kB
                     ->  CTE Scan on year_total t_w_secyear  (cost=0.00..126029.60 rows=126 width=100) (actual time=8131.865..8190.797 rows=11153 loops=1)
                           Filter: ((sale_type = 'w'::text) AND (dyear = 2000))
                           Rows Removed by Filter: 373055
 Planning time: 6.233 ms
 Execution time: 8582.430 ms
(59 rows)

