== Parsed Logical Plan ==
CTE [my_customers, my_revenue, segments]
:  :- 'SubqueryAlias my_customers
:  :  +- 'Distinct
:  :     +- 'Project ['c_customer_sk, 'c_current_addr_sk]
:  :        +- 'Filter (((('sold_date_sk = 'd_date_sk) AND ('item_sk = 'i_item_sk)) AND (('i_category = Electronics) AND ('i_class = disk drives))) AND ((('c_customer_sk = 'cs_or_ws_sales.customer_sk) AND ('d_moy = 3)) AND ('d_year = 1998)))
:  :           +- 'Join Inner
:  :              :- 'Join Inner
:  :              :  :- 'Join Inner
:  :              :  :  :- 'SubqueryAlias cs_or_ws_sales
:  :              :  :  :  +- 'Union false, false
:  :              :  :  :     :- 'Project ['cs_sold_date_sk AS sold_date_sk#33931, 'cs_bill_customer_sk AS customer_sk#33932, 'cs_item_sk AS item_sk#33933]
:  :              :  :  :     :  +- 'UnresolvedRelation [catalog_sales], [], false
:  :              :  :  :     +- 'Project ['ws_sold_date_sk AS sold_date_sk#33934, 'ws_bill_customer_sk AS customer_sk#33935, 'ws_item_sk AS item_sk#33936]
:  :              :  :  :        +- 'UnresolvedRelation [web_sales], [], false
:  :              :  :  +- 'UnresolvedRelation [item], [], false
:  :              :  +- 'UnresolvedRelation [date_dim], [], false
:  :              +- 'UnresolvedRelation [customer], [], false
:  :- 'SubqueryAlias my_revenue
:  :  +- 'Aggregate ['c_customer_sk], ['c_customer_sk, 'sum('ss_ext_sales_price) AS revenue#33937]
:  :     +- 'Filter (((('c_current_addr_sk = 'ca_address_sk) AND ('ca_county = 's_county)) AND ('ca_state = 's_state)) AND ((('ss_sold_date_sk = 'd_date_sk) AND ('c_customer_sk = 'ss_customer_sk)) AND (('d_month_seq >= scalar-subquery#33938 []) AND ('d_month_seq <= scalar-subquery#33939 []))))
:  :        :  :- 'Distinct
:  :        :  :  +- 'Project [unresolvedalias(('d_month_seq + 1), None)]
:  :        :  :     +- 'Filter (('d_year = 1998) AND ('d_moy = 3))
:  :        :  :        +- 'UnresolvedRelation [date_dim], [], false
:  :        :  +- 'Distinct
:  :        :     +- 'Project [unresolvedalias(('d_month_seq + 3), None)]
:  :        :        +- 'Filter (('d_year = 1998) AND ('d_moy = 3))
:  :        :           +- 'UnresolvedRelation [date_dim], [], false
:  :        +- 'Join Inner
:  :           :- 'Join Inner
:  :           :  :- 'Join Inner
:  :           :  :  :- 'Join Inner
:  :           :  :  :  :- 'UnresolvedRelation [my_customers], [], false
:  :           :  :  :  +- 'UnresolvedRelation [store_sales], [], false
:  :           :  :  +- 'UnresolvedRelation [customer_address], [], false
:  :           :  +- 'UnresolvedRelation [store], [], false
:  :           +- 'UnresolvedRelation [date_dim], [], false
:  +- 'SubqueryAlias segments
:     +- 'Project [cast(('revenue / 50) as int) AS segment#33940]
:        +- 'UnresolvedRelation [my_revenue], [], false
+- 'GlobalLimit 100
   +- 'LocalLimit 100
      +- 'Sort ['segment ASC NULLS FIRST, 'num_customers ASC NULLS FIRST], true
         +- 'Aggregate ['segment], ['segment, 'count(1) AS num_customers#33929, ('segment * 50) AS segment_base#33930]
            +- 'UnresolvedRelation [segments], [], false

== Analyzed Logical Plan ==
segment: int, num_customers: bigint, segment_base: int
WithCTE
:- CTERelationDef 42, false
:  +- SubqueryAlias my_customers
:     +- Distinct
:        +- Project [c_customer_sk#81, c_current_addr_sk#85]
:           +- Filter ((((sold_date_sk#33931 = d_date_sk#24) AND (item_sk#33933 = i_item_sk#1271)) AND ((i_category#1283 = Electronics) AND (i_class#1281 = disk drives))) AND (((c_customer_sk#81 = customer_sk#33932) AND (d_moy#32 = 3)) AND (d_year#30 = 1998)))
:              +- Join Inner
:                 :- Join Inner
:                 :  :- Join Inner
:                 :  :  :- SubqueryAlias cs_or_ws_sales
:                 :  :  :  +- Union false, false
:                 :  :  :     :- Project [cs_sold_date_sk#461 AS sold_date_sk#33931, cs_bill_customer_sk#464 AS customer_sk#33932, cs_item_sk#476 AS item_sk#33933]
:                 :  :  :     :  +- SubqueryAlias spark_catalog.m.catalog_sales
:                 :  :  :     :     +- Relation spark_catalog.m.catalog_sales[cs_sold_date_sk#461,cs_sold_time_sk#462,cs_ship_date_sk#463,cs_bill_customer_sk#464,cs_bill_cdemo_sk#465,cs_bill_hdemo_sk#466,cs_bill_addr_sk#467,cs_ship_customer_sk#468,cs_ship_cdemo_sk#469,cs_ship_hdemo_sk#470,cs_ship_addr_sk#471,cs_call_center_sk#472,cs_catalog_page_sk#473,cs_ship_mode_sk#474,cs_warehouse_sk#475,cs_item_sk#476,cs_promo_sk#477,cs_order_number#478,cs_quantity#479,cs_wholesale_cost#480,cs_list_price#481,cs_sales_price#482,cs_ext_discount_amt#483,cs_ext_sales_price#484,... 10 more fields] parquet
:                 :  :  :     +- Project [ws_sold_date_sk#427 AS sold_date_sk#33934, ws_bill_customer_sk#431 AS customer_sk#33935, ws_item_sk#430 AS item_sk#33936]
:                 :  :  :        +- SubqueryAlias spark_catalog.m.web_sales
:                 :  :  :           +- Relation spark_catalog.m.web_sales[ws_sold_date_sk#427,ws_sold_time_sk#428,ws_ship_date_sk#429,ws_item_sk#430,ws_bill_customer_sk#431,ws_bill_cdemo_sk#432,ws_bill_hdemo_sk#433,ws_bill_addr_sk#434,ws_ship_customer_sk#435,ws_ship_cdemo_sk#436,ws_ship_hdemo_sk#437,ws_ship_addr_sk#438,ws_web_page_sk#439,ws_web_site_sk#440,ws_ship_mode_sk#441,ws_warehouse_sk#442,ws_promo_sk#443,ws_order_number#444,ws_quantity#445,ws_wholesale_cost#446,ws_list_price#447,ws_sales_price#448,ws_ext_discount_amt#449,ws_ext_sales_price#450,... 10 more fields] parquet
:                 :  :  +- SubqueryAlias spark_catalog.m.item
:                 :  :     +- Relation spark_catalog.m.item[i_item_sk#1271,i_item_id#1272,i_rec_start_date#1273,i_rec_end_date#1274,i_item_desc#1275,i_current_price#1276,i_wholesale_cost#1277,i_brand_id#1278,i_brand#1279,i_class_id#1280,i_class#1281,i_category_id#1282,i_category#1283,i_manufact_id#1284,i_manufact#1285,i_size#1286,i_formulation#1287,i_color#1288,i_units#1289,i_container#1290,i_manager_id#1291,i_product_name#1292] parquet
:                 :  +- SubqueryAlias spark_catalog.m.date_dim
:                 :     +- Relation spark_catalog.m.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet
:                 +- SubqueryAlias spark_catalog.m.customer
:                    +- Relation spark_catalog.m.customer[c_customer_sk#81,c_customer_id#82,c_current_cdemo_sk#83,c_current_hdemo_sk#84,c_current_addr_sk#85,c_first_shipto_date_sk#86,c_first_sales_date_sk#87,c_salutation#88,c_first_name#89,c_last_name#90,c_preferred_cust_flag#91,c_birth_day#92,c_birth_month#93,c_birth_year#94,c_birth_country#95,c_login#96,c_email_address#97,c_last_review_date#98] parquet
:- CTERelationDef 43, false
:  +- SubqueryAlias my_revenue
:     +- Aggregate [c_customer_sk#81], [c_customer_sk#81, sum(ss_ext_sales_price#1263) AS revenue#33937]
:        +- Filter ((((c_current_addr_sk#85 = ca_address_sk#8171) AND (ca_county#8178 = s_county#75)) AND (ca_state#8179 = s_state#76)) AND (((ss_sold_date_sk#1248 = d_date_sk#33942) AND (c_customer_sk#81 = ss_customer_sk#1251)) AND ((d_month_seq#33945 >= scalar-subquery#33938 []) AND (d_month_seq#33945 <= scalar-subquery#33939 []))))
:           :  :- Distinct
:           :  :  +- Project [(d_month_seq#33976 + 1) AS (d_month_seq + 1)#33970]
:           :  :     +- Filter ((d_year#33979 = 1998) AND (d_moy#33981 = 3))
:           :  :        +- SubqueryAlias spark_catalog.m.date_dim
:           :  :           +- Relation spark_catalog.m.date_dim[d_date_sk#33973,d_date_id#33974,d_date#33975,d_month_seq#33976,d_week_seq#33977,d_quarter_seq#33978,d_year#33979,d_dow#33980,d_moy#33981,d_dom#33982,d_qoy#33983,d_fy_year#33984,d_fy_quarter_seq#33985,d_fy_week_seq#33986,d_day_name#33987,d_quarter_name#33988,d_holiday#33989,d_weekend#33990,d_following_holiday#33991,d_first_dom#33992,d_last_dom#33993,d_same_day_ly#33994,d_same_day_lq#33995,d_current_day#33996,... 4 more fields] parquet
:           :  +- Distinct
:           :     +- Project [(d_month_seq#34004 + 3) AS (d_month_seq + 3)#33971]
:           :        +- Filter ((d_year#34007 = 1998) AND (d_moy#34009 = 3))
:           :           +- SubqueryAlias spark_catalog.m.date_dim
:           :              +- Relation spark_catalog.m.date_dim[d_date_sk#34001,d_date_id#34002,d_date#34003,d_month_seq#34004,d_week_seq#34005,d_quarter_seq#34006,d_year#34007,d_dow#34008,d_moy#34009,d_dom#34010,d_qoy#34011,d_fy_year#34012,d_fy_quarter_seq#34013,d_fy_week_seq#34014,d_day_name#34015,d_quarter_name#34016,d_holiday#34017,d_weekend#34018,d_following_holiday#34019,d_first_dom#34020,d_last_dom#34021,d_same_day_ly#34022,d_same_day_lq#34023,d_current_day#34024,... 4 more fields] parquet
:           +- Join Inner
:              :- Join Inner
:              :  :- Join Inner
:              :  :  :- Join Inner
:              :  :  :  :- SubqueryAlias my_customers
:              :  :  :  :  +- CTERelationRef 42, true, [c_customer_sk#81, c_current_addr_sk#85], false
:              :  :  :  +- SubqueryAlias spark_catalog.m.store_sales
:              :  :  :     +- Relation spark_catalog.m.store_sales[ss_sold_date_sk#1248,ss_sold_time_sk#1249,ss_item_sk#1250,ss_customer_sk#1251,ss_cdemo_sk#1252,ss_hdemo_sk#1253,ss_addr_sk#1254,ss_store_sk#1255,ss_promo_sk#1256,ss_ticket_number#1257,ss_quantity#1258,ss_wholesale_cost#1259,ss_list_price#1260,ss_sales_price#1261,ss_ext_discount_amt#1262,ss_ext_sales_price#1263,ss_ext_wholesale_cost#1264,ss_ext_list_price#1265,ss_ext_tax#1266,ss_coupon_amt#1267,ss_net_paid#1268,ss_net_paid_inc_tax#1269,ss_net_profit#1270] parquet
:              :  :  +- SubqueryAlias spark_catalog.m.customer_address
:              :  :     +- Relation spark_catalog.m.customer_address[ca_address_sk#8171,ca_address_id#8172,ca_street_number#8173,ca_street_name#8174,ca_street_type#8175,ca_suite_number#8176,ca_city#8177,ca_county#8178,ca_state#8179,ca_zip#8180,ca_country#8181,ca_gmt_offset#8182,ca_location_type#8183] parquet
:              :  +- SubqueryAlias spark_catalog.m.store
:              :     +- Relation spark_catalog.m.store[s_store_sk#52,s_store_id#53,s_rec_start_date#54,s_rec_end_date#55,s_closed_date_sk#56,s_store_name#57,s_number_employees#58,s_floor_space#59,s_hours#60,s_manager#61,s_market_id#62,s_geography_class#63,s_market_desc#64,s_market_manager#65,s_division_id#66,s_division_name#67,s_company_id#68,s_company_name#69,s_street_number#70,s_street_name#71,s_street_type#72,s_suite_number#73,s_city#74,s_county#75,... 5 more fields] parquet
:              +- SubqueryAlias spark_catalog.m.date_dim
:                 +- Relation spark_catalog.m.date_dim[d_date_sk#33942,d_date_id#33943,d_date#33944,d_month_seq#33945,d_week_seq#33946,d_quarter_seq#33947,d_year#33948,d_dow#33949,d_moy#33950,d_dom#33951,d_qoy#33952,d_fy_year#33953,d_fy_quarter_seq#33954,d_fy_week_seq#33955,d_day_name#33956,d_quarter_name#33957,d_holiday#33958,d_weekend#33959,d_following_holiday#33960,d_first_dom#33961,d_last_dom#33962,d_same_day_ly#33963,d_same_day_lq#33964,d_current_day#33965,... 4 more fields] parquet
:- CTERelationDef 44, false
:  +- SubqueryAlias segments
:     +- Project [cast((revenue#33937 / cast(50 as double)) as int) AS segment#33940]
:        +- SubqueryAlias my_revenue
:           +- CTERelationRef 43, true, [c_customer_sk#81, revenue#33937], false
+- GlobalLimit 100
   +- LocalLimit 100
      +- Sort [segment#33940 ASC NULLS FIRST, num_customers#33929L ASC NULLS FIRST], true
         +- Aggregate [segment#33940], [segment#33940, count(1) AS num_customers#33929L, (segment#33940 * 50) AS segment_base#33930]
            +- SubqueryAlias segments
               +- CTERelationRef 44, true, [segment#33940], false

== Optimized Logical Plan ==
GlobalLimit 100
+- LocalLimit 100
   +- Sort [segment#33940 ASC NULLS FIRST, num_customers#33929L ASC NULLS FIRST], true
      +- Aggregate [segment#33940], [segment#33940, count(1) AS num_customers#33929L, (segment#33940 * 50) AS segment_base#33930]
         +- Aggregate [c_customer_sk#81], [cast((sum(ss_ext_sales_price#1263) / 50.0) as int) AS segment#33940]
            +- Project [c_customer_sk#81, ss_ext_sales_price#1263]
               +- Join Inner, (ss_sold_date_sk#1248 = d_date_sk#33942)
                  :- Project [c_customer_sk#81, ss_sold_date_sk#1248, ss_ext_sales_price#1263]
                  :  +- Join Inner, ((ca_county#8178 = s_county#75) AND (ca_state#8179 = s_state#76))
                  :     :- Project [c_customer_sk#81, ss_sold_date_sk#1248, ss_ext_sales_price#1263, ca_county#8178, ca_state#8179]
                  :     :  +- Join Inner, (c_current_addr_sk#85 = ca_address_sk#8171)
                  :     :     :- Project [c_customer_sk#81, c_current_addr_sk#85, ss_sold_date_sk#1248, ss_ext_sales_price#1263]
                  :     :     :  +- Join Inner, (c_customer_sk#81 = ss_customer_sk#1251)
                  :     :     :     :- Aggregate [c_customer_sk#81, c_current_addr_sk#85], [c_customer_sk#81, c_current_addr_sk#85]
                  :     :     :     :  +- Project [c_customer_sk#81, c_current_addr_sk#85]
                  :     :     :     :     +- Join Inner, (c_customer_sk#81 = customer_sk#33932)
                  :     :     :     :        :- Project [customer_sk#33932]
                  :     :     :     :        :  +- Join Inner, (sold_date_sk#33931 = d_date_sk#24)
                  :     :     :     :        :     :- Project [sold_date_sk#33931, customer_sk#33932]
                  :     :     :     :        :     :  +- Join Inner, (item_sk#33933 = i_item_sk#1271)
                  :     :     :     :        :     :     :- Union false, false
                  :     :     :     :        :     :     :  :- Project [cs_sold_date_sk#461 AS sold_date_sk#33931, cs_bill_customer_sk#464 AS customer_sk#33932, cs_item_sk#476 AS item_sk#33933]
                  :     :     :     :        :     :     :  :  +- Filter (isnotnull(cs_item_sk#476) AND (isnotnull(cs_sold_date_sk#461) AND isnotnull(cs_bill_customer_sk#464)))
                  :     :     :     :        :     :     :  :     +- Relation spark_catalog.m.catalog_sales[cs_sold_date_sk#461,cs_sold_time_sk#462,cs_ship_date_sk#463,cs_bill_customer_sk#464,cs_bill_cdemo_sk#465,cs_bill_hdemo_sk#466,cs_bill_addr_sk#467,cs_ship_customer_sk#468,cs_ship_cdemo_sk#469,cs_ship_hdemo_sk#470,cs_ship_addr_sk#471,cs_call_center_sk#472,cs_catalog_page_sk#473,cs_ship_mode_sk#474,cs_warehouse_sk#475,cs_item_sk#476,cs_promo_sk#477,cs_order_number#478,cs_quantity#479,cs_wholesale_cost#480,cs_list_price#481,cs_sales_price#482,cs_ext_discount_amt#483,cs_ext_sales_price#484,... 10 more fields] parquet
                  :     :     :     :        :     :     :  +- Project [ws_sold_date_sk#427 AS sold_date_sk#33934, ws_bill_customer_sk#431 AS customer_sk#33935, ws_item_sk#430 AS item_sk#33936]
                  :     :     :     :        :     :     :     +- Filter (isnotnull(ws_item_sk#430) AND (isnotnull(ws_sold_date_sk#427) AND isnotnull(ws_bill_customer_sk#431)))
                  :     :     :     :        :     :     :        +- Relation spark_catalog.m.web_sales[ws_sold_date_sk#427,ws_sold_time_sk#428,ws_ship_date_sk#429,ws_item_sk#430,ws_bill_customer_sk#431,ws_bill_cdemo_sk#432,ws_bill_hdemo_sk#433,ws_bill_addr_sk#434,ws_ship_customer_sk#435,ws_ship_cdemo_sk#436,ws_ship_hdemo_sk#437,ws_ship_addr_sk#438,ws_web_page_sk#439,ws_web_site_sk#440,ws_ship_mode_sk#441,ws_warehouse_sk#442,ws_promo_sk#443,ws_order_number#444,ws_quantity#445,ws_wholesale_cost#446,ws_list_price#447,ws_sales_price#448,ws_ext_discount_amt#449,ws_ext_sales_price#450,... 10 more fields] parquet
                  :     :     :     :        :     :     +- Project [i_item_sk#1271]
                  :     :     :     :        :     :        +- Filter (((isnotnull(i_category#1283) AND isnotnull(i_class#1281)) AND ((i_category#1283 = Electronics) AND (i_class#1281 = disk drives))) AND isnotnull(i_item_sk#1271))
                  :     :     :     :        :     :           +- Relation spark_catalog.m.item[i_item_sk#1271,i_item_id#1272,i_rec_start_date#1273,i_rec_end_date#1274,i_item_desc#1275,i_current_price#1276,i_wholesale_cost#1277,i_brand_id#1278,i_brand#1279,i_class_id#1280,i_class#1281,i_category_id#1282,i_category#1283,i_manufact_id#1284,i_manufact#1285,i_size#1286,i_formulation#1287,i_color#1288,i_units#1289,i_container#1290,i_manager_id#1291,i_product_name#1292] parquet
                  :     :     :     :        :     +- Project [d_date_sk#24]
                  :     :     :     :        :        +- Filter (((isnotnull(d_moy#32) AND isnotnull(d_year#30)) AND ((d_moy#32 = 3) AND (d_year#30 = 1998))) AND isnotnull(d_date_sk#24))
                  :     :     :     :        :           +- Relation spark_catalog.m.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet
                  :     :     :     :        +- Project [c_customer_sk#81, c_current_addr_sk#85]
                  :     :     :     :           +- Filter (isnotnull(c_customer_sk#81) AND isnotnull(c_current_addr_sk#85))
                  :     :     :     :              +- Relation spark_catalog.m.customer[c_customer_sk#81,c_customer_id#82,c_current_cdemo_sk#83,c_current_hdemo_sk#84,c_current_addr_sk#85,c_first_shipto_date_sk#86,c_first_sales_date_sk#87,c_salutation#88,c_first_name#89,c_last_name#90,c_preferred_cust_flag#91,c_birth_day#92,c_birth_month#93,c_birth_year#94,c_birth_country#95,c_login#96,c_email_address#97,c_last_review_date#98] parquet
                  :     :     :     +- Project [ss_sold_date_sk#1248, ss_customer_sk#1251, ss_ext_sales_price#1263]
                  :     :     :        +- Filter (isnotnull(ss_customer_sk#1251) AND isnotnull(ss_sold_date_sk#1248))
                  :     :     :           +- Relation spark_catalog.m.store_sales[ss_sold_date_sk#1248,ss_sold_time_sk#1249,ss_item_sk#1250,ss_customer_sk#1251,ss_cdemo_sk#1252,ss_hdemo_sk#1253,ss_addr_sk#1254,ss_store_sk#1255,ss_promo_sk#1256,ss_ticket_number#1257,ss_quantity#1258,ss_wholesale_cost#1259,ss_list_price#1260,ss_sales_price#1261,ss_ext_discount_amt#1262,ss_ext_sales_price#1263,ss_ext_wholesale_cost#1264,ss_ext_list_price#1265,ss_ext_tax#1266,ss_coupon_amt#1267,ss_net_paid#1268,ss_net_paid_inc_tax#1269,ss_net_profit#1270] parquet
                  :     :     +- Project [ca_address_sk#8171, ca_county#8178, ca_state#8179]
                  :     :        +- Filter (isnotnull(ca_address_sk#8171) AND (isnotnull(ca_county#8178) AND isnotnull(ca_state#8179)))
                  :     :           +- Relation spark_catalog.m.customer_address[ca_address_sk#8171,ca_address_id#8172,ca_street_number#8173,ca_street_name#8174,ca_street_type#8175,ca_suite_number#8176,ca_city#8177,ca_county#8178,ca_state#8179,ca_zip#8180,ca_country#8181,ca_gmt_offset#8182,ca_location_type#8183] parquet
                  :     +- Project [s_county#75, s_state#76]
                  :        +- Filter (isnotnull(s_county#75) AND isnotnull(s_state#76))
                  :           +- Relation spark_catalog.m.store[s_store_sk#52,s_store_id#53,s_rec_start_date#54,s_rec_end_date#55,s_closed_date_sk#56,s_store_name#57,s_number_employees#58,s_floor_space#59,s_hours#60,s_manager#61,s_market_id#62,s_geography_class#63,s_market_desc#64,s_market_manager#65,s_division_id#66,s_division_name#67,s_company_id#68,s_company_name#69,s_street_number#70,s_street_name#71,s_street_type#72,s_suite_number#73,s_city#74,s_county#75,... 5 more fields] parquet
                  +- Project [d_date_sk#33942]
                     +- Filter ((isnotnull(d_month_seq#33945) AND ((d_month_seq#33945 >= scalar-subquery#33938 []) AND (d_month_seq#33945 <= scalar-subquery#33939 []))) AND isnotnull(d_date_sk#33942))
                        :  :- Aggregate [(d_month_seq + 1)#33970], [(d_month_seq + 1)#33970]
                        :  :  +- Project [(d_month_seq#33976 + 1) AS (d_month_seq + 1)#33970]
                        :  :     +- Filter ((isnotnull(d_year#33979) AND isnotnull(d_moy#33981)) AND ((d_year#33979 = 1998) AND (d_moy#33981 = 3)))
                        :  :        +- Relation spark_catalog.m.date_dim[d_date_sk#33973,d_date_id#33974,d_date#33975,d_month_seq#33976,d_week_seq#33977,d_quarter_seq#33978,d_year#33979,d_dow#33980,d_moy#33981,d_dom#33982,d_qoy#33983,d_fy_year#33984,d_fy_quarter_seq#33985,d_fy_week_seq#33986,d_day_name#33987,d_quarter_name#33988,d_holiday#33989,d_weekend#33990,d_following_holiday#33991,d_first_dom#33992,d_last_dom#33993,d_same_day_ly#33994,d_same_day_lq#33995,d_current_day#33996,... 4 more fields] parquet
                        :  +- Aggregate [(d_month_seq + 3)#33971], [(d_month_seq + 3)#33971]
                        :     +- Project [(d_month_seq#34004 + 3) AS (d_month_seq + 3)#33971]
                        :        +- Filter ((isnotnull(d_year#34007) AND isnotnull(d_moy#34009)) AND ((d_year#34007 = 1998) AND (d_moy#34009 = 3)))
                        :           +- Relation spark_catalog.m.date_dim[d_date_sk#34001,d_date_id#34002,d_date#34003,d_month_seq#34004,d_week_seq#34005,d_quarter_seq#34006,d_year#34007,d_dow#34008,d_moy#34009,d_dom#34010,d_qoy#34011,d_fy_year#34012,d_fy_quarter_seq#34013,d_fy_week_seq#34014,d_day_name#34015,d_quarter_name#34016,d_holiday#34017,d_weekend#34018,d_following_holiday#34019,d_first_dom#34020,d_last_dom#34021,d_same_day_ly#34022,d_same_day_lq#34023,d_current_day#34024,... 4 more fields] parquet
                        +- Relation spark_catalog.m.date_dim[d_date_sk#33942,d_date_id#33943,d_date#33944,d_month_seq#33945,d_week_seq#33946,d_quarter_seq#33947,d_year#33948,d_dow#33949,d_moy#33950,d_dom#33951,d_qoy#33952,d_fy_year#33953,d_fy_quarter_seq#33954,d_fy_week_seq#33955,d_day_name#33956,d_quarter_name#33957,d_holiday#33958,d_weekend#33959,d_following_holiday#33960,d_first_dom#33961,d_last_dom#33962,d_same_day_ly#33963,d_same_day_lq#33964,d_current_day#33965,... 4 more fields] parquet

== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[segment#33940 ASC NULLS FIRST,num_customers#33929L ASC NULLS FIRST], output=[segment#33940,num_customers#33929L,segment_base#33930])
   +- HashAggregate(keys=[segment#33940], functions=[count(1)], output=[segment#33940, num_customers#33929L, segment_base#33930])
      +- Exchange hashpartitioning(segment#33940, 200), ENSURE_REQUIREMENTS, [plan_id=105827]
         +- HashAggregate(keys=[segment#33940], functions=[partial_count(1)], output=[segment#33940, count#34043L])
            +- HashAggregate(keys=[c_customer_sk#81], functions=[sum(ss_ext_sales_price#1263)], output=[segment#33940])
               +- HashAggregate(keys=[c_customer_sk#81], functions=[partial_sum(ss_ext_sales_price#1263)], output=[c_customer_sk#81, sum#34045])
                  +- Project [c_customer_sk#81, ss_ext_sales_price#1263]
                     +- BroadcastHashJoin [ss_sold_date_sk#1248], [d_date_sk#33942], Inner, BuildRight, false
                        :- Project [c_customer_sk#81, ss_sold_date_sk#1248, ss_ext_sales_price#1263]
                        :  +- BroadcastHashJoin [ca_county#8178, ca_state#8179], [s_county#75, s_state#76], Inner, BuildRight, false
                        :     :- Project [c_customer_sk#81, ss_sold_date_sk#1248, ss_ext_sales_price#1263, ca_county#8178, ca_state#8179]
                        :     :  +- BroadcastHashJoin [c_current_addr_sk#85], [ca_address_sk#8171], Inner, BuildRight, false
                        :     :     :- Project [c_customer_sk#81, c_current_addr_sk#85, ss_sold_date_sk#1248, ss_ext_sales_price#1263]
                        :     :     :  +- SortMergeJoin [c_customer_sk#81], [ss_customer_sk#1251], Inner
                        :     :     :     :- Sort [c_customer_sk#81 ASC NULLS FIRST], false, 0
                        :     :     :     :  +- Exchange hashpartitioning(c_customer_sk#81, 200), ENSURE_REQUIREMENTS, [plan_id=105805]
                        :     :     :     :     +- HashAggregate(keys=[c_customer_sk#81, c_current_addr_sk#85], functions=[], output=[c_customer_sk#81, c_current_addr_sk#85])
                        :     :     :     :        +- Exchange hashpartitioning(c_customer_sk#81, c_current_addr_sk#85, 200), ENSURE_REQUIREMENTS, [plan_id=105801]
                        :     :     :     :           +- HashAggregate(keys=[c_customer_sk#81, c_current_addr_sk#85], functions=[], output=[c_customer_sk#81, c_current_addr_sk#85])
                        :     :     :     :              +- Project [c_customer_sk#81, c_current_addr_sk#85]
                        :     :     :     :                 +- BroadcastHashJoin [customer_sk#33932], [c_customer_sk#81], Inner, BuildRight, false
                        :     :     :     :                    :- Project [customer_sk#33932]
                        :     :     :     :                    :  +- BroadcastHashJoin [sold_date_sk#33931], [d_date_sk#24], Inner, BuildRight, false
                        :     :     :     :                    :     :- Project [sold_date_sk#33931, customer_sk#33932]
                        :     :     :     :                    :     :  +- BroadcastHashJoin [item_sk#33933], [i_item_sk#1271], Inner, BuildRight, false
                        :     :     :     :                    :     :     :- Union
                        :     :     :     :                    :     :     :  :- Project [cs_sold_date_sk#461 AS sold_date_sk#33931, cs_bill_customer_sk#464 AS customer_sk#33932, cs_item_sk#476 AS item_sk#33933]
                        :     :     :     :                    :     :     :  :  +- Filter ((isnotnull(cs_item_sk#476) AND isnotnull(cs_sold_date_sk#461)) AND isnotnull(cs_bill_customer_sk#464))
                        :     :     :     :                    :     :     :  :     +- FileScan parquet spark_catalog.m.catalog_sales[cs_sold_date_sk#461,cs_bill_customer_sk#464,cs_item_sk#476] Batched: true, DataFilters: [isnotnull(cs_item_sk#476), isnotnull(cs_sold_date_sk#461), isnotnull(cs_bill_customer_sk#464)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_item_sk:int>
                        :     :     :     :                    :     :     :  +- Project [ws_sold_date_sk#427 AS sold_date_sk#33934, ws_bill_customer_sk#431 AS customer_sk#33935, ws_item_sk#430 AS item_sk#33936]
                        :     :     :     :                    :     :     :     +- Filter ((isnotnull(ws_item_sk#430) AND isnotnull(ws_sold_date_sk#427)) AND isnotnull(ws_bill_customer_sk#431))
                        :     :     :     :                    :     :     :        +- FileScan parquet spark_catalog.m.web_sales[ws_sold_date_sk#427,ws_item_sk#430,ws_bill_customer_sk#431] Batched: true, DataFilters: [isnotnull(ws_item_sk#430), isnotnull(ws_sold_date_sk#427), isnotnull(ws_bill_customer_sk#431)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int>
                        :     :     :     :                    :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=105788]
                        :     :     :     :                    :     :        +- Project [i_item_sk#1271]
                        :     :     :     :                    :     :           +- Filter ((((isnotnull(i_category#1283) AND isnotnull(i_class#1281)) AND (i_category#1283 = Electronics)) AND (i_class#1281 = disk drives)) AND isnotnull(i_item_sk#1271))
                        :     :     :     :                    :     :              +- FileScan parquet spark_catalog.m.item[i_item_sk#1271,i_class#1281,i_category#1283] Batched: true, DataFilters: [isnotnull(i_category#1283), isnotnull(i_class#1281), (i_category#1283 = Electronics), (i_class#1..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), IsNotNull(i_class), EqualTo(i_category,Electronics), EqualTo(i_class,disk..., ReadSchema: struct<i_item_sk:int,i_class:string,i_category:string>
                        :     :     :     :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=105792]
                        :     :     :     :                    :        +- Project [d_date_sk#24]
                        :     :     :     :                    :           +- Filter ((((isnotnull(d_moy#32) AND isnotnull(d_year#30)) AND (d_moy#32 = 3)) AND (d_year#30 = 1998)) AND isnotnull(d_date_sk#24))
                        :     :     :     :                    :              +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [isnotnull(d_moy#32), isnotnull(d_year#30), (d_moy#32 = 3), (d_year#30 = 1998), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), EqualTo(d_moy,3), EqualTo(d_year,1998), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                        :     :     :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=105796]
                        :     :     :     :                       +- Filter (isnotnull(c_customer_sk#81) AND isnotnull(c_current_addr_sk#85))
                        :     :     :     :                          +- FileScan parquet spark_catalog.m.customer[c_customer_sk#81,c_current_addr_sk#85] Batched: true, DataFilters: [isnotnull(c_customer_sk#81), isnotnull(c_current_addr_sk#85)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
                        :     :     :     +- Sort [ss_customer_sk#1251 ASC NULLS FIRST], false, 0
                        :     :     :        +- Exchange hashpartitioning(ss_customer_sk#1251, 200), ENSURE_REQUIREMENTS, [plan_id=105806]
                        :     :     :           +- Filter (isnotnull(ss_customer_sk#1251) AND isnotnull(ss_sold_date_sk#1248))
                        :     :     :              +- FileScan parquet spark_catalog.m.store_sales[ss_sold_date_sk#1248,ss_customer_sk#1251,ss_ext_sales_price#1263] Batched: true, DataFilters: [isnotnull(ss_customer_sk#1251), isnotnull(ss_sold_date_sk#1248)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_ext_sales_price:double>
                        :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=105812]
                        :     :        +- Filter ((isnotnull(ca_address_sk#8171) AND isnotnull(ca_county#8178)) AND isnotnull(ca_state#8179))
                        :     :           +- FileScan parquet spark_catalog.m.customer_address[ca_address_sk#8171,ca_county#8178,ca_state#8179] Batched: true, DataFilters: [isnotnull(ca_address_sk#8171), isnotnull(ca_county#8178), isnotnull(ca_state#8179)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_county), IsNotNull(ca_state)], ReadSchema: struct<ca_address_sk:int,ca_county:string,ca_state:string>
                        :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false], input[1, string, false]),false), [plan_id=105816]
                        :        +- Filter (isnotnull(s_county#75) AND isnotnull(s_state#76))
                        :           +- FileScan parquet spark_catalog.m.store[s_county#75,s_state#76] Batched: true, DataFilters: [isnotnull(s_county#75), isnotnull(s_state#76)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_county), IsNotNull(s_state)], ReadSchema: struct<s_county:string,s_state:string>
                        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=105820]
                           +- Project [d_date_sk#33942]
                              +- Filter (((isnotnull(d_month_seq#33945) AND (d_month_seq#33945 >= Subquery subquery#33938, [id=#105759])) AND (d_month_seq#33945 <= Subquery subquery#33939, [id=#105760])) AND isnotnull(d_date_sk#33942))
                                 :  :- Subquery subquery#33938, [id=#105759]
                                 :  :  +- AdaptiveSparkPlan isFinalPlan=false
                                 :  :     +- HashAggregate(keys=[(d_month_seq + 1)#33970], functions=[], output=[(d_month_seq + 1)#33970])
                                 :  :        +- Exchange hashpartitioning((d_month_seq + 1)#33970, 200), ENSURE_REQUIREMENTS, [plan_id=105745]
                                 :  :           +- HashAggregate(keys=[(d_month_seq + 1)#33970], functions=[], output=[(d_month_seq + 1)#33970])
                                 :  :              +- Project [(d_month_seq#33976 + 1) AS (d_month_seq + 1)#33970]
                                 :  :                 +- Filter (((isnotnull(d_year#33979) AND isnotnull(d_moy#33981)) AND (d_year#33979 = 1998)) AND (d_moy#33981 = 3))
                                 :  :                    +- FileScan parquet spark_catalog.m.date_dim[d_month_seq#33976,d_year#33979,d_moy#33981] Batched: true, DataFilters: [isnotnull(d_year#33979), isnotnull(d_moy#33981), (d_year#33979 = 1998), (d_moy#33981 = 3)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1998), EqualTo(d_moy,3)], ReadSchema: struct<d_month_seq:int,d_year:int,d_moy:int>
                                 :  +- Subquery subquery#33939, [id=#105760]
                                 :     +- AdaptiveSparkPlan isFinalPlan=false
                                 :        +- HashAggregate(keys=[(d_month_seq + 3)#33971], functions=[], output=[(d_month_seq + 3)#33971])
                                 :           +- Exchange hashpartitioning((d_month_seq + 3)#33971, 200), ENSURE_REQUIREMENTS, [plan_id=105757]
                                 :              +- HashAggregate(keys=[(d_month_seq + 3)#33971], functions=[], output=[(d_month_seq + 3)#33971])
                                 :                 +- Project [(d_month_seq#34004 + 3) AS (d_month_seq + 3)#33971]
                                 :                    +- Filter (((isnotnull(d_year#34007) AND isnotnull(d_moy#34009)) AND (d_year#34007 = 1998)) AND (d_moy#34009 = 3))
                                 :                       +- FileScan parquet spark_catalog.m.date_dim[d_month_seq#34004,d_year#34007,d_moy#34009] Batched: true, DataFilters: [isnotnull(d_year#34007), isnotnull(d_moy#34009), (d_year#34007 = 1998), (d_moy#34009 = 3)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1998), EqualTo(d_moy,3)], ReadSchema: struct<d_month_seq:int,d_year:int,d_moy:int>
                                 +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#33942,d_month_seq#33945] Batched: true, DataFilters: [isnotnull(d_month_seq#33945), isnotnull(d_date_sk#33942)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
