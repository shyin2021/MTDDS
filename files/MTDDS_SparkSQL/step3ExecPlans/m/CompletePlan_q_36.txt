== Parsed Logical Plan ==
'GlobalLimit 100
+- 'LocalLimit 100
   +- 'Sort ['lochierarchy DESC NULLS LAST, CASE WHEN (('grouping('i_category) + 'grouping('i_class)) = 0) THEN 'i_category END ASC NULLS FIRST, 'rank_within_parent ASC NULLS FIRST], true
      +- 'Aggregate [rollup(Vector(0), Vector(1), 'i_category, 'i_class)], [('sum('ss_net_profit) / 'sum('ss_ext_sales_price)) AS gross_margin#29705, 'i_category, 'i_class, ('grouping('i_category) + 'grouping('i_class)) AS lochierarchy#29706, 'rank() windowspecdefinition(('grouping('i_category) + 'grouping('i_class)), CASE WHEN ('grouping('i_class) = 0) THEN 'i_category END, ('sum('ss_net_profit) / 'sum('ss_ext_sales_price)) ASC NULLS FIRST, unspecifiedframe$()) AS rank_within_parent#29707]
         +- 'Filter (((('d1.d_year = 1998) AND ('d1.d_date_sk = 'ss_sold_date_sk)) AND ('i_item_sk = 'ss_item_sk)) AND (('s_store_sk = 'ss_store_sk) AND 's_state IN (TN,AL,SD,TN,SD,SD,SD,SD)))
            +- 'Join Inner
               :- 'Join Inner
               :  :- 'Join Inner
               :  :  :- 'UnresolvedRelation [store_sales], [], false
               :  :  +- 'SubqueryAlias d1
               :  :     +- 'UnresolvedRelation [date_dim], [], false
               :  +- 'UnresolvedRelation [item], [], false
               +- 'UnresolvedRelation [store], [], false

== Analyzed Logical Plan ==
gross_margin: double, i_category: string, i_class: string, lochierarchy: tinyint, rank_within_parent: int
GlobalLimit 100
+- LocalLimit 100
   +- Project [gross_margin#29705, i_category#29717, i_class#29718, lochierarchy#29706, rank_within_parent#29707]
      +- Sort [lochierarchy#29706 DESC NULLS LAST, CASE WHEN (cast((cast((shiftright(spark_grouping_id#29716L, 1) & 1) as tinyint) + cast((shiftright(spark_grouping_id#29716L, 0) & 1) as tinyint)) as int) = 0) THEN i_category#29717 END ASC NULLS FIRST, rank_within_parent#29707 ASC NULLS FIRST], true
         +- Project [gross_margin#29705, i_category#29717, i_class#29718, lochierarchy#29706, rank_within_parent#29707, spark_grouping_id#29716L]
            +- Project [gross_margin#29705, i_category#29717, i_class#29718, lochierarchy#29706, _w0#29727, _w1#29731, _w2#29732, rank_within_parent#29707, rank_within_parent#29707, spark_grouping_id#29716L]
               +- Window [rank(_w0#29727) windowspecdefinition(_w1#29731, _w2#29732, _w0#29727 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#29707], [_w1#29731, _w2#29732], [_w0#29727 ASC NULLS FIRST]
                  +- Aggregate [i_category#29717, i_class#29718, spark_grouping_id#29716L], [(sum(ss_net_profit#1270) / sum(ss_ext_sales_price#1263)) AS gross_margin#29705, i_category#29717, i_class#29718, (cast((shiftright(spark_grouping_id#29716L, 1) & 1) as tinyint) + cast((shiftright(spark_grouping_id#29716L, 0) & 1) as tinyint)) AS lochierarchy#29706, (sum(ss_net_profit#1270) / sum(ss_ext_sales_price#1263)) AS _w0#29727, (cast((shiftright(spark_grouping_id#29716L, 1) & 1) as tinyint) + cast((shiftright(spark_grouping_id#29716L, 0) & 1) as tinyint)) AS _w1#29731, CASE WHEN (cast(cast((shiftright(spark_grouping_id#29716L, 0) & 1) as tinyint) as int) = 0) THEN i_category#29717 END AS _w2#29732, spark_grouping_id#29716L]
                     +- Expand [[ss_sold_date_sk#1248, ss_sold_time_sk#1249, ss_item_sk#1250, ss_customer_sk#1251, ss_cdemo_sk#1252, ss_hdemo_sk#1253, ss_addr_sk#1254, ss_store_sk#1255, ss_promo_sk#1256, ss_ticket_number#1257, ss_quantity#1258, ss_wholesale_cost#1259, ss_list_price#1260, ss_sales_price#1261, ss_ext_discount_amt#1262, ss_ext_sales_price#1263, ss_ext_wholesale_cost#1264, ss_ext_list_price#1265, ss_ext_tax#1266, ss_coupon_amt#1267, ss_net_paid#1268, ss_net_paid_inc_tax#1269, ss_net_profit#1270, d_date_sk#24, ... 81 more fields], [ss_sold_date_sk#1248, ss_sold_time_sk#1249, ss_item_sk#1250, ss_customer_sk#1251, ss_cdemo_sk#1252, ss_hdemo_sk#1253, ss_addr_sk#1254, ss_store_sk#1255, ss_promo_sk#1256, ss_ticket_number#1257, ss_quantity#1258, ss_wholesale_cost#1259, ss_list_price#1260, ss_sales_price#1261, ss_ext_discount_amt#1262, ss_ext_sales_price#1263, ss_ext_wholesale_cost#1264, ss_ext_list_price#1265, ss_ext_tax#1266, ss_coupon_amt#1267, ss_net_paid#1268, ss_net_paid_inc_tax#1269, ss_net_profit#1270, d_date_sk#24, ... 81 more fields], [ss_sold_date_sk#1248, ss_sold_time_sk#1249, ss_item_sk#1250, ss_customer_sk#1251, ss_cdemo_sk#1252, ss_hdemo_sk#1253, ss_addr_sk#1254, ss_store_sk#1255, ss_promo_sk#1256, ss_ticket_number#1257, ss_quantity#1258, ss_wholesale_cost#1259, ss_list_price#1260, ss_sales_price#1261, ss_ext_discount_amt#1262, ss_ext_sales_price#1263, ss_ext_wholesale_cost#1264, ss_ext_list_price#1265, ss_ext_tax#1266, ss_coupon_amt#1267, ss_net_paid#1268, ss_net_paid_inc_tax#1269, ss_net_profit#1270, d_date_sk#24, ... 81 more fields]], [ss_sold_date_sk#1248, ss_sold_time_sk#1249, ss_item_sk#1250, ss_customer_sk#1251, ss_cdemo_sk#1252, ss_hdemo_sk#1253, ss_addr_sk#1254, ss_store_sk#1255, ss_promo_sk#1256, ss_ticket_number#1257, ss_quantity#1258, ss_wholesale_cost#1259, ss_list_price#1260, ss_sales_price#1261, ss_ext_discount_amt#1262, ss_ext_sales_price#1263, ss_ext_wholesale_cost#1264, ss_ext_list_price#1265, ss_ext_tax#1266, ss_coupon_amt#1267, ss_net_paid#1268, ss_net_paid_inc_tax#1269, ss_net_profit#1270, d_date_sk#24, ... 81 more fields]
                        +- Project [ss_sold_date_sk#1248, ss_sold_time_sk#1249, ss_item_sk#1250, ss_customer_sk#1251, ss_cdemo_sk#1252, ss_hdemo_sk#1253, ss_addr_sk#1254, ss_store_sk#1255, ss_promo_sk#1256, ss_ticket_number#1257, ss_quantity#1258, ss_wholesale_cost#1259, ss_list_price#1260, ss_sales_price#1261, ss_ext_discount_amt#1262, ss_ext_sales_price#1263, ss_ext_wholesale_cost#1264, ss_ext_list_price#1265, ss_ext_tax#1266, ss_coupon_amt#1267, ss_net_paid#1268, ss_net_paid_inc_tax#1269, ss_net_profit#1270, d_date_sk#24, ... 80 more fields]
                           +- Filter ((((d_year#30 = 1998) AND (d_date_sk#24 = ss_sold_date_sk#1248)) AND (i_item_sk#1271 = ss_item_sk#1250)) AND ((s_store_sk#52 = ss_store_sk#1255) AND s_state#76 IN (TN,AL,SD,TN,SD,SD,SD,SD)))
                              +- Join Inner
                                 :- Join Inner
                                 :  :- Join Inner
                                 :  :  :- SubqueryAlias spark_catalog.m.store_sales
                                 :  :  :  +- Relation spark_catalog.m.store_sales[ss_sold_date_sk#1248,ss_sold_time_sk#1249,ss_item_sk#1250,ss_customer_sk#1251,ss_cdemo_sk#1252,ss_hdemo_sk#1253,ss_addr_sk#1254,ss_store_sk#1255,ss_promo_sk#1256,ss_ticket_number#1257,ss_quantity#1258,ss_wholesale_cost#1259,ss_list_price#1260,ss_sales_price#1261,ss_ext_discount_amt#1262,ss_ext_sales_price#1263,ss_ext_wholesale_cost#1264,ss_ext_list_price#1265,ss_ext_tax#1266,ss_coupon_amt#1267,ss_net_paid#1268,ss_net_paid_inc_tax#1269,ss_net_profit#1270] parquet
                                 :  :  +- SubqueryAlias d1
                                 :  :     +- SubqueryAlias spark_catalog.m.date_dim
                                 :  :        +- Relation spark_catalog.m.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet
                                 :  +- SubqueryAlias spark_catalog.m.item
                                 :     +- Relation spark_catalog.m.item[i_item_sk#1271,i_item_id#1272,i_rec_start_date#1273,i_rec_end_date#1274,i_item_desc#1275,i_current_price#1276,i_wholesale_cost#1277,i_brand_id#1278,i_brand#1279,i_class_id#1280,i_class#1281,i_category_id#1282,i_category#1283,i_manufact_id#1284,i_manufact#1285,i_size#1286,i_formulation#1287,i_color#1288,i_units#1289,i_container#1290,i_manager_id#1291,i_product_name#1292] parquet
                                 +- SubqueryAlias spark_catalog.m.store
                                    +- Relation spark_catalog.m.store[s_store_sk#52,s_store_id#53,s_rec_start_date#54,s_rec_end_date#55,s_closed_date_sk#56,s_store_name#57,s_number_employees#58,s_floor_space#59,s_hours#60,s_manager#61,s_market_id#62,s_geography_class#63,s_market_desc#64,s_market_manager#65,s_division_id#66,s_division_name#67,s_company_id#68,s_company_name#69,s_street_number#70,s_street_name#71,s_street_type#72,s_suite_number#73,s_city#74,s_county#75,... 5 more fields] parquet

== Optimized Logical Plan ==
GlobalLimit 100
+- LocalLimit 100
   +- Project [gross_margin#29705, i_category#29717, i_class#29718, lochierarchy#29706, rank_within_parent#29707]
      +- Sort [lochierarchy#29706 DESC NULLS LAST, CASE WHEN ((cast((shiftright(spark_grouping_id#29716L, 1) & 1) as tinyint) + cast((shiftright(spark_grouping_id#29716L, 0) & 1) as tinyint)) = 0) THEN i_category#29717 END ASC NULLS FIRST, rank_within_parent#29707 ASC NULLS FIRST], true
         +- Project [gross_margin#29705, i_category#29717, i_class#29718, lochierarchy#29706, rank_within_parent#29707, spark_grouping_id#29716L]
            +- Window [rank(_w0#29727) windowspecdefinition(_w1#29731, _w2#29732, _w0#29727 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#29707], [_w1#29731, _w2#29732], [_w0#29727 ASC NULLS FIRST]
               +- Aggregate [i_category#29717, i_class#29718, spark_grouping_id#29716L], [(sum(ss_net_profit#1270) / sum(ss_ext_sales_price#1263)) AS gross_margin#29705, i_category#29717, i_class#29718, (cast((shiftright(spark_grouping_id#29716L, 1) & 1) as tinyint) + cast((shiftright(spark_grouping_id#29716L, 0) & 1) as tinyint)) AS lochierarchy#29706, (sum(ss_net_profit#1270) / sum(ss_ext_sales_price#1263)) AS _w0#29727, (cast((shiftright(spark_grouping_id#29716L, 1) & 1) as tinyint) + cast((shiftright(spark_grouping_id#29716L, 0) & 1) as tinyint)) AS _w1#29731, CASE WHEN (cast((shiftright(spark_grouping_id#29716L, 0) & 1) as tinyint) = 0) THEN i_category#29717 END AS _w2#29732, spark_grouping_id#29716L]
                  +- Expand [[ss_ext_sales_price#1263, ss_net_profit#1270, i_category#1283, i_class#1281, 0], [ss_ext_sales_price#1263, ss_net_profit#1270, i_category#1283, null, 1], [ss_ext_sales_price#1263, ss_net_profit#1270, null, null, 3]], [ss_ext_sales_price#1263, ss_net_profit#1270, i_category#29717, i_class#29718, spark_grouping_id#29716L]
                     +- Project [ss_ext_sales_price#1263, ss_net_profit#1270, i_category#1283, i_class#1281]
                        +- Join Inner, (s_store_sk#52 = ss_store_sk#1255)
                           :- Project [ss_store_sk#1255, ss_ext_sales_price#1263, ss_net_profit#1270, i_class#1281, i_category#1283]
                           :  +- Join Inner, (i_item_sk#1271 = ss_item_sk#1250)
                           :     :- Project [ss_item_sk#1250, ss_store_sk#1255, ss_ext_sales_price#1263, ss_net_profit#1270]
                           :     :  +- Join Inner, (d_date_sk#24 = ss_sold_date_sk#1248)
                           :     :     :- Project [ss_sold_date_sk#1248, ss_item_sk#1250, ss_store_sk#1255, ss_ext_sales_price#1263, ss_net_profit#1270]
                           :     :     :  +- Filter (isnotnull(ss_sold_date_sk#1248) AND (isnotnull(ss_item_sk#1250) AND isnotnull(ss_store_sk#1255)))
                           :     :     :     +- Relation spark_catalog.m.store_sales[ss_sold_date_sk#1248,ss_sold_time_sk#1249,ss_item_sk#1250,ss_customer_sk#1251,ss_cdemo_sk#1252,ss_hdemo_sk#1253,ss_addr_sk#1254,ss_store_sk#1255,ss_promo_sk#1256,ss_ticket_number#1257,ss_quantity#1258,ss_wholesale_cost#1259,ss_list_price#1260,ss_sales_price#1261,ss_ext_discount_amt#1262,ss_ext_sales_price#1263,ss_ext_wholesale_cost#1264,ss_ext_list_price#1265,ss_ext_tax#1266,ss_coupon_amt#1267,ss_net_paid#1268,ss_net_paid_inc_tax#1269,ss_net_profit#1270] parquet
                           :     :     +- Project [d_date_sk#24]
                           :     :        +- Filter ((isnotnull(d_year#30) AND (d_year#30 = 1998)) AND isnotnull(d_date_sk#24))
                           :     :           +- Relation spark_catalog.m.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet
                           :     +- Project [i_item_sk#1271, i_class#1281, i_category#1283]
                           :        +- Filter isnotnull(i_item_sk#1271)
                           :           +- Relation spark_catalog.m.item[i_item_sk#1271,i_item_id#1272,i_rec_start_date#1273,i_rec_end_date#1274,i_item_desc#1275,i_current_price#1276,i_wholesale_cost#1277,i_brand_id#1278,i_brand#1279,i_class_id#1280,i_class#1281,i_category_id#1282,i_category#1283,i_manufact_id#1284,i_manufact#1285,i_size#1286,i_formulation#1287,i_color#1288,i_units#1289,i_container#1290,i_manager_id#1291,i_product_name#1292] parquet
                           +- Project [s_store_sk#52]
                              +- Filter (s_state#76 IN (TN,AL,SD) AND isnotnull(s_store_sk#52))
                                 +- Relation spark_catalog.m.store[s_store_sk#52,s_store_id#53,s_rec_start_date#54,s_rec_end_date#55,s_closed_date_sk#56,s_store_name#57,s_number_employees#58,s_floor_space#59,s_hours#60,s_manager#61,s_market_id#62,s_geography_class#63,s_market_desc#64,s_market_manager#65,s_division_id#66,s_division_name#67,s_company_id#68,s_company_name#69,s_street_number#70,s_street_name#71,s_street_type#72,s_suite_number#73,s_city#74,s_county#75,... 5 more fields] parquet

== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[lochierarchy#29706 DESC NULLS LAST,CASE WHEN ((cast((shiftright(spark_grouping_id#29716L, 1) & 1) as tinyint) + cast((shiftright(spark_grouping_id#29716L, 0) & 1) as tinyint)) = 0) THEN i_category#29717 END ASC NULLS FIRST,rank_within_parent#29707 ASC NULLS FIRST], output=[gross_margin#29705,i_category#29717,i_class#29718,lochierarchy#29706,rank_within_parent#29707])
   +- Project [gross_margin#29705, i_category#29717, i_class#29718, lochierarchy#29706, rank_within_parent#29707, spark_grouping_id#29716L]
      +- Window [rank(_w0#29727) windowspecdefinition(_w1#29731, _w2#29732, _w0#29727 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#29707], [_w1#29731, _w2#29732], [_w0#29727 ASC NULLS FIRST]
         +- Sort [_w1#29731 ASC NULLS FIRST, _w2#29732 ASC NULLS FIRST, _w0#29727 ASC NULLS FIRST], false, 0
            +- Exchange hashpartitioning(_w1#29731, _w2#29732, 200), ENSURE_REQUIREMENTS, [plan_id=85868]
               +- HashAggregate(keys=[i_category#29717, i_class#29718, spark_grouping_id#29716L], functions=[sum(ss_net_profit#1270), sum(ss_ext_sales_price#1263)], output=[gross_margin#29705, i_category#29717, i_class#29718, lochierarchy#29706, _w0#29727, _w1#29731, _w2#29732, spark_grouping_id#29716L])
                  +- Exchange hashpartitioning(i_category#29717, i_class#29718, spark_grouping_id#29716L, 200), ENSURE_REQUIREMENTS, [plan_id=85865]
                     +- HashAggregate(keys=[i_category#29717, i_class#29718, spark_grouping_id#29716L], functions=[partial_sum(ss_net_profit#1270), partial_sum(ss_ext_sales_price#1263)], output=[i_category#29717, i_class#29718, spark_grouping_id#29716L, sum#29760, sum#29761])
                        +- Expand [[ss_ext_sales_price#1263, ss_net_profit#1270, i_category#1283, i_class#1281, 0], [ss_ext_sales_price#1263, ss_net_profit#1270, i_category#1283, null, 1], [ss_ext_sales_price#1263, ss_net_profit#1270, null, null, 3]], [ss_ext_sales_price#1263, ss_net_profit#1270, i_category#29717, i_class#29718, spark_grouping_id#29716L]
                           +- Project [ss_ext_sales_price#1263, ss_net_profit#1270, i_category#1283, i_class#1281]
                              +- BroadcastHashJoin [ss_store_sk#1255], [s_store_sk#52], Inner, BuildRight, false
                                 :- Project [ss_store_sk#1255, ss_ext_sales_price#1263, ss_net_profit#1270, i_class#1281, i_category#1283]
                                 :  +- BroadcastHashJoin [ss_item_sk#1250], [i_item_sk#1271], Inner, BuildRight, false
                                 :     :- Project [ss_item_sk#1250, ss_store_sk#1255, ss_ext_sales_price#1263, ss_net_profit#1270]
                                 :     :  +- BroadcastHashJoin [ss_sold_date_sk#1248], [d_date_sk#24], Inner, BuildRight, false
                                 :     :     :- Filter ((isnotnull(ss_sold_date_sk#1248) AND isnotnull(ss_item_sk#1250)) AND isnotnull(ss_store_sk#1255))
                                 :     :     :  +- FileScan parquet spark_catalog.m.store_sales[ss_sold_date_sk#1248,ss_item_sk#1250,ss_store_sk#1255,ss_ext_sales_price#1263,ss_net_profit#1270] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#1248), isnotnull(ss_item_sk#1250), isnotnull(ss_store_sk#1255)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_ext_sales_price:double,ss_net_profit...
                                 :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=85851]
                                 :     :        +- Project [d_date_sk#24]
                                 :     :           +- Filter ((isnotnull(d_year#30) AND (d_year#30 = 1998)) AND isnotnull(d_date_sk#24))
                                 :     :              +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#24,d_year#30] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 1998), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1998), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=85855]
                                 :        +- Filter isnotnull(i_item_sk#1271)
                                 :           +- FileScan parquet spark_catalog.m.item[i_item_sk#1271,i_class#1281,i_category#1283] Batched: true, DataFilters: [isnotnull(i_item_sk#1271)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_class:string,i_category:string>
                                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=85859]
                                    +- Project [s_store_sk#52]
                                       +- Filter (s_state#76 IN (TN,AL,SD) AND isnotnull(s_store_sk#52))
                                          +- FileScan parquet spark_catalog.m.store[s_store_sk#52,s_state#76] Batched: true, DataFilters: [s_state#76 IN (TN,AL,SD), isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store], PartitionFilters: [], PushedFilters: [In(s_state, [AL,SD,TN]), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_state:string>
