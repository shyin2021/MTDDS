== Parsed Logical Plan ==
'GlobalLimit 100
+- 'LocalLimit 100
   +- 'Sort ['w_state ASC NULLS FIRST, 'i_item_id ASC NULLS FIRST], true
      +- 'Aggregate ['w_state, 'i_item_id], ['w_state, 'i_item_id, 'sum(CASE WHEN (cast('d_date as date) < cast(1999-04-25 as date)) THEN ('cs_sales_price - 'coalesce('cr_refunded_cash, 0)) ELSE 0 END) AS sales_before#31260, 'sum(CASE WHEN (cast('d_date as date) >= cast(1999-04-25 as date)) THEN ('cs_sales_price - 'coalesce('cr_refunded_cash, 0)) ELSE 0 END) AS sales_after#31261]
         +- 'Filter ((((('i_current_price >= 0.99) AND ('i_current_price <= 1.49)) AND ('i_item_sk = 'cs_item_sk)) AND ('cs_warehouse_sk = 'w_warehouse_sk)) AND (('cs_sold_date_sk = 'd_date_sk) AND (('d_date >= (cast(1999-04-25 as date) - 30)) AND ('d_date <= (cast(1999-04-25 as date) + 30)))))
            +- 'Join Inner
               :- 'Join Inner
               :  :- 'Join Inner
               :  :  :- 'Join LeftOuter, (('cs_order_number = 'cr_order_number) AND ('cs_item_sk = 'cr_item_sk))
               :  :  :  :- 'UnresolvedRelation [catalog_sales], [], false
               :  :  :  +- 'UnresolvedRelation [catalog_returns], [], false
               :  :  +- 'UnresolvedRelation [warehouse], [], false
               :  +- 'UnresolvedRelation [item], [], false
               +- 'UnresolvedRelation [date_dim], [], false

== Analyzed Logical Plan ==
w_state: string, i_item_id: string, sales_before: double, sales_after: double
GlobalLimit 100
+- LocalLimit 100
   +- Sort [w_state#21230 ASC NULLS FIRST, i_item_id#1272 ASC NULLS FIRST], true
      +- Aggregate [w_state#21230, i_item_id#1272], [w_state#21230, i_item_id#1272, sum(CASE WHEN (cast(d_date#26 as date) < cast(1999-04-25 as date)) THEN (cs_sales_price#482 - coalesce(cr_refunded_cash#7834, cast(0 as double))) ELSE cast(0 as double) END) AS sales_before#31260, sum(CASE WHEN (cast(d_date#26 as date) >= cast(1999-04-25 as date)) THEN (cs_sales_price#482 - coalesce(cr_refunded_cash#7834, cast(0 as double))) ELSE cast(0 as double) END) AS sales_after#31261]
         +- Filter (((((i_current_price#1276 >= cast(0.99 as double)) AND (i_current_price#1276 <= cast(1.49 as double))) AND (i_item_sk#1271 = cs_item_sk#476)) AND (cs_warehouse_sk#475 = w_warehouse_sk#21220)) AND ((cs_sold_date_sk#461 = d_date_sk#24) AND ((cast(d_date#26 as date) >= date_sub(cast(1999-04-25 as date), 30)) AND (cast(d_date#26 as date) <= date_add(cast(1999-04-25 as date), 30)))))
            +- Join Inner
               :- Join Inner
               :  :- Join Inner
               :  :  :- Join LeftOuter, ((cs_order_number#478 = cr_order_number#7827) AND (cs_item_sk#476 = cr_item_sk#7813))
               :  :  :  :- SubqueryAlias spark_catalog.m.catalog_sales
               :  :  :  :  +- Relation spark_catalog.m.catalog_sales[cs_sold_date_sk#461,cs_sold_time_sk#462,cs_ship_date_sk#463,cs_bill_customer_sk#464,cs_bill_cdemo_sk#465,cs_bill_hdemo_sk#466,cs_bill_addr_sk#467,cs_ship_customer_sk#468,cs_ship_cdemo_sk#469,cs_ship_hdemo_sk#470,cs_ship_addr_sk#471,cs_call_center_sk#472,cs_catalog_page_sk#473,cs_ship_mode_sk#474,cs_warehouse_sk#475,cs_item_sk#476,cs_promo_sk#477,cs_order_number#478,cs_quantity#479,cs_wholesale_cost#480,cs_list_price#481,cs_sales_price#482,cs_ext_discount_amt#483,cs_ext_sales_price#484,... 10 more fields] parquet
               :  :  :  +- SubqueryAlias spark_catalog.m.catalog_returns
               :  :  :     +- Relation spark_catalog.m.catalog_returns[cr_returned_date_sk#7811,cr_returned_time_sk#7812,cr_item_sk#7813,cr_refunded_customer_sk#7814,cr_refunded_cdemo_sk#7815,cr_refunded_hdemo_sk#7816,cr_refunded_addr_sk#7817,cr_returning_customer_sk#7818,cr_returning_cdemo_sk#7819,cr_returning_hdemo_sk#7820,cr_returning_addr_sk#7821,cr_call_center_sk#7822,cr_catalog_page_sk#7823,cr_ship_mode_sk#7824,cr_warehouse_sk#7825,cr_reason_sk#7826,cr_order_number#7827,cr_return_quantity#7828,cr_return_amount#7829,cr_return_tax#7830,cr_return_amt_inc_tax#7831,cr_fee#7832,cr_return_ship_cost#7833,cr_refunded_cash#7834,... 3 more fields] parquet
               :  :  +- SubqueryAlias spark_catalog.m.warehouse
               :  :     +- Relation spark_catalog.m.warehouse[w_warehouse_sk#21220,w_warehouse_id#21221,w_warehouse_name#21222,w_warehouse_sq_ft#21223,w_street_number#21224,w_street_name#21225,w_street_type#21226,w_suite_number#21227,w_city#21228,w_county#21229,w_state#21230,w_zip#21231,w_country#21232,w_gmt_offset#21233] parquet
               :  +- SubqueryAlias spark_catalog.m.item
               :     +- Relation spark_catalog.m.item[i_item_sk#1271,i_item_id#1272,i_rec_start_date#1273,i_rec_end_date#1274,i_item_desc#1275,i_current_price#1276,i_wholesale_cost#1277,i_brand_id#1278,i_brand#1279,i_class_id#1280,i_class#1281,i_category_id#1282,i_category#1283,i_manufact_id#1284,i_manufact#1285,i_size#1286,i_formulation#1287,i_color#1288,i_units#1289,i_container#1290,i_manager_id#1291,i_product_name#1292] parquet
               +- SubqueryAlias spark_catalog.m.date_dim
                  +- Relation spark_catalog.m.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet

== Optimized Logical Plan ==
GlobalLimit 100
+- LocalLimit 100
   +- Sort [w_state#21230 ASC NULLS FIRST, i_item_id#1272 ASC NULLS FIRST], true
      +- Aggregate [w_state#21230, i_item_id#1272], [w_state#21230, i_item_id#1272, sum(CASE WHEN (cast(d_date#26 as date) < 1999-04-25) THEN (cs_sales_price#482 - coalesce(cr_refunded_cash#7834, 0.0)) ELSE 0.0 END) AS sales_before#31260, sum(CASE WHEN (cast(d_date#26 as date) >= 1999-04-25) THEN (cs_sales_price#482 - coalesce(cr_refunded_cash#7834, 0.0)) ELSE 0.0 END) AS sales_after#31261]
         +- Project [cs_sales_price#482, cr_refunded_cash#7834, w_state#21230, i_item_id#1272, d_date#26]
            +- Join Inner, (cs_sold_date_sk#461 = d_date_sk#24)
               :- Project [cs_sold_date_sk#461, cs_sales_price#482, cr_refunded_cash#7834, w_state#21230, i_item_id#1272]
               :  +- Join Inner, (i_item_sk#1271 = cs_item_sk#476)
               :     :- Project [cs_sold_date_sk#461, cs_item_sk#476, cs_sales_price#482, cr_refunded_cash#7834, w_state#21230]
               :     :  +- Join Inner, (cs_warehouse_sk#475 = w_warehouse_sk#21220)
               :     :     :- Project [cs_sold_date_sk#461, cs_warehouse_sk#475, cs_item_sk#476, cs_sales_price#482, cr_refunded_cash#7834]
               :     :     :  +- Join LeftOuter, ((cs_order_number#478 = cr_order_number#7827) AND (cs_item_sk#476 = cr_item_sk#7813))
               :     :     :     :- Project [cs_sold_date_sk#461, cs_warehouse_sk#475, cs_item_sk#476, cs_order_number#478, cs_sales_price#482]
               :     :     :     :  +- Filter (isnotnull(cs_warehouse_sk#475) AND (isnotnull(cs_item_sk#476) AND isnotnull(cs_sold_date_sk#461)))
               :     :     :     :     +- Relation spark_catalog.m.catalog_sales[cs_sold_date_sk#461,cs_sold_time_sk#462,cs_ship_date_sk#463,cs_bill_customer_sk#464,cs_bill_cdemo_sk#465,cs_bill_hdemo_sk#466,cs_bill_addr_sk#467,cs_ship_customer_sk#468,cs_ship_cdemo_sk#469,cs_ship_hdemo_sk#470,cs_ship_addr_sk#471,cs_call_center_sk#472,cs_catalog_page_sk#473,cs_ship_mode_sk#474,cs_warehouse_sk#475,cs_item_sk#476,cs_promo_sk#477,cs_order_number#478,cs_quantity#479,cs_wholesale_cost#480,cs_list_price#481,cs_sales_price#482,cs_ext_discount_amt#483,cs_ext_sales_price#484,... 10 more fields] parquet
               :     :     :     +- Project [cr_item_sk#7813, cr_order_number#7827, cr_refunded_cash#7834]
               :     :     :        +- Filter (isnotnull(cr_order_number#7827) AND isnotnull(cr_item_sk#7813))
               :     :     :           +- Relation spark_catalog.m.catalog_returns[cr_returned_date_sk#7811,cr_returned_time_sk#7812,cr_item_sk#7813,cr_refunded_customer_sk#7814,cr_refunded_cdemo_sk#7815,cr_refunded_hdemo_sk#7816,cr_refunded_addr_sk#7817,cr_returning_customer_sk#7818,cr_returning_cdemo_sk#7819,cr_returning_hdemo_sk#7820,cr_returning_addr_sk#7821,cr_call_center_sk#7822,cr_catalog_page_sk#7823,cr_ship_mode_sk#7824,cr_warehouse_sk#7825,cr_reason_sk#7826,cr_order_number#7827,cr_return_quantity#7828,cr_return_amount#7829,cr_return_tax#7830,cr_return_amt_inc_tax#7831,cr_fee#7832,cr_return_ship_cost#7833,cr_refunded_cash#7834,... 3 more fields] parquet
               :     :     +- Project [w_warehouse_sk#21220, w_state#21230]
               :     :        +- Filter isnotnull(w_warehouse_sk#21220)
               :     :           +- Relation spark_catalog.m.warehouse[w_warehouse_sk#21220,w_warehouse_id#21221,w_warehouse_name#21222,w_warehouse_sq_ft#21223,w_street_number#21224,w_street_name#21225,w_street_type#21226,w_suite_number#21227,w_city#21228,w_county#21229,w_state#21230,w_zip#21231,w_country#21232,w_gmt_offset#21233] parquet
               :     +- Project [i_item_sk#1271, i_item_id#1272]
               :        +- Filter ((isnotnull(i_current_price#1276) AND ((i_current_price#1276 >= 0.99) AND (i_current_price#1276 <= 1.49))) AND isnotnull(i_item_sk#1271))
               :           +- Relation spark_catalog.m.item[i_item_sk#1271,i_item_id#1272,i_rec_start_date#1273,i_rec_end_date#1274,i_item_desc#1275,i_current_price#1276,i_wholesale_cost#1277,i_brand_id#1278,i_brand#1279,i_class_id#1280,i_class#1281,i_category_id#1282,i_category#1283,i_manufact_id#1284,i_manufact#1285,i_size#1286,i_formulation#1287,i_color#1288,i_units#1289,i_container#1290,i_manager_id#1291,i_product_name#1292] parquet
               +- Project [d_date_sk#24, d_date#26]
                  +- Filter ((isnotnull(d_date#26) AND ((cast(d_date#26 as date) >= 1999-03-26) AND (cast(d_date#26 as date) <= 1999-05-25))) AND isnotnull(d_date_sk#24))
                     +- Relation spark_catalog.m.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet

== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[w_state#21230 ASC NULLS FIRST,i_item_id#1272 ASC NULLS FIRST], output=[w_state#21230,i_item_id#1272,sales_before#31260,sales_after#31261])
   +- HashAggregate(keys=[w_state#21230, i_item_id#1272], functions=[sum(CASE WHEN (cast(d_date#26 as date) < 1999-04-25) THEN (cs_sales_price#482 - coalesce(cr_refunded_cash#7834, 0.0)) ELSE 0.0 END), sum(CASE WHEN (cast(d_date#26 as date) >= 1999-04-25) THEN (cs_sales_price#482 - coalesce(cr_refunded_cash#7834, 0.0)) ELSE 0.0 END)], output=[w_state#21230, i_item_id#1272, sales_before#31260, sales_after#31261])
      +- Exchange hashpartitioning(w_state#21230, i_item_id#1272, 200), ENSURE_REQUIREMENTS, [plan_id=91519]
         +- HashAggregate(keys=[w_state#21230, i_item_id#1272], functions=[partial_sum(CASE WHEN (cast(d_date#26 as date) < 1999-04-25) THEN (cs_sales_price#482 - coalesce(cr_refunded_cash#7834, 0.0)) ELSE 0.0 END), partial_sum(CASE WHEN (cast(d_date#26 as date) >= 1999-04-25) THEN (cs_sales_price#482 - coalesce(cr_refunded_cash#7834, 0.0)) ELSE 0.0 END)], output=[w_state#21230, i_item_id#1272, sum#31297, sum#31298])
            +- Project [cs_sales_price#482, cr_refunded_cash#7834, w_state#21230, i_item_id#1272, d_date#26]
               +- BroadcastHashJoin [cs_sold_date_sk#461], [d_date_sk#24], Inner, BuildRight, false
                  :- Project [cs_sold_date_sk#461, cs_sales_price#482, cr_refunded_cash#7834, w_state#21230, i_item_id#1272]
                  :  +- BroadcastHashJoin [cs_item_sk#476], [i_item_sk#1271], Inner, BuildRight, false
                  :     :- Project [cs_sold_date_sk#461, cs_item_sk#476, cs_sales_price#482, cr_refunded_cash#7834, w_state#21230]
                  :     :  +- BroadcastHashJoin [cs_warehouse_sk#475], [w_warehouse_sk#21220], Inner, BuildRight, false
                  :     :     :- Project [cs_sold_date_sk#461, cs_warehouse_sk#475, cs_item_sk#476, cs_sales_price#482, cr_refunded_cash#7834]
                  :     :     :  +- BroadcastHashJoin [cs_order_number#478, cs_item_sk#476], [cr_order_number#7827, cr_item_sk#7813], LeftOuter, BuildRight, false
                  :     :     :     :- Filter ((isnotnull(cs_warehouse_sk#475) AND isnotnull(cs_item_sk#476)) AND isnotnull(cs_sold_date_sk#461))
                  :     :     :     :  +- FileScan parquet spark_catalog.m.catalog_sales[cs_sold_date_sk#461,cs_warehouse_sk#475,cs_item_sk#476,cs_order_number#478,cs_sales_price#482] Batched: true, DataFilters: [isnotnull(cs_warehouse_sk#475), isnotnull(cs_item_sk#476), isnotnull(cs_sold_date_sk#461)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_warehouse_sk), IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_warehouse_sk:int,cs_item_sk:int,cs_order_number:int,cs_sales_price:...
                  :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[1, int, false] as bigint), 32) | (cast(input[0, int, false] as bigint) & 4294967295))),false), [plan_id=91502]
                  :     :     :        +- Filter (isnotnull(cr_order_number#7827) AND isnotnull(cr_item_sk#7813))
                  :     :     :           +- FileScan parquet spark_catalog.m.catalog_returns[cr_item_sk#7813,cr_order_number#7827,cr_refunded_cash#7834] Batched: true, DataFilters: [isnotnull(cr_order_number#7827), isnotnull(cr_item_sk#7813)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/catalog_returns], PartitionFilters: [], PushedFilters: [IsNotNull(cr_order_number), IsNotNull(cr_item_sk)], ReadSchema: struct<cr_item_sk:int,cr_order_number:int,cr_refunded_cash:double>
                  :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=91506]
                  :     :        +- Filter isnotnull(w_warehouse_sk#21220)
                  :     :           +- FileScan parquet spark_catalog.m.warehouse[w_warehouse_sk#21220,w_state#21230] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#21220)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/warehouse], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_state:string>
                  :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=91510]
                  :        +- Project [i_item_sk#1271, i_item_id#1272]
                  :           +- Filter (((isnotnull(i_current_price#1276) AND (i_current_price#1276 >= 0.99)) AND (i_current_price#1276 <= 1.49)) AND isnotnull(i_item_sk#1271))
                  :              +- FileScan parquet spark_catalog.m.item[i_item_sk#1271,i_item_id#1272,i_current_price#1276] Batched: true, DataFilters: [isnotnull(i_current_price#1276), (i_current_price#1276 >= 0.99), (i_current_price#1276 <= 1.49),..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_current_price), GreaterThanOrEqual(i_current_price,0.99), LessThanOrEqual(i_current_..., ReadSchema: struct<i_item_sk:int,i_item_id:string,i_current_price:double>
                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=91514]
                     +- Filter (((isnotnull(d_date#26) AND (cast(d_date#26 as date) >= 1999-03-26)) AND (cast(d_date#26 as date) <= 1999-05-25)) AND isnotnull(d_date_sk#24))
                        +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#24,d_date#26] Batched: true, DataFilters: [isnotnull(d_date#26), (cast(d_date#26 as date) >= 1999-03-26), (cast(d_date#26 as date) <= 1999-..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:string>
