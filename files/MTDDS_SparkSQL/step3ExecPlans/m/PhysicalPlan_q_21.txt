AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[w_warehouse_name#21222 ASC NULLS FIRST,i_item_id#1272 ASC NULLS FIRST], output=[w_warehouse_name#21222,i_item_id#1272,inv_before#21214L,inv_after#21215L])
   +- Filter (CASE WHEN (inv_before#21214L > 0) THEN ((cast(inv_after#21215L as double) / cast(inv_before#21214L as double)) >= 0.666667) END AND CASE WHEN (inv_before#21214L > 0) THEN ((cast(inv_after#21215L as double) / cast(inv_before#21214L as double)) <= 1.5) END)
      +- HashAggregate(keys=[w_warehouse_name#21222, i_item_id#1272], functions=[sum(CASE WHEN (cast(d_date#26 as date) < 2002-05-26) THEN inv_quantity_on_hand#21219L ELSE 0 END), sum(CASE WHEN (cast(d_date#26 as date) >= 2002-05-26) THEN inv_quantity_on_hand#21219L ELSE 0 END)], output=[w_warehouse_name#21222, i_item_id#1272, inv_before#21214L, inv_after#21215L])
         +- Exchange hashpartitioning(w_warehouse_name#21222, i_item_id#1272, 200), ENSURE_REQUIREMENTS, [plan_id=53977]
            +- HashAggregate(keys=[w_warehouse_name#21222, i_item_id#1272], functions=[partial_sum(CASE WHEN (cast(d_date#26 as date) < 2002-05-26) THEN inv_quantity_on_hand#21219L ELSE 0 END), partial_sum(CASE WHEN (cast(d_date#26 as date) >= 2002-05-26) THEN inv_quantity_on_hand#21219L ELSE 0 END)], output=[w_warehouse_name#21222, i_item_id#1272, sum#21271L, sum#21272L])
               +- Project [inv_quantity_on_hand#21219L, w_warehouse_name#21222, i_item_id#1272, d_date#26]
                  +- BroadcastHashJoin [inv_date_sk#21216], [d_date_sk#24], Inner, BuildRight, false
                     :- Project [inv_date_sk#21216, inv_quantity_on_hand#21219L, w_warehouse_name#21222, i_item_id#1272]
                     :  +- BroadcastHashJoin [inv_item_sk#21217], [i_item_sk#1271], Inner, BuildRight, false
                     :     :- Project [inv_date_sk#21216, inv_item_sk#21217, inv_quantity_on_hand#21219L, w_warehouse_name#21222]
                     :     :  +- BroadcastHashJoin [inv_warehouse_sk#21218], [w_warehouse_sk#21220], Inner, BuildRight, false
                     :     :     :- Filter ((isnotnull(inv_warehouse_sk#21218) AND isnotnull(inv_item_sk#21217)) AND isnotnull(inv_date_sk#21216))
                     :     :     :  +- FileScan parquet spark_catalog.m.inventory[inv_date_sk#21216,inv_item_sk#21217,inv_warehouse_sk#21218,inv_quantity_on_hand#21219L] Batched: true, DataFilters: [isnotnull(inv_warehouse_sk#21218), isnotnull(inv_item_sk#21217), isnotnull(inv_date_sk#21216)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/inventory], PartitionFilters: [], PushedFilters: [IsNotNull(inv_warehouse_sk), IsNotNull(inv_item_sk), IsNotNull(inv_date_sk)], ReadSchema: struct<inv_date_sk:int,inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:bigint>
                     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=53964]
                     :     :        +- Filter isnotnull(w_warehouse_sk#21220)
                     :     :           +- FileScan parquet spark_catalog.m.warehouse[w_warehouse_sk#21220,w_warehouse_name#21222] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#21220)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/warehouse], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>
                     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=53968]
                     :        +- Project [i_item_sk#1271, i_item_id#1272]
                     :           +- Filter (((isnotnull(i_current_price#1276) AND (i_current_price#1276 >= 0.99)) AND (i_current_price#1276 <= 1.49)) AND isnotnull(i_item_sk#1271))
                     :              +- FileScan parquet spark_catalog.m.item[i_item_sk#1271,i_item_id#1272,i_current_price#1276] Batched: true, DataFilters: [isnotnull(i_current_price#1276), (i_current_price#1276 >= 0.99), (i_current_price#1276 <= 1.49),..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_current_price), GreaterThanOrEqual(i_current_price,0.99), LessThanOrEqual(i_current_..., ReadSchema: struct<i_item_sk:int,i_item_id:string,i_current_price:double>
                     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=53972]
                        +- Filter (((isnotnull(d_date#26) AND (cast(d_date#26 as date) >= 2002-04-26)) AND (cast(d_date#26 as date) <= 2002-06-25)) AND isnotnull(d_date_sk#24))
                           +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#24,d_date#26] Batched: true, DataFilters: [isnotnull(d_date#26), (cast(d_date#26 as date) >= 2002-04-26), (cast(d_date#26 as date) <= 2002-..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:string>
