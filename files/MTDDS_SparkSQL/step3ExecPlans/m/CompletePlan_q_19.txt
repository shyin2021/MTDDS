== Parsed Logical Plan ==
'GlobalLimit 100
+- 'LocalLimit 100
   +- 'Sort ['ext_price DESC NULLS LAST, 'i_brand ASC NULLS FIRST, 'i_brand_id ASC NULLS FIRST, 'i_manufact_id ASC NULLS FIRST, 'i_manufact ASC NULLS FIRST], true
      +- 'Aggregate ['i_brand, 'i_brand_id, 'i_manufact_id, 'i_manufact], ['i_brand_id AS brand_id#21128, 'i_brand AS brand#21129, 'i_manufact_id, 'i_manufact, 'sum('ss_ext_sales_price) AS ext_price#21130]
         +- 'Filter ((((('d_date_sk = 'ss_sold_date_sk) AND ('ss_item_sk = 'i_item_sk)) AND ('i_manager_id = 13)) AND (('d_moy = 12) AND ('d_year = 2000))) AND ((('ss_customer_sk = 'c_customer_sk) AND ('c_current_addr_sk = 'ca_address_sk)) AND (NOT ('substr('ca_zip, 1, 5) = 'substr('s_zip, 1, 5)) AND ('ss_store_sk = 's_store_sk))))
            +- 'Join Inner
               :- 'Join Inner
               :  :- 'Join Inner
               :  :  :- 'Join Inner
               :  :  :  :- 'Join Inner
               :  :  :  :  :- 'UnresolvedRelation [date_dim], [], false
               :  :  :  :  +- 'UnresolvedRelation [store_sales], [], false
               :  :  :  +- 'UnresolvedRelation [item], [], false
               :  :  +- 'UnresolvedRelation [customer], [], false
               :  +- 'UnresolvedRelation [customer_address], [], false
               +- 'UnresolvedRelation [store], [], false

== Analyzed Logical Plan ==
brand_id: int, brand: string, i_manufact_id: int, i_manufact: string, ext_price: double
GlobalLimit 100
+- LocalLimit 100
   +- Sort [ext_price#21130 DESC NULLS LAST, brand#21129 ASC NULLS FIRST, brand_id#21128 ASC NULLS FIRST, i_manufact_id#1284 ASC NULLS FIRST, i_manufact#1285 ASC NULLS FIRST], true
      +- Aggregate [i_brand#1279, i_brand_id#1278, i_manufact_id#1284, i_manufact#1285], [i_brand_id#1278 AS brand_id#21128, i_brand#1279 AS brand#21129, i_manufact_id#1284, i_manufact#1285, sum(ss_ext_sales_price#1263) AS ext_price#21130]
         +- Filter (((((d_date_sk#24 = ss_sold_date_sk#1248) AND (ss_item_sk#1250 = i_item_sk#1271)) AND (i_manager_id#1291 = 13)) AND ((d_moy#32 = 12) AND (d_year#30 = 2000))) AND (((ss_customer_sk#1251 = c_customer_sk#81) AND (c_current_addr_sk#85 = ca_address_sk#8171)) AND (NOT (substr(ca_zip#8180, 1, 5) = substr(s_zip#77, 1, 5)) AND (ss_store_sk#1255 = s_store_sk#52))))
            +- Join Inner
               :- Join Inner
               :  :- Join Inner
               :  :  :- Join Inner
               :  :  :  :- Join Inner
               :  :  :  :  :- SubqueryAlias spark_catalog.m.date_dim
               :  :  :  :  :  +- Relation spark_catalog.m.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet
               :  :  :  :  +- SubqueryAlias spark_catalog.m.store_sales
               :  :  :  :     +- Relation spark_catalog.m.store_sales[ss_sold_date_sk#1248,ss_sold_time_sk#1249,ss_item_sk#1250,ss_customer_sk#1251,ss_cdemo_sk#1252,ss_hdemo_sk#1253,ss_addr_sk#1254,ss_store_sk#1255,ss_promo_sk#1256,ss_ticket_number#1257,ss_quantity#1258,ss_wholesale_cost#1259,ss_list_price#1260,ss_sales_price#1261,ss_ext_discount_amt#1262,ss_ext_sales_price#1263,ss_ext_wholesale_cost#1264,ss_ext_list_price#1265,ss_ext_tax#1266,ss_coupon_amt#1267,ss_net_paid#1268,ss_net_paid_inc_tax#1269,ss_net_profit#1270] parquet
               :  :  :  +- SubqueryAlias spark_catalog.m.item
               :  :  :     +- Relation spark_catalog.m.item[i_item_sk#1271,i_item_id#1272,i_rec_start_date#1273,i_rec_end_date#1274,i_item_desc#1275,i_current_price#1276,i_wholesale_cost#1277,i_brand_id#1278,i_brand#1279,i_class_id#1280,i_class#1281,i_category_id#1282,i_category#1283,i_manufact_id#1284,i_manufact#1285,i_size#1286,i_formulation#1287,i_color#1288,i_units#1289,i_container#1290,i_manager_id#1291,i_product_name#1292] parquet
               :  :  +- SubqueryAlias spark_catalog.m.customer
               :  :     +- Relation spark_catalog.m.customer[c_customer_sk#81,c_customer_id#82,c_current_cdemo_sk#83,c_current_hdemo_sk#84,c_current_addr_sk#85,c_first_shipto_date_sk#86,c_first_sales_date_sk#87,c_salutation#88,c_first_name#89,c_last_name#90,c_preferred_cust_flag#91,c_birth_day#92,c_birth_month#93,c_birth_year#94,c_birth_country#95,c_login#96,c_email_address#97,c_last_review_date#98] parquet
               :  +- SubqueryAlias spark_catalog.m.customer_address
               :     +- Relation spark_catalog.m.customer_address[ca_address_sk#8171,ca_address_id#8172,ca_street_number#8173,ca_street_name#8174,ca_street_type#8175,ca_suite_number#8176,ca_city#8177,ca_county#8178,ca_state#8179,ca_zip#8180,ca_country#8181,ca_gmt_offset#8182,ca_location_type#8183] parquet
               +- SubqueryAlias spark_catalog.m.store
                  +- Relation spark_catalog.m.store[s_store_sk#52,s_store_id#53,s_rec_start_date#54,s_rec_end_date#55,s_closed_date_sk#56,s_store_name#57,s_number_employees#58,s_floor_space#59,s_hours#60,s_manager#61,s_market_id#62,s_geography_class#63,s_market_desc#64,s_market_manager#65,s_division_id#66,s_division_name#67,s_company_id#68,s_company_name#69,s_street_number#70,s_street_name#71,s_street_type#72,s_suite_number#73,s_city#74,s_county#75,... 5 more fields] parquet

== Optimized Logical Plan ==
GlobalLimit 100
+- LocalLimit 100
   +- Sort [ext_price#21130 DESC NULLS LAST, brand#21129 ASC NULLS FIRST, brand_id#21128 ASC NULLS FIRST, i_manufact_id#1284 ASC NULLS FIRST, i_manufact#1285 ASC NULLS FIRST], true
      +- Aggregate [i_brand#1279, i_brand_id#1278, i_manufact_id#1284, i_manufact#1285], [i_brand_id#1278 AS brand_id#21128, i_brand#1279 AS brand#21129, i_manufact_id#1284, i_manufact#1285, sum(ss_ext_sales_price#1263) AS ext_price#21130]
         +- Project [ss_ext_sales_price#1263, i_brand_id#1278, i_brand#1279, i_manufact_id#1284, i_manufact#1285]
            +- Join Inner, (NOT (substr(ca_zip#8180, 1, 5) = substr(s_zip#77, 1, 5)) AND (ss_store_sk#1255 = s_store_sk#52))
               :- Project [ss_store_sk#1255, ss_ext_sales_price#1263, i_brand_id#1278, i_brand#1279, i_manufact_id#1284, i_manufact#1285, ca_zip#8180]
               :  +- Join Inner, (c_current_addr_sk#85 = ca_address_sk#8171)
               :     :- Project [ss_store_sk#1255, ss_ext_sales_price#1263, i_brand_id#1278, i_brand#1279, i_manufact_id#1284, i_manufact#1285, c_current_addr_sk#85]
               :     :  +- Join Inner, (ss_customer_sk#1251 = c_customer_sk#81)
               :     :     :- Project [ss_customer_sk#1251, ss_store_sk#1255, ss_ext_sales_price#1263, i_brand_id#1278, i_brand#1279, i_manufact_id#1284, i_manufact#1285]
               :     :     :  +- Join Inner, (ss_item_sk#1250 = i_item_sk#1271)
               :     :     :     :- Project [ss_item_sk#1250, ss_customer_sk#1251, ss_store_sk#1255, ss_ext_sales_price#1263]
               :     :     :     :  +- Join Inner, (d_date_sk#24 = ss_sold_date_sk#1248)
               :     :     :     :     :- Project [d_date_sk#24]
               :     :     :     :     :  +- Filter (((isnotnull(d_moy#32) AND isnotnull(d_year#30)) AND ((d_moy#32 = 12) AND (d_year#30 = 2000))) AND isnotnull(d_date_sk#24))
               :     :     :     :     :     +- Relation spark_catalog.m.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet
               :     :     :     :     +- Project [ss_sold_date_sk#1248, ss_item_sk#1250, ss_customer_sk#1251, ss_store_sk#1255, ss_ext_sales_price#1263]
               :     :     :     :        +- Filter (isnotnull(ss_sold_date_sk#1248) AND ((isnotnull(ss_item_sk#1250) AND isnotnull(ss_customer_sk#1251)) AND isnotnull(ss_store_sk#1255)))
               :     :     :     :           +- Relation spark_catalog.m.store_sales[ss_sold_date_sk#1248,ss_sold_time_sk#1249,ss_item_sk#1250,ss_customer_sk#1251,ss_cdemo_sk#1252,ss_hdemo_sk#1253,ss_addr_sk#1254,ss_store_sk#1255,ss_promo_sk#1256,ss_ticket_number#1257,ss_quantity#1258,ss_wholesale_cost#1259,ss_list_price#1260,ss_sales_price#1261,ss_ext_discount_amt#1262,ss_ext_sales_price#1263,ss_ext_wholesale_cost#1264,ss_ext_list_price#1265,ss_ext_tax#1266,ss_coupon_amt#1267,ss_net_paid#1268,ss_net_paid_inc_tax#1269,ss_net_profit#1270] parquet
               :     :     :     +- Project [i_item_sk#1271, i_brand_id#1278, i_brand#1279, i_manufact_id#1284, i_manufact#1285]
               :     :     :        +- Filter ((isnotnull(i_manager_id#1291) AND (i_manager_id#1291 = 13)) AND isnotnull(i_item_sk#1271))
               :     :     :           +- Relation spark_catalog.m.item[i_item_sk#1271,i_item_id#1272,i_rec_start_date#1273,i_rec_end_date#1274,i_item_desc#1275,i_current_price#1276,i_wholesale_cost#1277,i_brand_id#1278,i_brand#1279,i_class_id#1280,i_class#1281,i_category_id#1282,i_category#1283,i_manufact_id#1284,i_manufact#1285,i_size#1286,i_formulation#1287,i_color#1288,i_units#1289,i_container#1290,i_manager_id#1291,i_product_name#1292] parquet
               :     :     +- Project [c_customer_sk#81, c_current_addr_sk#85]
               :     :        +- Filter (isnotnull(c_customer_sk#81) AND isnotnull(c_current_addr_sk#85))
               :     :           +- Relation spark_catalog.m.customer[c_customer_sk#81,c_customer_id#82,c_current_cdemo_sk#83,c_current_hdemo_sk#84,c_current_addr_sk#85,c_first_shipto_date_sk#86,c_first_sales_date_sk#87,c_salutation#88,c_first_name#89,c_last_name#90,c_preferred_cust_flag#91,c_birth_day#92,c_birth_month#93,c_birth_year#94,c_birth_country#95,c_login#96,c_email_address#97,c_last_review_date#98] parquet
               :     +- Project [ca_address_sk#8171, ca_zip#8180]
               :        +- Filter (isnotnull(ca_address_sk#8171) AND isnotnull(ca_zip#8180))
               :           +- Relation spark_catalog.m.customer_address[ca_address_sk#8171,ca_address_id#8172,ca_street_number#8173,ca_street_name#8174,ca_street_type#8175,ca_suite_number#8176,ca_city#8177,ca_county#8178,ca_state#8179,ca_zip#8180,ca_country#8181,ca_gmt_offset#8182,ca_location_type#8183] parquet
               +- Project [s_store_sk#52, s_zip#77]
                  +- Filter (isnotnull(s_zip#77) AND isnotnull(s_store_sk#52))
                     +- Relation spark_catalog.m.store[s_store_sk#52,s_store_id#53,s_rec_start_date#54,s_rec_end_date#55,s_closed_date_sk#56,s_store_name#57,s_number_employees#58,s_floor_space#59,s_hours#60,s_manager#61,s_market_id#62,s_geography_class#63,s_market_desc#64,s_market_manager#65,s_division_id#66,s_division_name#67,s_company_id#68,s_company_name#69,s_street_number#70,s_street_name#71,s_street_type#72,s_suite_number#73,s_city#74,s_county#75,... 5 more fields] parquet

== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[ext_price#21130 DESC NULLS LAST,brand#21129 ASC NULLS FIRST,brand_id#21128 ASC NULLS FIRST,i_manufact_id#1284 ASC NULLS FIRST,i_manufact#1285 ASC NULLS FIRST], output=[brand_id#21128,brand#21129,i_manufact_id#1284,i_manufact#1285,ext_price#21130])
   +- HashAggregate(keys=[i_brand#1279, i_brand_id#1278, i_manufact_id#1284, i_manufact#1285], functions=[sum(ss_ext_sales_price#1263)], output=[brand_id#21128, brand#21129, i_manufact_id#1284, i_manufact#1285, ext_price#21130])
      +- Exchange hashpartitioning(i_brand#1279, i_brand_id#1278, i_manufact_id#1284, i_manufact#1285, 200), ENSURE_REQUIREMENTS, [plan_id=52977]
         +- HashAggregate(keys=[i_brand#1279, i_brand_id#1278, i_manufact_id#1284, i_manufact#1285], functions=[partial_sum(ss_ext_sales_price#1263)], output=[i_brand#1279, i_brand_id#1278, i_manufact_id#1284, i_manufact#1285, sum#21153])
            +- Project [ss_ext_sales_price#1263, i_brand_id#1278, i_brand#1279, i_manufact_id#1284, i_manufact#1285]
               +- BroadcastHashJoin [ss_store_sk#1255], [s_store_sk#52], Inner, BuildRight, NOT (substr(ca_zip#8180, 1, 5) = substr(s_zip#77, 1, 5)), false
                  :- Project [ss_store_sk#1255, ss_ext_sales_price#1263, i_brand_id#1278, i_brand#1279, i_manufact_id#1284, i_manufact#1285, ca_zip#8180]
                  :  +- BroadcastHashJoin [c_current_addr_sk#85], [ca_address_sk#8171], Inner, BuildRight, false
                  :     :- Project [ss_store_sk#1255, ss_ext_sales_price#1263, i_brand_id#1278, i_brand#1279, i_manufact_id#1284, i_manufact#1285, c_current_addr_sk#85]
                  :     :  +- BroadcastHashJoin [ss_customer_sk#1251], [c_customer_sk#81], Inner, BuildRight, false
                  :     :     :- Project [ss_customer_sk#1251, ss_store_sk#1255, ss_ext_sales_price#1263, i_brand_id#1278, i_brand#1279, i_manufact_id#1284, i_manufact#1285]
                  :     :     :  +- BroadcastHashJoin [ss_item_sk#1250], [i_item_sk#1271], Inner, BuildRight, false
                  :     :     :     :- Project [ss_item_sk#1250, ss_customer_sk#1251, ss_store_sk#1255, ss_ext_sales_price#1263]
                  :     :     :     :  +- BroadcastHashJoin [d_date_sk#24], [ss_sold_date_sk#1248], Inner, BuildLeft, false
                  :     :     :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=52956]
                  :     :     :     :     :  +- Project [d_date_sk#24]
                  :     :     :     :     :     +- Filter ((((isnotnull(d_moy#32) AND isnotnull(d_year#30)) AND (d_moy#32 = 12)) AND (d_year#30 = 2000)) AND isnotnull(d_date_sk#24))
                  :     :     :     :     :        +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [isnotnull(d_moy#32), isnotnull(d_year#30), (d_moy#32 = 12), (d_year#30 = 2000), isnotnull(d_date..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), EqualTo(d_moy,12), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                  :     :     :     :     +- Filter (((isnotnull(ss_sold_date_sk#1248) AND isnotnull(ss_item_sk#1250)) AND isnotnull(ss_customer_sk#1251)) AND isnotnull(ss_store_sk#1255))
                  :     :     :     :        +- FileScan parquet spark_catalog.m.store_sales[ss_sold_date_sk#1248,ss_item_sk#1250,ss_customer_sk#1251,ss_store_sk#1255,ss_ext_sales_price#1263] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#1248), isnotnull(ss_item_sk#1250), isnotnull(ss_customer_sk#1251), isn..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk), IsNotNull(ss_customer_sk), IsNotNull(ss_store..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ext_sales_price:d...
                  :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=52960]
                  :     :     :        +- Project [i_item_sk#1271, i_brand_id#1278, i_brand#1279, i_manufact_id#1284, i_manufact#1285]
                  :     :     :           +- Filter ((isnotnull(i_manager_id#1291) AND (i_manager_id#1291 = 13)) AND isnotnull(i_item_sk#1271))
                  :     :     :              +- FileScan parquet spark_catalog.m.item[i_item_sk#1271,i_brand_id#1278,i_brand#1279,i_manufact_id#1284,i_manufact#1285,i_manager_id#1291] Batched: true, DataFilters: [isnotnull(i_manager_id#1291), (i_manager_id#1291 = 13), isnotnull(i_item_sk#1271)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_manager_id), EqualTo(i_manager_id,13), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_brand:string,i_manufact_id:int,i_manufact:string,i_manager_...
                  :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=52964]
                  :     :        +- Filter (isnotnull(c_customer_sk#81) AND isnotnull(c_current_addr_sk#85))
                  :     :           +- FileScan parquet spark_catalog.m.customer[c_customer_sk#81,c_current_addr_sk#85] Batched: true, DataFilters: [isnotnull(c_customer_sk#81), isnotnull(c_current_addr_sk#85)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
                  :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=52968]
                  :        +- Filter (isnotnull(ca_address_sk#8171) AND isnotnull(ca_zip#8180))
                  :           +- FileScan parquet spark_catalog.m.customer_address[ca_address_sk#8171,ca_zip#8180] Batched: true, DataFilters: [isnotnull(ca_address_sk#8171), isnotnull(ca_zip#8180)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_zip)], ReadSchema: struct<ca_address_sk:int,ca_zip:string>
                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=52972]
                     +- Filter (isnotnull(s_zip#77) AND isnotnull(s_store_sk#52))
                        +- FileScan parquet spark_catalog.m.store[s_store_sk#52,s_zip#77] Batched: true, DataFilters: [isnotnull(s_zip#77), isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_zip), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_zip:string>
