AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[i_item_id#1272 ASC NULLS FIRST,i_item_desc#1275 ASC NULLS FIRST,s_store_id#53 ASC NULLS FIRST,s_store_name#57 ASC NULLS FIRST], output=[i_item_id#1272,i_item_desc#1275,s_store_id#53,s_store_name#57,store_sales_quantity#26175,store_returns_quantity#26176,catalog_sales_quantity#26177])
   +- HashAggregate(keys=[i_item_id#1272, i_item_desc#1275, s_store_id#53, s_store_name#57], functions=[stddev_samp(cast(ss_quantity#1258 as double)), stddev_samp(cast(sr_return_quantity#14 as double)), stddev_samp(cast(cs_quantity#479 as double))], output=[i_item_id#1272, i_item_desc#1275, s_store_id#53, s_store_name#57, store_sales_quantity#26175, store_returns_quantity#26176, catalog_sales_quantity#26177])
      +- Exchange hashpartitioning(i_item_id#1272, i_item_desc#1275, s_store_id#53, s_store_name#57, 200), ENSURE_REQUIREMENTS, [plan_id=74519]
         +- HashAggregate(keys=[i_item_id#1272, i_item_desc#1275, s_store_id#53, s_store_name#57], functions=[partial_stddev_samp(cast(ss_quantity#1258 as double)), partial_stddev_samp(cast(sr_return_quantity#14 as double)), partial_stddev_samp(cast(cs_quantity#479 as double))], output=[i_item_id#1272, i_item_desc#1275, s_store_id#53, s_store_name#57, n#26292, avg#26293, m2#26294, n#26300, avg#26301, m2#26302, n#26308, avg#26309, m2#26310])
            +- Project [ss_quantity#1258, sr_return_quantity#14, cs_quantity#479, s_store_id#53, s_store_name#57, i_item_id#1272, i_item_desc#1275]
               +- BroadcastHashJoin [ss_item_sk#1250], [i_item_sk#1271], Inner, BuildRight, false
                  :- Project [ss_item_sk#1250, ss_quantity#1258, sr_return_quantity#14, cs_quantity#479, s_store_id#53, s_store_name#57]
                  :  +- BroadcastHashJoin [ss_store_sk#1255], [s_store_sk#52], Inner, BuildRight, false
                  :     :- Project [ss_item_sk#1250, ss_store_sk#1255, ss_quantity#1258, sr_return_quantity#14, cs_quantity#479]
                  :     :  +- BroadcastHashJoin [cs_sold_date_sk#461], [d_date_sk#26206], Inner, BuildRight, false
                  :     :     :- Project [ss_item_sk#1250, ss_store_sk#1255, ss_quantity#1258, sr_return_quantity#14, cs_sold_date_sk#461, cs_quantity#479]
                  :     :     :  +- BroadcastHashJoin [sr_returned_date_sk#4], [d_date_sk#26178], Inner, BuildRight, false
                  :     :     :     :- Project [ss_item_sk#1250, ss_store_sk#1255, ss_quantity#1258, sr_returned_date_sk#4, sr_return_quantity#14, cs_sold_date_sk#461, cs_quantity#479]
                  :     :     :     :  +- BroadcastHashJoin [ss_sold_date_sk#1248], [d_date_sk#24], Inner, BuildRight, false
                  :     :     :     :     :- Project [ss_sold_date_sk#1248, ss_item_sk#1250, ss_store_sk#1255, ss_quantity#1258, sr_returned_date_sk#4, sr_return_quantity#14, cs_sold_date_sk#461, cs_quantity#479]
                  :     :     :     :     :  +- SortMergeJoin [sr_customer_sk#7, sr_item_sk#6], [cs_bill_customer_sk#464, cs_item_sk#476], Inner
                  :     :     :     :     :     :- Sort [sr_customer_sk#7 ASC NULLS FIRST, sr_item_sk#6 ASC NULLS FIRST], false, 0
                  :     :     :     :     :     :  +- Exchange hashpartitioning(sr_customer_sk#7, sr_item_sk#6, 200), ENSURE_REQUIREMENTS, [plan_id=74491]
                  :     :     :     :     :     :     +- Project [ss_sold_date_sk#1248, ss_item_sk#1250, ss_store_sk#1255, ss_quantity#1258, sr_returned_date_sk#4, sr_item_sk#6, sr_customer_sk#7, sr_return_quantity#14]
                  :     :     :     :     :     :        +- BroadcastHashJoin [ss_customer_sk#1251, ss_item_sk#1250, ss_ticket_number#1257], [sr_customer_sk#7, sr_item_sk#6, sr_ticket_number#13], Inner, BuildRight, false
                  :     :     :     :     :     :           :- Filter ((((isnotnull(ss_customer_sk#1251) AND isnotnull(ss_item_sk#1250)) AND isnotnull(ss_ticket_number#1257)) AND isnotnull(ss_sold_date_sk#1248)) AND isnotnull(ss_store_sk#1255))
                  :     :     :     :     :     :           :  +- FileScan parquet spark_catalog.m.store_sales[ss_sold_date_sk#1248,ss_item_sk#1250,ss_customer_sk#1251,ss_store_sk#1255,ss_ticket_number#1257,ss_quantity#1258] Batched: true, DataFilters: [isnotnull(ss_customer_sk#1251), isnotnull(ss_item_sk#1250), isnotnull(ss_ticket_number#1257), is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_item_sk), IsNotNull(ss_ticket_number), IsNotNull(ss_sold..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:int...
                  :     :     :     :     :     :           +- BroadcastExchange HashedRelationBroadcastMode(List(input[2, int, false], input[1, int, false], input[3, int, false]),false), [plan_id=74486]
                  :     :     :     :     :     :              +- Filter (((isnotnull(sr_customer_sk#7) AND isnotnull(sr_item_sk#6)) AND isnotnull(sr_ticket_number#13)) AND isnotnull(sr_returned_date_sk#4))
                  :     :     :     :     :     :                 +- FileScan parquet spark_catalog.m.store_returns[sr_returned_date_sk#4,sr_item_sk#6,sr_customer_sk#7,sr_ticket_number#13,sr_return_quantity#14] Batched: true, DataFilters: [isnotnull(sr_customer_sk#7), isnotnull(sr_item_sk#6), isnotnull(sr_ticket_number#13), isnotnull(..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store_returns], PartitionFilters: [], PushedFilters: [IsNotNull(sr_customer_sk), IsNotNull(sr_item_sk), IsNotNull(sr_ticket_number), IsNotNull(sr_retu..., ReadSchema: struct<sr_returned_date_sk:int,sr_item_sk:int,sr_customer_sk:int,sr_ticket_number:int,sr_return_q...
                  :     :     :     :     :     +- Sort [cs_bill_customer_sk#464 ASC NULLS FIRST, cs_item_sk#476 ASC NULLS FIRST], false, 0
                  :     :     :     :     :        +- Exchange hashpartitioning(cs_bill_customer_sk#464, cs_item_sk#476, 200), ENSURE_REQUIREMENTS, [plan_id=74492]
                  :     :     :     :     :           +- Filter ((isnotnull(cs_bill_customer_sk#464) AND isnotnull(cs_item_sk#476)) AND isnotnull(cs_sold_date_sk#461))
                  :     :     :     :     :              +- FileScan parquet spark_catalog.m.catalog_sales[cs_sold_date_sk#461,cs_bill_customer_sk#464,cs_item_sk#476,cs_quantity#479] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#464), isnotnull(cs_item_sk#476), isnotnull(cs_sold_date_sk#461)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_bill_customer_sk), IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int>
                  :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=74498]
                  :     :     :     :        +- Project [d_date_sk#24]
                  :     :     :     :           +- Filter ((((isnotnull(d_moy#32) AND isnotnull(d_year#30)) AND (d_moy#32 = 4)) AND (d_year#30 = 2000)) AND isnotnull(d_date_sk#24))
                  :     :     :     :              +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [isnotnull(d_moy#32), isnotnull(d_year#30), (d_moy#32 = 4), (d_year#30 = 2000), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), EqualTo(d_moy,4), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                  :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=74502]
                  :     :     :        +- Project [d_date_sk#26178]
                  :     :     :           +- Filter (((((isnotnull(d_moy#26186) AND isnotnull(d_year#26184)) AND (d_moy#26186 >= 4)) AND (d_moy#26186 <= 7)) AND (d_year#26184 = 2000)) AND isnotnull(d_date_sk#26178))
                  :     :     :              +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#26178,d_year#26184,d_moy#26186] Batched: true, DataFilters: [isnotnull(d_moy#26186), isnotnull(d_year#26184), (d_moy#26186 >= 4), (d_moy#26186 <= 7), (d_year..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), GreaterThanOrEqual(d_moy,4), LessThanOrEqual(d_moy,7), Equa..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                  :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=74506]
                  :     :        +- Project [d_date_sk#26206]
                  :     :           +- Filter (d_year#26212 IN (2000,2001,2002) AND isnotnull(d_date_sk#26206))
                  :     :              +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#26206,d_year#26212] Batched: true, DataFilters: [d_year#26212 IN (2000,2001,2002), isnotnull(d_date_sk#26206)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                  :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=74510]
                  :        +- Filter isnotnull(s_store_sk#52)
                  :           +- FileScan parquet spark_catalog.m.store[s_store_sk#52,s_store_id#53,s_store_name#57] Batched: true, DataFilters: [isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string,s_store_name:string>
                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=74514]
                     +- Filter isnotnull(i_item_sk#1271)
                        +- FileScan parquet spark_catalog.m.item[i_item_sk#1271,i_item_id#1272,i_item_desc#1275] Batched: true, DataFilters: [isnotnull(i_item_sk#1271)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string>
