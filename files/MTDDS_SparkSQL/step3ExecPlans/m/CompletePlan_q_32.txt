== Parsed Logical Plan ==
'GlobalLimit 100
+- 'LocalLimit 100
   +- 'Project ['sum('cs_ext_discount_amt) AS excess_discount_amount#28580]
      +- 'Filter (((('i_manufact_id = 994) AND ('i_item_sk = 'cs_item_sk)) AND (('d_date >= 2001-03-14) AND ('d_date <= (cast(2001-03-14 as date) + 90)))) AND (('d_date_sk = 'cs_sold_date_sk) AND ('cs_ext_discount_amt > scalar-subquery#28581 [])))
         :  +- 'Project [unresolvedalias((1.3 * 'avg('cs_ext_discount_amt)), None)]
         :     +- 'Filter ((('cs_item_sk = 'i_item_sk) AND (('d_date >= 2001-03-14) AND ('d_date <= (cast(2001-03-14 as date) + 90)))) AND ('d_date_sk = 'cs_sold_date_sk))
         :        +- 'Join Inner
         :           :- 'UnresolvedRelation [catalog_sales], [], false
         :           +- 'UnresolvedRelation [date_dim], [], false
         +- 'Join Inner
            :- 'Join Inner
            :  :- 'UnresolvedRelation [catalog_sales], [], false
            :  +- 'UnresolvedRelation [item], [], false
            +- 'UnresolvedRelation [date_dim], [], false

== Analyzed Logical Plan ==
excess_discount_amount: double
GlobalLimit 100
+- LocalLimit 100
   +- Aggregate [sum(cs_ext_discount_amt#483) AS excess_discount_amount#28580]
      +- Filter ((((i_manufact_id#1284 = 994) AND (i_item_sk#1271 = cs_item_sk#476)) AND ((d_date#26 >= 2001-03-14) AND (cast(d_date#26 as date) <= date_add(cast(2001-03-14 as date), 90)))) AND ((d_date_sk#24 = cs_sold_date_sk#461) AND (cs_ext_discount_amt#483 > scalar-subquery#28581 [i_item_sk#1271])))
         :  +- Aggregate [(cast(1.3 as double) * avg(cs_ext_discount_amt#28606)) AS (1.3 * avg(cs_ext_discount_amt))#28583]
         :     +- Filter (((cs_item_sk#28599 = outer(i_item_sk#1271)) AND ((d_date#28620 >= 2001-03-14) AND (cast(d_date#28620 as date) <= date_add(cast(2001-03-14 as date), 90)))) AND (d_date_sk#28618 = cs_sold_date_sk#28584))
         :        +- Join Inner
         :           :- SubqueryAlias spark_catalog.m.catalog_sales
         :           :  +- Relation spark_catalog.m.catalog_sales[cs_sold_date_sk#28584,cs_sold_time_sk#28585,cs_ship_date_sk#28586,cs_bill_customer_sk#28587,cs_bill_cdemo_sk#28588,cs_bill_hdemo_sk#28589,cs_bill_addr_sk#28590,cs_ship_customer_sk#28591,cs_ship_cdemo_sk#28592,cs_ship_hdemo_sk#28593,cs_ship_addr_sk#28594,cs_call_center_sk#28595,cs_catalog_page_sk#28596,cs_ship_mode_sk#28597,cs_warehouse_sk#28598,cs_item_sk#28599,cs_promo_sk#28600,cs_order_number#28601,cs_quantity#28602,cs_wholesale_cost#28603,cs_list_price#28604,cs_sales_price#28605,cs_ext_discount_amt#28606,cs_ext_sales_price#28607,... 10 more fields] parquet
         :           +- SubqueryAlias spark_catalog.m.date_dim
         :              +- Relation spark_catalog.m.date_dim[d_date_sk#28618,d_date_id#28619,d_date#28620,d_month_seq#28621,d_week_seq#28622,d_quarter_seq#28623,d_year#28624,d_dow#28625,d_moy#28626,d_dom#28627,d_qoy#28628,d_fy_year#28629,d_fy_quarter_seq#28630,d_fy_week_seq#28631,d_day_name#28632,d_quarter_name#28633,d_holiday#28634,d_weekend#28635,d_following_holiday#28636,d_first_dom#28637,d_last_dom#28638,d_same_day_ly#28639,d_same_day_lq#28640,d_current_day#28641,... 4 more fields] parquet
         +- Join Inner
            :- Join Inner
            :  :- SubqueryAlias spark_catalog.m.catalog_sales
            :  :  +- Relation spark_catalog.m.catalog_sales[cs_sold_date_sk#461,cs_sold_time_sk#462,cs_ship_date_sk#463,cs_bill_customer_sk#464,cs_bill_cdemo_sk#465,cs_bill_hdemo_sk#466,cs_bill_addr_sk#467,cs_ship_customer_sk#468,cs_ship_cdemo_sk#469,cs_ship_hdemo_sk#470,cs_ship_addr_sk#471,cs_call_center_sk#472,cs_catalog_page_sk#473,cs_ship_mode_sk#474,cs_warehouse_sk#475,cs_item_sk#476,cs_promo_sk#477,cs_order_number#478,cs_quantity#479,cs_wholesale_cost#480,cs_list_price#481,cs_sales_price#482,cs_ext_discount_amt#483,cs_ext_sales_price#484,... 10 more fields] parquet
            :  +- SubqueryAlias spark_catalog.m.item
            :     +- Relation spark_catalog.m.item[i_item_sk#1271,i_item_id#1272,i_rec_start_date#1273,i_rec_end_date#1274,i_item_desc#1275,i_current_price#1276,i_wholesale_cost#1277,i_brand_id#1278,i_brand#1279,i_class_id#1280,i_class#1281,i_category_id#1282,i_category#1283,i_manufact_id#1284,i_manufact#1285,i_size#1286,i_formulation#1287,i_color#1288,i_units#1289,i_container#1290,i_manager_id#1291,i_product_name#1292] parquet
            +- SubqueryAlias spark_catalog.m.date_dim
               +- Relation spark_catalog.m.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet

== Optimized Logical Plan ==
Aggregate [sum(cs_ext_discount_amt#483) AS excess_discount_amount#28580]
+- Project [cs_ext_discount_amt#483]
   +- Join Inner, (d_date_sk#24 = cs_sold_date_sk#461)
      :- Project [cs_sold_date_sk#461, cs_ext_discount_amt#483]
      :  +- Join Inner, ((cs_ext_discount_amt#483 > (1.3 * avg(cs_ext_discount_amt))#28583) AND (cs_item_sk#28599 = i_item_sk#1271))
      :     :- Project [cs_sold_date_sk#461, cs_ext_discount_amt#483, i_item_sk#1271]
      :     :  +- Join Inner, (i_item_sk#1271 = cs_item_sk#476)
      :     :     :- Project [cs_sold_date_sk#461, cs_item_sk#476, cs_ext_discount_amt#483]
      :     :     :  +- Filter (isnotnull(cs_item_sk#476) AND (isnotnull(cs_ext_discount_amt#483) AND isnotnull(cs_sold_date_sk#461)))
      :     :     :     +- Relation spark_catalog.m.catalog_sales[cs_sold_date_sk#461,cs_sold_time_sk#462,cs_ship_date_sk#463,cs_bill_customer_sk#464,cs_bill_cdemo_sk#465,cs_bill_hdemo_sk#466,cs_bill_addr_sk#467,cs_ship_customer_sk#468,cs_ship_cdemo_sk#469,cs_ship_hdemo_sk#470,cs_ship_addr_sk#471,cs_call_center_sk#472,cs_catalog_page_sk#473,cs_ship_mode_sk#474,cs_warehouse_sk#475,cs_item_sk#476,cs_promo_sk#477,cs_order_number#478,cs_quantity#479,cs_wholesale_cost#480,cs_list_price#481,cs_sales_price#482,cs_ext_discount_amt#483,cs_ext_sales_price#484,... 10 more fields] parquet
      :     :     +- Project [i_item_sk#1271]
      :     :        +- Filter ((isnotnull(i_manufact_id#1284) AND (i_manufact_id#1284 = 994)) AND isnotnull(i_item_sk#1271))
      :     :           +- Relation spark_catalog.m.item[i_item_sk#1271,i_item_id#1272,i_rec_start_date#1273,i_rec_end_date#1274,i_item_desc#1275,i_current_price#1276,i_wholesale_cost#1277,i_brand_id#1278,i_brand#1279,i_class_id#1280,i_class#1281,i_category_id#1282,i_category#1283,i_manufact_id#1284,i_manufact#1285,i_size#1286,i_formulation#1287,i_color#1288,i_units#1289,i_container#1290,i_manager_id#1291,i_product_name#1292] parquet
      :     +- Filter isnotnull((1.3 * avg(cs_ext_discount_amt))#28583)
      :        +- Aggregate [cs_item_sk#28599], [(1.3 * avg(cs_ext_discount_amt#28606)) AS (1.3 * avg(cs_ext_discount_amt))#28583, cs_item_sk#28599]
      :           +- Project [cs_item_sk#28599, cs_ext_discount_amt#28606]
      :              +- Join Inner, (d_date_sk#28618 = cs_sold_date_sk#28584)
      :                 :- Project [cs_sold_date_sk#28584, cs_item_sk#28599, cs_ext_discount_amt#28606]
      :                 :  +- Filter (isnotnull(cs_sold_date_sk#28584) AND isnotnull(cs_item_sk#28599))
      :                 :     +- Relation spark_catalog.m.catalog_sales[cs_sold_date_sk#28584,cs_sold_time_sk#28585,cs_ship_date_sk#28586,cs_bill_customer_sk#28587,cs_bill_cdemo_sk#28588,cs_bill_hdemo_sk#28589,cs_bill_addr_sk#28590,cs_ship_customer_sk#28591,cs_ship_cdemo_sk#28592,cs_ship_hdemo_sk#28593,cs_ship_addr_sk#28594,cs_call_center_sk#28595,cs_catalog_page_sk#28596,cs_ship_mode_sk#28597,cs_warehouse_sk#28598,cs_item_sk#28599,cs_promo_sk#28600,cs_order_number#28601,cs_quantity#28602,cs_wholesale_cost#28603,cs_list_price#28604,cs_sales_price#28605,cs_ext_discount_amt#28606,cs_ext_sales_price#28607,... 10 more fields] parquet
      :                 +- Project [d_date_sk#28618]
      :                    +- Filter ((isnotnull(d_date#28620) AND ((d_date#28620 >= 2001-03-14) AND (cast(d_date#28620 as date) <= 2001-06-12))) AND isnotnull(d_date_sk#28618))
      :                       +- Relation spark_catalog.m.date_dim[d_date_sk#28618,d_date_id#28619,d_date#28620,d_month_seq#28621,d_week_seq#28622,d_quarter_seq#28623,d_year#28624,d_dow#28625,d_moy#28626,d_dom#28627,d_qoy#28628,d_fy_year#28629,d_fy_quarter_seq#28630,d_fy_week_seq#28631,d_day_name#28632,d_quarter_name#28633,d_holiday#28634,d_weekend#28635,d_following_holiday#28636,d_first_dom#28637,d_last_dom#28638,d_same_day_ly#28639,d_same_day_lq#28640,d_current_day#28641,... 4 more fields] parquet
      +- Project [d_date_sk#24]
         +- Filter ((isnotnull(d_date#26) AND ((d_date#26 >= 2001-03-14) AND (cast(d_date#26 as date) <= 2001-06-12))) AND isnotnull(d_date_sk#24))
            +- Relation spark_catalog.m.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet

== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- HashAggregate(keys=[], functions=[sum(cs_ext_discount_amt#483)], output=[excess_discount_amount#28580])
   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=80621]
      +- HashAggregate(keys=[], functions=[partial_sum(cs_ext_discount_amt#483)], output=[sum#28652])
         +- Project [cs_ext_discount_amt#483]
            +- BroadcastHashJoin [cs_sold_date_sk#461], [d_date_sk#24], Inner, BuildRight, false
               :- Project [cs_sold_date_sk#461, cs_ext_discount_amt#483]
               :  +- SortMergeJoin [i_item_sk#1271], [cs_item_sk#28599], Inner, (cs_ext_discount_amt#483 > (1.3 * avg(cs_ext_discount_amt))#28583)
               :     :- Sort [i_item_sk#1271 ASC NULLS FIRST], false, 0
               :     :  +- Exchange hashpartitioning(i_item_sk#1271, 200), ENSURE_REQUIREMENTS, [plan_id=80610]
               :     :     +- Project [cs_sold_date_sk#461, cs_ext_discount_amt#483, i_item_sk#1271]
               :     :        +- BroadcastHashJoin [cs_item_sk#476], [i_item_sk#1271], Inner, BuildRight, false
               :     :           :- Filter ((isnotnull(cs_item_sk#476) AND isnotnull(cs_ext_discount_amt#483)) AND isnotnull(cs_sold_date_sk#461))
               :     :           :  +- FileScan parquet spark_catalog.m.catalog_sales[cs_sold_date_sk#461,cs_item_sk#476,cs_ext_discount_amt#483] Batched: true, DataFilters: [isnotnull(cs_item_sk#476), isnotnull(cs_ext_discount_amt#483), isnotnull(cs_sold_date_sk#461)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_ext_discount_amt), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int,cs_ext_discount_amt:double>
               :     :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=80597]
               :     :              +- Project [i_item_sk#1271]
               :     :                 +- Filter ((isnotnull(i_manufact_id#1284) AND (i_manufact_id#1284 = 994)) AND isnotnull(i_item_sk#1271))
               :     :                    +- FileScan parquet spark_catalog.m.item[i_item_sk#1271,i_manufact_id#1284] Batched: true, DataFilters: [isnotnull(i_manufact_id#1284), (i_manufact_id#1284 = 994), isnotnull(i_item_sk#1271)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_manufact_id), EqualTo(i_manufact_id,994), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_manufact_id:int>
               :     +- Sort [cs_item_sk#28599 ASC NULLS FIRST], false, 0
               :        +- Filter isnotnull((1.3 * avg(cs_ext_discount_amt))#28583)
               :           +- HashAggregate(keys=[cs_item_sk#28599], functions=[avg(cs_ext_discount_amt#28606)], output=[(1.3 * avg(cs_ext_discount_amt))#28583, cs_item_sk#28599])
               :              +- Exchange hashpartitioning(cs_item_sk#28599, 200), ENSURE_REQUIREMENTS, [plan_id=80605]
               :                 +- HashAggregate(keys=[cs_item_sk#28599], functions=[partial_avg(cs_ext_discount_amt#28606)], output=[cs_item_sk#28599, sum#28655, count#28656L])
               :                    +- Project [cs_item_sk#28599, cs_ext_discount_amt#28606]
               :                       +- BroadcastHashJoin [cs_sold_date_sk#28584], [d_date_sk#28618], Inner, BuildRight, false
               :                          :- Filter (isnotnull(cs_sold_date_sk#28584) AND isnotnull(cs_item_sk#28599))
               :                          :  +- FileScan parquet spark_catalog.m.catalog_sales[cs_sold_date_sk#28584,cs_item_sk#28599,cs_ext_discount_amt#28606] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#28584), isnotnull(cs_item_sk#28599)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_item_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int,cs_ext_discount_amt:double>
               :                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=80600]
               :                             +- Project [d_date_sk#28618]
               :                                +- Filter (((isnotnull(d_date#28620) AND (d_date#28620 >= 2001-03-14)) AND (cast(d_date#28620 as date) <= 2001-06-12)) AND isnotnull(d_date_sk#28618))
               :                                   +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#28618,d_date#28620] Batched: true, DataFilters: [isnotnull(d_date#28620), (d_date#28620 >= 2001-03-14), (cast(d_date#28620 as date) <= 2001-06-12..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2001-03-14), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:string>
               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=80616]
                  +- Project [d_date_sk#24]
                     +- Filter (((isnotnull(d_date#26) AND (d_date#26 >= 2001-03-14)) AND (cast(d_date#26 as date) <= 2001-06-12)) AND isnotnull(d_date_sk#24))
                        +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#24,d_date#26] Batched: true, DataFilters: [isnotnull(d_date#26), (d_date#26 >= 2001-03-14), (cast(d_date#26 as date) <= 2001-06-12), isnotn..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2001-03-14), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:string>
