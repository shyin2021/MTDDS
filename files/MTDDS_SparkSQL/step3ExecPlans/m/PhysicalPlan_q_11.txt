AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[customer_id#9529 ASC NULLS FIRST,customer_first_name#9530 ASC NULLS FIRST,customer_last_name#9531 ASC NULLS FIRST,customer_login#9534 ASC NULLS FIRST], output=[customer_id#9529,customer_first_name#9530,customer_last_name#9531,customer_login#9534])
   +- Project [customer_id#9529, customer_first_name#9530, customer_last_name#9531, customer_login#9534]
      +- SortMergeJoin [customer_id#9459], [customer_id#9549], Inner, (CASE WHEN (year_total#9477 > 0.0) THEN (year_total#9557 / year_total#9477) ELSE 0.0 END > CASE WHEN (year_total#9467 > 0.0) THEN (year_total#9537 / year_total#9467) ELSE 0.0 END)
         :- Project [customer_id#9459, year_total#9467, customer_id#9529, customer_first_name#9530, customer_last_name#9531, customer_login#9534, year_total#9537, year_total#9477]
         :  +- SortMergeJoin [customer_id#9459], [customer_id#9469], Inner
         :     :- SortMergeJoin [customer_id#9459], [customer_id#9529], Inner
         :     :  :- Sort [customer_id#9459 ASC NULLS FIRST], false, 0
         :     :  :  +- Exchange hashpartitioning(customer_id#9459, 200), ENSURE_REQUIREMENTS, [plan_id=16629]
         :     :  :     +- Filter (isnotnull(year_total#9467) AND (year_total#9467 > 0.0))
         :     :  :        +- HashAggregate(keys=[c_customer_id#82, c_first_name#89, c_last_name#90, c_preferred_cust_flag#91, c_birth_country#95, c_login#96, c_email_address#97, d_year#30], functions=[sum((ss_ext_list_price#1265 - ss_ext_discount_amt#1262))], output=[customer_id#9459, year_total#9467])
         :     :  :           +- Exchange hashpartitioning(c_customer_id#82, c_first_name#89, c_last_name#90, c_preferred_cust_flag#91, c_birth_country#95, c_login#96, c_email_address#97, d_year#30, 200), ENSURE_REQUIREMENTS, [plan_id=16613]
         :     :  :              +- HashAggregate(keys=[c_customer_id#82, c_first_name#89, c_last_name#90, c_preferred_cust_flag#91, c_birth_country#95, c_login#96, c_email_address#97, d_year#30], functions=[partial_sum((ss_ext_list_price#1265 - ss_ext_discount_amt#1262))], output=[c_customer_id#82, c_first_name#89, c_last_name#90, c_preferred_cust_flag#91, c_birth_country#95, c_login#96, c_email_address#97, d_year#30, sum#11514])
         :     :  :                 +- Project [c_customer_id#82, c_first_name#89, c_last_name#90, c_preferred_cust_flag#91, c_birth_country#95, c_login#96, c_email_address#97, ss_ext_discount_amt#1262, ss_ext_list_price#1265, d_year#30]
         :     :  :                    +- BroadcastHashJoin [ss_sold_date_sk#1248], [d_date_sk#24], Inner, BuildRight, false
         :     :  :                       :- Project [c_customer_id#82, c_first_name#89, c_last_name#90, c_preferred_cust_flag#91, c_birth_country#95, c_login#96, c_email_address#97, ss_sold_date_sk#1248, ss_ext_discount_amt#1262, ss_ext_list_price#1265]
         :     :  :                       :  +- BroadcastHashJoin [c_customer_sk#81], [ss_customer_sk#1251], Inner, BuildLeft, false
         :     :  :                       :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=16604]
         :     :  :                       :     :  +- Filter (isnotnull(c_customer_sk#81) AND isnotnull(c_customer_id#82))
         :     :  :                       :     :     +- FileScan parquet spark_catalog.m.customer[c_customer_sk#81,c_customer_id#82,c_first_name#89,c_last_name#90,c_preferred_cust_flag#91,c_birth_country#95,c_login#96,c_email_address#97] Batched: true, DataFilters: [isnotnull(c_customer_sk#81), isnotnull(c_customer_id#82)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
         :     :  :                       :     +- Filter (isnotnull(ss_customer_sk#1251) AND isnotnull(ss_sold_date_sk#1248))
         :     :  :                       :        +- FileScan parquet spark_catalog.m.store_sales[ss_sold_date_sk#1248,ss_customer_sk#1251,ss_ext_discount_amt#1262,ss_ext_list_price#1265] Batched: true, DataFilters: [isnotnull(ss_customer_sk#1251), isnotnull(ss_sold_date_sk#1248)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_ext_discount_amt:double,ss_ext_list_price:double>
         :     :  :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=16608]
         :     :  :                          +- Filter ((isnotnull(d_year#30) AND (d_year#30 = 2001)) AND isnotnull(d_date_sk#24))
         :     :  :                             +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#24,d_year#30] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 2001), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :     :  +- Sort [customer_id#9529 ASC NULLS FIRST], false, 0
         :     :     +- Exchange hashpartitioning(customer_id#9529, 200), ENSURE_REQUIREMENTS, [plan_id=16630]
         :     :        +- HashAggregate(keys=[c_customer_id#11547, c_first_name#11554, c_last_name#11555, c_preferred_cust_flag#11556, c_birth_country#11560, c_login#11561, c_email_address#11562, d_year#11593], functions=[sum((ss_ext_list_price#11581 - ss_ext_discount_amt#11578))], output=[customer_id#9529, customer_first_name#9530, customer_last_name#9531, customer_login#9534, year_total#9537])
         :     :           +- Exchange hashpartitioning(c_customer_id#11547, c_first_name#11554, c_last_name#11555, c_preferred_cust_flag#11556, c_birth_country#11560, c_login#11561, c_email_address#11562, d_year#11593, 200), ENSURE_REQUIREMENTS, [plan_id=16625]
         :     :              +- HashAggregate(keys=[c_customer_id#11547, c_first_name#11554, c_last_name#11555, c_preferred_cust_flag#11556, c_birth_country#11560, c_login#11561, c_email_address#11562, d_year#11593], functions=[partial_sum((ss_ext_list_price#11581 - ss_ext_discount_amt#11578))], output=[c_customer_id#11547, c_first_name#11554, c_last_name#11555, c_preferred_cust_flag#11556, c_birth_country#11560, c_login#11561, c_email_address#11562, d_year#11593, sum#12054])
         :     :                 +- Project [c_customer_id#11547, c_first_name#11554, c_last_name#11555, c_preferred_cust_flag#11556, c_birth_country#11560, c_login#11561, c_email_address#11562, ss_ext_discount_amt#11578, ss_ext_list_price#11581, d_year#11593]
         :     :                    +- BroadcastHashJoin [ss_sold_date_sk#11564], [d_date_sk#11587], Inner, BuildRight, false
         :     :                       :- Project [c_customer_id#11547, c_first_name#11554, c_last_name#11555, c_preferred_cust_flag#11556, c_birth_country#11560, c_login#11561, c_email_address#11562, ss_sold_date_sk#11564, ss_ext_discount_amt#11578, ss_ext_list_price#11581]
         :     :                       :  +- BroadcastHashJoin [c_customer_sk#11546], [ss_customer_sk#11567], Inner, BuildLeft, false
         :     :                       :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=16616]
         :     :                       :     :  +- Filter (isnotnull(c_customer_sk#11546) AND isnotnull(c_customer_id#11547))
         :     :                       :     :     +- FileScan parquet spark_catalog.m.customer[c_customer_sk#11546,c_customer_id#11547,c_first_name#11554,c_last_name#11555,c_preferred_cust_flag#11556,c_birth_country#11560,c_login#11561,c_email_address#11562] Batched: true, DataFilters: [isnotnull(c_customer_sk#11546), isnotnull(c_customer_id#11547)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
         :     :                       :     +- Filter (isnotnull(ss_customer_sk#11567) AND isnotnull(ss_sold_date_sk#11564))
         :     :                       :        +- FileScan parquet spark_catalog.m.store_sales[ss_sold_date_sk#11564,ss_customer_sk#11567,ss_ext_discount_amt#11578,ss_ext_list_price#11581] Batched: true, DataFilters: [isnotnull(ss_customer_sk#11567), isnotnull(ss_sold_date_sk#11564)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_ext_discount_amt:double,ss_ext_list_price:double>
         :     :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=16620]
         :     :                          +- Filter ((isnotnull(d_year#11593) AND (d_year#11593 = 2002)) AND isnotnull(d_date_sk#11587))
         :     :                             +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#11587,d_year#11593] Batched: true, DataFilters: [isnotnull(d_year#11593), (d_year#11593 = 2002), isnotnull(d_date_sk#11587)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :     +- Sort [customer_id#9469 ASC NULLS FIRST], false, 0
         :        +- Exchange hashpartitioning(customer_id#9469, 200), ENSURE_REQUIREMENTS, [plan_id=16648]
         :           +- Filter (isnotnull(year_total#9477) AND (year_total#9477 > 0.0))
         :              +- HashAggregate(keys=[c_customer_id#11775, c_first_name#11782, c_last_name#11783, c_preferred_cust_flag#11784, c_birth_country#11788, c_login#11789, c_email_address#11790, d_year#11832], functions=[sum((ws_ext_list_price#11817 - ws_ext_discount_amt#11814))], output=[customer_id#9469, year_total#9477])
         :                 +- Exchange hashpartitioning(c_customer_id#11775, c_first_name#11782, c_last_name#11783, c_preferred_cust_flag#11784, c_birth_country#11788, c_login#11789, c_email_address#11790, d_year#11832, 200), ENSURE_REQUIREMENTS, [plan_id=16643]
         :                    +- HashAggregate(keys=[c_customer_id#11775, c_first_name#11782, c_last_name#11783, c_preferred_cust_flag#11784, c_birth_country#11788, c_login#11789, c_email_address#11790, d_year#11832], functions=[partial_sum((ws_ext_list_price#11817 - ws_ext_discount_amt#11814))], output=[c_customer_id#11775, c_first_name#11782, c_last_name#11783, c_preferred_cust_flag#11784, c_birth_country#11788, c_login#11789, c_email_address#11790, d_year#11832, sum#12056])
         :                       +- Project [c_customer_id#11775, c_first_name#11782, c_last_name#11783, c_preferred_cust_flag#11784, c_birth_country#11788, c_login#11789, c_email_address#11790, ws_ext_discount_amt#11814, ws_ext_list_price#11817, d_year#11832]
         :                          +- BroadcastHashJoin [ws_sold_date_sk#11792], [d_date_sk#11826], Inner, BuildRight, false
         :                             :- Project [c_customer_id#11775, c_first_name#11782, c_last_name#11783, c_preferred_cust_flag#11784, c_birth_country#11788, c_login#11789, c_email_address#11790, ws_sold_date_sk#11792, ws_ext_discount_amt#11814, ws_ext_list_price#11817]
         :                             :  +- BroadcastHashJoin [c_customer_sk#11774], [ws_bill_customer_sk#11796], Inner, BuildLeft, false
         :                             :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=16634]
         :                             :     :  +- Filter (isnotnull(c_customer_sk#11774) AND isnotnull(c_customer_id#11775))
         :                             :     :     +- FileScan parquet spark_catalog.m.customer[c_customer_sk#11774,c_customer_id#11775,c_first_name#11782,c_last_name#11783,c_preferred_cust_flag#11784,c_birth_country#11788,c_login#11789,c_email_address#11790] Batched: true, DataFilters: [isnotnull(c_customer_sk#11774), isnotnull(c_customer_id#11775)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
         :                             :     +- Filter (isnotnull(ws_bill_customer_sk#11796) AND isnotnull(ws_sold_date_sk#11792))
         :                             :        +- FileScan parquet spark_catalog.m.web_sales[ws_sold_date_sk#11792,ws_bill_customer_sk#11796,ws_ext_discount_amt#11814,ws_ext_list_price#11817] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#11796), isnotnull(ws_sold_date_sk#11792)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_bill_customer_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int,ws_ext_discount_amt:double,ws_ext_list_price:d...
         :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=16638]
         :                                +- Filter ((isnotnull(d_year#11832) AND (d_year#11832 = 2001)) AND isnotnull(d_date_sk#11826))
         :                                   +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#11826,d_year#11832] Batched: true, DataFilters: [isnotnull(d_year#11832), (d_year#11832 = 2001), isnotnull(d_date_sk#11826)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         +- Sort [customer_id#9549 ASC NULLS FIRST], false, 0
            +- Exchange hashpartitioning(customer_id#9549, 200), ENSURE_REQUIREMENTS, [plan_id=16665]
               +- HashAggregate(keys=[c_customer_id#11934, c_first_name#11941, c_last_name#11942, c_preferred_cust_flag#11943, c_birth_country#11947, c_login#11948, c_email_address#11949, d_year#11991], functions=[sum((ws_ext_list_price#11976 - ws_ext_discount_amt#11973))], output=[customer_id#9549, year_total#9557])
                  +- Exchange hashpartitioning(c_customer_id#11934, c_first_name#11941, c_last_name#11942, c_preferred_cust_flag#11943, c_birth_country#11947, c_login#11948, c_email_address#11949, d_year#11991, 200), ENSURE_REQUIREMENTS, [plan_id=16661]
                     +- HashAggregate(keys=[c_customer_id#11934, c_first_name#11941, c_last_name#11942, c_preferred_cust_flag#11943, c_birth_country#11947, c_login#11948, c_email_address#11949, d_year#11991], functions=[partial_sum((ws_ext_list_price#11976 - ws_ext_discount_amt#11973))], output=[c_customer_id#11934, c_first_name#11941, c_last_name#11942, c_preferred_cust_flag#11943, c_birth_country#11947, c_login#11948, c_email_address#11949, d_year#11991, sum#12058])
                        +- Project [c_customer_id#11934, c_first_name#11941, c_last_name#11942, c_preferred_cust_flag#11943, c_birth_country#11947, c_login#11948, c_email_address#11949, ws_ext_discount_amt#11973, ws_ext_list_price#11976, d_year#11991]
                           +- BroadcastHashJoin [ws_sold_date_sk#11951], [d_date_sk#11985], Inner, BuildRight, false
                              :- Project [c_customer_id#11934, c_first_name#11941, c_last_name#11942, c_preferred_cust_flag#11943, c_birth_country#11947, c_login#11948, c_email_address#11949, ws_sold_date_sk#11951, ws_ext_discount_amt#11973, ws_ext_list_price#11976]
                              :  +- BroadcastHashJoin [c_customer_sk#11933], [ws_bill_customer_sk#11955], Inner, BuildLeft, false
                              :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=16652]
                              :     :  +- Filter (isnotnull(c_customer_sk#11933) AND isnotnull(c_customer_id#11934))
                              :     :     +- FileScan parquet spark_catalog.m.customer[c_customer_sk#11933,c_customer_id#11934,c_first_name#11941,c_last_name#11942,c_preferred_cust_flag#11943,c_birth_country#11947,c_login#11948,c_email_address#11949] Batched: true, DataFilters: [isnotnull(c_customer_sk#11933), isnotnull(c_customer_id#11934)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
                              :     +- Filter (isnotnull(ws_bill_customer_sk#11955) AND isnotnull(ws_sold_date_sk#11951))
                              :        +- FileScan parquet spark_catalog.m.web_sales[ws_sold_date_sk#11951,ws_bill_customer_sk#11955,ws_ext_discount_amt#11973,ws_ext_list_price#11976] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#11955), isnotnull(ws_sold_date_sk#11951)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_bill_customer_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int,ws_ext_discount_amt:double,ws_ext_list_price:d...
                              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=16656]
                                 +- Filter ((isnotnull(d_year#11991) AND (d_year#11991 = 2002)) AND isnotnull(d_date_sk#11985))
                                    +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#11985,d_year#11991] Batched: true, DataFilters: [isnotnull(d_year#11991), (d_year#11991 = 2002), isnotnull(d_date_sk#11985)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
