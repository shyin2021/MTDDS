AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[s_store_name#57 ASC NULLS FIRST,s_company_id#68 ASC NULLS FIRST,s_street_number#70 ASC NULLS FIRST,s_street_name#71 ASC NULLS FIRST,s_street_type#72 ASC NULLS FIRST,s_suite_number#73 ASC NULLS FIRST,s_city#74 ASC NULLS FIRST,s_county#75 ASC NULLS FIRST,s_state#76 ASC NULLS FIRST,s_zip#77 ASC NULLS FIRST], output=[s_store_name#57,s_company_id#68,s_street_number#70,s_street_name#71,s_street_type#72,s_suite_number#73,s_city#74,s_county#75,s_state#76,s_zip#77,30_days#33638L,31_60_days#33639L,61_90_days#33640L,91_120_days#33641L,above120_days#33642L])
   +- HashAggregate(keys=[s_store_name#57, s_company_id#68, s_street_number#70, s_street_name#71, s_street_type#72, s_suite_number#73, s_city#74, s_county#75, s_state#76, s_zip#77], functions=[sum(CASE WHEN ((sr_returned_date_sk#4 - ss_sold_date_sk#1248) <= 30) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#4 - ss_sold_date_sk#1248) > 30) AND ((sr_returned_date_sk#4 - ss_sold_date_sk#1248) <= 60)) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#4 - ss_sold_date_sk#1248) > 60) AND ((sr_returned_date_sk#4 - ss_sold_date_sk#1248) <= 90)) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#4 - ss_sold_date_sk#1248) > 90) AND ((sr_returned_date_sk#4 - ss_sold_date_sk#1248) <= 120)) THEN 1 ELSE 0 END), sum(CASE WHEN ((sr_returned_date_sk#4 - ss_sold_date_sk#1248) > 120) THEN 1 ELSE 0 END)], output=[s_store_name#57, s_company_id#68, s_street_number#70, s_street_name#71, s_street_type#72, s_suite_number#73, s_city#74, s_county#75, s_state#76, s_zip#77, 30_days#33638L, 31_60_days#33639L, 61_90_days#33640L, 91_120_days#33641L, above120_days#33642L])
      +- Exchange hashpartitioning(s_store_name#57, s_company_id#68, s_street_number#70, s_street_name#71, s_street_type#72, s_suite_number#73, s_city#74, s_county#75, s_state#76, s_zip#77, 200), ENSURE_REQUIREMENTS, [plan_id=101614]
         +- HashAggregate(keys=[s_store_name#57, s_company_id#68, s_street_number#70, s_street_name#71, s_street_type#72, s_suite_number#73, s_city#74, s_county#75, s_state#76, s_zip#77], functions=[partial_sum(CASE WHEN ((sr_returned_date_sk#4 - ss_sold_date_sk#1248) <= 30) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((sr_returned_date_sk#4 - ss_sold_date_sk#1248) > 30) AND ((sr_returned_date_sk#4 - ss_sold_date_sk#1248) <= 60)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((sr_returned_date_sk#4 - ss_sold_date_sk#1248) > 60) AND ((sr_returned_date_sk#4 - ss_sold_date_sk#1248) <= 90)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((sr_returned_date_sk#4 - ss_sold_date_sk#1248) > 90) AND ((sr_returned_date_sk#4 - ss_sold_date_sk#1248) <= 120)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN ((sr_returned_date_sk#4 - ss_sold_date_sk#1248) > 120) THEN 1 ELSE 0 END)], output=[s_store_name#57, s_company_id#68, s_street_number#70, s_street_name#71, s_street_type#72, s_suite_number#73, s_city#74, s_county#75, s_state#76, s_zip#77, sum#33742L, sum#33743L, sum#33744L, sum#33745L, sum#33746L])
            +- Project [ss_sold_date_sk#1248, sr_returned_date_sk#4, s_store_name#57, s_company_id#68, s_street_number#70, s_street_name#71, s_street_type#72, s_suite_number#73, s_city#74, s_county#75, s_state#76, s_zip#77]
               +- BroadcastHashJoin [sr_returned_date_sk#4], [d_date_sk#33643], Inner, BuildRight, false
                  :- Project [ss_sold_date_sk#1248, sr_returned_date_sk#4, s_store_name#57, s_company_id#68, s_street_number#70, s_street_name#71, s_street_type#72, s_suite_number#73, s_city#74, s_county#75, s_state#76, s_zip#77]
                  :  +- BroadcastHashJoin [ss_sold_date_sk#1248], [d_date_sk#24], Inner, BuildRight, false
                  :     :- Project [ss_sold_date_sk#1248, sr_returned_date_sk#4, s_store_name#57, s_company_id#68, s_street_number#70, s_street_name#71, s_street_type#72, s_suite_number#73, s_city#74, s_county#75, s_state#76, s_zip#77]
                  :     :  +- BroadcastHashJoin [ss_store_sk#1255], [s_store_sk#52], Inner, BuildRight, false
                  :     :     :- Project [ss_sold_date_sk#1248, ss_store_sk#1255, sr_returned_date_sk#4]
                  :     :     :  +- BroadcastHashJoin [ss_ticket_number#1257, ss_item_sk#1250, ss_customer_sk#1251], [sr_ticket_number#13, sr_item_sk#6, sr_customer_sk#7], Inner, BuildRight, false
                  :     :     :     :- Filter ((((isnotnull(ss_ticket_number#1257) AND isnotnull(ss_item_sk#1250)) AND isnotnull(ss_customer_sk#1251)) AND isnotnull(ss_store_sk#1255)) AND isnotnull(ss_sold_date_sk#1248))
                  :     :     :     :  +- FileScan parquet spark_catalog.m.store_sales[ss_sold_date_sk#1248,ss_item_sk#1250,ss_customer_sk#1251,ss_store_sk#1255,ss_ticket_number#1257] Batched: true, DataFilters: [isnotnull(ss_ticket_number#1257), isnotnull(ss_item_sk#1250), isnotnull(ss_customer_sk#1251), is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_ticket_number), IsNotNull(ss_item_sk), IsNotNull(ss_customer_sk), IsNotNull(ss_stor..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:int>
                  :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[3, int, false], input[1, int, false], input[2, int, false]),false), [plan_id=101597]
                  :     :     :        +- Filter (((isnotnull(sr_ticket_number#13) AND isnotnull(sr_item_sk#6)) AND isnotnull(sr_customer_sk#7)) AND isnotnull(sr_returned_date_sk#4))
                  :     :     :           +- FileScan parquet spark_catalog.m.store_returns[sr_returned_date_sk#4,sr_item_sk#6,sr_customer_sk#7,sr_ticket_number#13] Batched: true, DataFilters: [isnotnull(sr_ticket_number#13), isnotnull(sr_item_sk#6), isnotnull(sr_customer_sk#7), isnotnull(..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store_returns], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk), IsNotNull(sr_customer_sk), IsNotNull(sr_retu..., ReadSchema: struct<sr_returned_date_sk:int,sr_item_sk:int,sr_customer_sk:int,sr_ticket_number:int>
                  :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=101601]
                  :     :        +- Filter isnotnull(s_store_sk#52)
                  :     :           +- FileScan parquet spark_catalog.m.store[s_store_sk#52,s_store_name#57,s_company_id#68,s_street_number#70,s_street_name#71,s_street_type#72,s_suite_number#73,s_city#74,s_county#75,s_state#76,s_zip#77] Batched: true, DataFilters: [isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_id:int,s_street_number:string,s_street_name:s...
                  :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=101605]
                  :        +- Filter isnotnull(d_date_sk#24)
                  :           +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#24] Batched: true, DataFilters: [isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int>
                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=101609]
                     +- Project [d_date_sk#33643]
                        +- Filter ((((isnotnull(d_year#33649) AND isnotnull(d_moy#33651)) AND (d_year#33649 = 2000)) AND (d_moy#33651 = 10)) AND isnotnull(d_date_sk#33643))
                           +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#33643,d_year#33649,d_moy#33651] Batched: true, DataFilters: [isnotnull(d_year#33649), isnotnull(d_moy#33651), (d_year#33649 = 2000), (d_moy#33651 = 10), isno..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,10), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
