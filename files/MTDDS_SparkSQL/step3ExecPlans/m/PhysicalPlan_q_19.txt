AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[ext_price#21130 DESC NULLS LAST,brand#21129 ASC NULLS FIRST,brand_id#21128 ASC NULLS FIRST,i_manufact_id#1284 ASC NULLS FIRST,i_manufact#1285 ASC NULLS FIRST], output=[brand_id#21128,brand#21129,i_manufact_id#1284,i_manufact#1285,ext_price#21130])
   +- HashAggregate(keys=[i_brand#1279, i_brand_id#1278, i_manufact_id#1284, i_manufact#1285], functions=[sum(ss_ext_sales_price#1263)], output=[brand_id#21128, brand#21129, i_manufact_id#1284, i_manufact#1285, ext_price#21130])
      +- Exchange hashpartitioning(i_brand#1279, i_brand_id#1278, i_manufact_id#1284, i_manufact#1285, 200), ENSURE_REQUIREMENTS, [plan_id=52977]
         +- HashAggregate(keys=[i_brand#1279, i_brand_id#1278, i_manufact_id#1284, i_manufact#1285], functions=[partial_sum(ss_ext_sales_price#1263)], output=[i_brand#1279, i_brand_id#1278, i_manufact_id#1284, i_manufact#1285, sum#21153])
            +- Project [ss_ext_sales_price#1263, i_brand_id#1278, i_brand#1279, i_manufact_id#1284, i_manufact#1285]
               +- BroadcastHashJoin [ss_store_sk#1255], [s_store_sk#52], Inner, BuildRight, NOT (substr(ca_zip#8180, 1, 5) = substr(s_zip#77, 1, 5)), false
                  :- Project [ss_store_sk#1255, ss_ext_sales_price#1263, i_brand_id#1278, i_brand#1279, i_manufact_id#1284, i_manufact#1285, ca_zip#8180]
                  :  +- BroadcastHashJoin [c_current_addr_sk#85], [ca_address_sk#8171], Inner, BuildRight, false
                  :     :- Project [ss_store_sk#1255, ss_ext_sales_price#1263, i_brand_id#1278, i_brand#1279, i_manufact_id#1284, i_manufact#1285, c_current_addr_sk#85]
                  :     :  +- BroadcastHashJoin [ss_customer_sk#1251], [c_customer_sk#81], Inner, BuildRight, false
                  :     :     :- Project [ss_customer_sk#1251, ss_store_sk#1255, ss_ext_sales_price#1263, i_brand_id#1278, i_brand#1279, i_manufact_id#1284, i_manufact#1285]
                  :     :     :  +- BroadcastHashJoin [ss_item_sk#1250], [i_item_sk#1271], Inner, BuildRight, false
                  :     :     :     :- Project [ss_item_sk#1250, ss_customer_sk#1251, ss_store_sk#1255, ss_ext_sales_price#1263]
                  :     :     :     :  +- BroadcastHashJoin [d_date_sk#24], [ss_sold_date_sk#1248], Inner, BuildLeft, false
                  :     :     :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=52956]
                  :     :     :     :     :  +- Project [d_date_sk#24]
                  :     :     :     :     :     +- Filter ((((isnotnull(d_moy#32) AND isnotnull(d_year#30)) AND (d_moy#32 = 12)) AND (d_year#30 = 2000)) AND isnotnull(d_date_sk#24))
                  :     :     :     :     :        +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [isnotnull(d_moy#32), isnotnull(d_year#30), (d_moy#32 = 12), (d_year#30 = 2000), isnotnull(d_date..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), EqualTo(d_moy,12), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                  :     :     :     :     +- Filter (((isnotnull(ss_sold_date_sk#1248) AND isnotnull(ss_item_sk#1250)) AND isnotnull(ss_customer_sk#1251)) AND isnotnull(ss_store_sk#1255))
                  :     :     :     :        +- FileScan parquet spark_catalog.m.store_sales[ss_sold_date_sk#1248,ss_item_sk#1250,ss_customer_sk#1251,ss_store_sk#1255,ss_ext_sales_price#1263] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#1248), isnotnull(ss_item_sk#1250), isnotnull(ss_customer_sk#1251), isn..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk), IsNotNull(ss_customer_sk), IsNotNull(ss_store..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ext_sales_price:d...
                  :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=52960]
                  :     :     :        +- Project [i_item_sk#1271, i_brand_id#1278, i_brand#1279, i_manufact_id#1284, i_manufact#1285]
                  :     :     :           +- Filter ((isnotnull(i_manager_id#1291) AND (i_manager_id#1291 = 13)) AND isnotnull(i_item_sk#1271))
                  :     :     :              +- FileScan parquet spark_catalog.m.item[i_item_sk#1271,i_brand_id#1278,i_brand#1279,i_manufact_id#1284,i_manufact#1285,i_manager_id#1291] Batched: true, DataFilters: [isnotnull(i_manager_id#1291), (i_manager_id#1291 = 13), isnotnull(i_item_sk#1271)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_manager_id), EqualTo(i_manager_id,13), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_brand:string,i_manufact_id:int,i_manufact:string,i_manager_...
                  :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=52964]
                  :     :        +- Filter (isnotnull(c_customer_sk#81) AND isnotnull(c_current_addr_sk#85))
                  :     :           +- FileScan parquet spark_catalog.m.customer[c_customer_sk#81,c_current_addr_sk#85] Batched: true, DataFilters: [isnotnull(c_customer_sk#81), isnotnull(c_current_addr_sk#85)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
                  :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=52968]
                  :        +- Filter (isnotnull(ca_address_sk#8171) AND isnotnull(ca_zip#8180))
                  :           +- FileScan parquet spark_catalog.m.customer_address[ca_address_sk#8171,ca_zip#8180] Batched: true, DataFilters: [isnotnull(ca_address_sk#8171), isnotnull(ca_zip#8180)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_zip)], ReadSchema: struct<ca_address_sk:int,ca_zip:string>
                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=52972]
                     +- Filter (isnotnull(s_zip#77) AND isnotnull(s_store_sk#52))
                        +- FileScan parquet spark_catalog.m.store[s_store_sk#52,s_zip#77] Batched: true, DataFilters: [isnotnull(s_zip#77), isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_zip), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_zip:string>
