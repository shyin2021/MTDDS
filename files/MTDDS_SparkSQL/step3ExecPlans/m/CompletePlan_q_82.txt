== Parsed Logical Plan ==
'GlobalLimit 100
+- 'LocalLimit 100
   +- 'Sort ['i_item_id ASC NULLS FIRST], true
      +- 'Aggregate ['i_item_id, 'i_item_desc, 'i_current_price], ['i_item_id, 'i_item_desc, 'i_current_price]
         +- 'Filter ((((('i_current_price >= 25) AND ('i_current_price <= (25 + 30))) AND ('inv_item_sk = 'i_item_sk)) AND (('d_date_sk = 'inv_date_sk) AND (('d_date >= cast(2001-04-09 as date)) AND ('d_date <= (cast(2001-04-09 as date) + 60))))) AND (('i_manufact_id IN (838,637,831,580) AND (('inv_quantity_on_hand >= 100) AND ('inv_quantity_on_hand <= 500))) AND ('ss_item_sk = 'i_item_sk)))
            +- 'Join Inner
               :- 'Join Inner
               :  :- 'Join Inner
               :  :  :- 'UnresolvedRelation [item], [], false
               :  :  +- 'UnresolvedRelation [inventory], [], false
               :  +- 'UnresolvedRelation [date_dim], [], false
               +- 'UnresolvedRelation [store_sales], [], false

== Analyzed Logical Plan ==
i_item_id: string, i_item_desc: string, i_current_price: double
GlobalLimit 100
+- LocalLimit 100
   +- Sort [i_item_id#1272 ASC NULLS FIRST], true
      +- Aggregate [i_item_id#1272, i_item_desc#1275, i_current_price#1276], [i_item_id#1272, i_item_desc#1275, i_current_price#1276]
         +- Filter (((((i_current_price#1276 >= cast(25 as double)) AND (i_current_price#1276 <= cast((25 + 30) as double))) AND (inv_item_sk#21217 = i_item_sk#1271)) AND ((d_date_sk#24 = inv_date_sk#21216) AND ((cast(d_date#26 as date) >= cast(2001-04-09 as date)) AND (cast(d_date#26 as date) <= date_add(cast(2001-04-09 as date), 60))))) AND ((i_manufact_id#1284 IN (838,637,831,580) AND ((inv_quantity_on_hand#21219L >= cast(100 as bigint)) AND (inv_quantity_on_hand#21219L <= cast(500 as bigint)))) AND (ss_item_sk#1250 = i_item_sk#1271)))
            +- Join Inner
               :- Join Inner
               :  :- Join Inner
               :  :  :- SubqueryAlias spark_catalog.m.item
               :  :  :  +- Relation spark_catalog.m.item[i_item_sk#1271,i_item_id#1272,i_rec_start_date#1273,i_rec_end_date#1274,i_item_desc#1275,i_current_price#1276,i_wholesale_cost#1277,i_brand_id#1278,i_brand#1279,i_class_id#1280,i_class#1281,i_category_id#1282,i_category#1283,i_manufact_id#1284,i_manufact#1285,i_size#1286,i_formulation#1287,i_color#1288,i_units#1289,i_container#1290,i_manager_id#1291,i_product_name#1292] parquet
               :  :  +- SubqueryAlias spark_catalog.m.inventory
               :  :     +- Relation spark_catalog.m.inventory[inv_date_sk#21216,inv_item_sk#21217,inv_warehouse_sk#21218,inv_quantity_on_hand#21219L] parquet
               :  +- SubqueryAlias spark_catalog.m.date_dim
               :     +- Relation spark_catalog.m.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet
               +- SubqueryAlias spark_catalog.m.store_sales
                  +- Relation spark_catalog.m.store_sales[ss_sold_date_sk#1248,ss_sold_time_sk#1249,ss_item_sk#1250,ss_customer_sk#1251,ss_cdemo_sk#1252,ss_hdemo_sk#1253,ss_addr_sk#1254,ss_store_sk#1255,ss_promo_sk#1256,ss_ticket_number#1257,ss_quantity#1258,ss_wholesale_cost#1259,ss_list_price#1260,ss_sales_price#1261,ss_ext_discount_amt#1262,ss_ext_sales_price#1263,ss_ext_wholesale_cost#1264,ss_ext_list_price#1265,ss_ext_tax#1266,ss_coupon_amt#1267,ss_net_paid#1268,ss_net_paid_inc_tax#1269,ss_net_profit#1270] parquet

== Optimized Logical Plan ==
GlobalLimit 100
+- LocalLimit 100
   +- Sort [i_item_id#1272 ASC NULLS FIRST], true
      +- Aggregate [i_item_id#1272, i_item_desc#1275, i_current_price#1276], [i_item_id#1272, i_item_desc#1275, i_current_price#1276]
         +- Project [i_item_id#1272, i_item_desc#1275, i_current_price#1276]
            +- Join Inner, (ss_item_sk#1250 = i_item_sk#1271)
               :- Project [i_item_sk#1271, i_item_id#1272, i_item_desc#1275, i_current_price#1276]
               :  +- Join Inner, (d_date_sk#24 = inv_date_sk#21216)
               :     :- Project [i_item_sk#1271, i_item_id#1272, i_item_desc#1275, i_current_price#1276, inv_date_sk#21216]
               :     :  +- Join Inner, (inv_item_sk#21217 = i_item_sk#1271)
               :     :     :- Project [i_item_sk#1271, i_item_id#1272, i_item_desc#1275, i_current_price#1276]
               :     :     :  +- Filter ((isnotnull(i_current_price#1276) AND (((i_current_price#1276 >= 25.0) AND (i_current_price#1276 <= 55.0)) AND i_manufact_id#1284 IN (838,637,831,580))) AND isnotnull(i_item_sk#1271))
               :     :     :     +- Relation spark_catalog.m.item[i_item_sk#1271,i_item_id#1272,i_rec_start_date#1273,i_rec_end_date#1274,i_item_desc#1275,i_current_price#1276,i_wholesale_cost#1277,i_brand_id#1278,i_brand#1279,i_class_id#1280,i_class#1281,i_category_id#1282,i_category#1283,i_manufact_id#1284,i_manufact#1285,i_size#1286,i_formulation#1287,i_color#1288,i_units#1289,i_container#1290,i_manager_id#1291,i_product_name#1292] parquet
               :     :     +- Project [inv_date_sk#21216, inv_item_sk#21217]
               :     :        +- Filter ((isnotnull(inv_quantity_on_hand#21219L) AND ((inv_quantity_on_hand#21219L >= 100) AND (inv_quantity_on_hand#21219L <= 500))) AND (isnotnull(inv_item_sk#21217) AND isnotnull(inv_date_sk#21216)))
               :     :           +- Relation spark_catalog.m.inventory[inv_date_sk#21216,inv_item_sk#21217,inv_warehouse_sk#21218,inv_quantity_on_hand#21219L] parquet
               :     +- Project [d_date_sk#24]
               :        +- Filter ((isnotnull(d_date#26) AND ((cast(d_date#26 as date) >= 2001-04-09) AND (cast(d_date#26 as date) <= 2001-06-08))) AND isnotnull(d_date_sk#24))
               :           +- Relation spark_catalog.m.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet
               +- Project [ss_item_sk#1250]
                  +- Filter isnotnull(ss_item_sk#1250)
                     +- Relation spark_catalog.m.store_sales[ss_sold_date_sk#1248,ss_sold_time_sk#1249,ss_item_sk#1250,ss_customer_sk#1251,ss_cdemo_sk#1252,ss_hdemo_sk#1253,ss_addr_sk#1254,ss_store_sk#1255,ss_promo_sk#1256,ss_ticket_number#1257,ss_quantity#1258,ss_wholesale_cost#1259,ss_list_price#1260,ss_sales_price#1261,ss_ext_discount_amt#1262,ss_ext_sales_price#1263,ss_ext_wholesale_cost#1264,ss_ext_list_price#1265,ss_ext_tax#1266,ss_coupon_amt#1267,ss_net_paid#1268,ss_net_paid_inc_tax#1269,ss_net_profit#1270] parquet

== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[i_item_id#1272 ASC NULLS FIRST], output=[i_item_id#1272,i_item_desc#1275,i_current_price#1276])
   +- HashAggregate(keys=[i_item_id#1272, i_item_desc#1275, i_current_price#1276], functions=[], output=[i_item_id#1272, i_item_desc#1275, i_current_price#1276])
      +- Exchange hashpartitioning(i_item_id#1272, i_item_desc#1275, i_current_price#1276, 200), ENSURE_REQUIREMENTS, [plan_id=159795]
         +- HashAggregate(keys=[i_item_id#1272, i_item_desc#1275, knownfloatingpointnormalized(normalizenanandzero(i_current_price#1276)) AS i_current_price#1276], functions=[], output=[i_item_id#1272, i_item_desc#1275, i_current_price#1276])
            +- Project [i_item_id#1272, i_item_desc#1275, i_current_price#1276]
               +- SortMergeJoin [i_item_sk#1271], [ss_item_sk#1250], Inner
                  :- Sort [i_item_sk#1271 ASC NULLS FIRST], false, 0
                  :  +- Exchange hashpartitioning(i_item_sk#1271, 200), ENSURE_REQUIREMENTS, [plan_id=159787]
                  :     +- Project [i_item_sk#1271, i_item_id#1272, i_item_desc#1275, i_current_price#1276]
                  :        +- BroadcastHashJoin [inv_date_sk#21216], [d_date_sk#24], Inner, BuildRight, false
                  :           :- Project [i_item_sk#1271, i_item_id#1272, i_item_desc#1275, i_current_price#1276, inv_date_sk#21216]
                  :           :  +- BroadcastHashJoin [i_item_sk#1271], [inv_item_sk#21217], Inner, BuildLeft, false
                  :           :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=159778]
                  :           :     :  +- Project [i_item_sk#1271, i_item_id#1272, i_item_desc#1275, i_current_price#1276]
                  :           :     :     +- Filter ((((isnotnull(i_current_price#1276) AND (i_current_price#1276 >= 25.0)) AND (i_current_price#1276 <= 55.0)) AND i_manufact_id#1284 IN (838,637,831,580)) AND isnotnull(i_item_sk#1271))
                  :           :     :        +- FileScan parquet spark_catalog.m.item[i_item_sk#1271,i_item_id#1272,i_item_desc#1275,i_current_price#1276,i_manufact_id#1284] Batched: true, DataFilters: [isnotnull(i_current_price#1276), (i_current_price#1276 >= 25.0), (i_current_price#1276 <= 55.0),..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_current_price), GreaterThanOrEqual(i_current_price,25.0), LessThanOrEqual(i_current_..., ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:double,i_manufact_id:int>
                  :           :     +- Project [inv_date_sk#21216, inv_item_sk#21217]
                  :           :        +- Filter ((((isnotnull(inv_quantity_on_hand#21219L) AND (inv_quantity_on_hand#21219L >= 100)) AND (inv_quantity_on_hand#21219L <= 500)) AND isnotnull(inv_item_sk#21217)) AND isnotnull(inv_date_sk#21216))
                  :           :           +- FileScan parquet spark_catalog.m.inventory[inv_date_sk#21216,inv_item_sk#21217,inv_quantity_on_hand#21219L] Batched: true, DataFilters: [isnotnull(inv_quantity_on_hand#21219L), (inv_quantity_on_hand#21219L >= 100), (inv_quantity_on_h..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/inventory], PartitionFilters: [], PushedFilters: [IsNotNull(inv_quantity_on_hand), GreaterThanOrEqual(inv_quantity_on_hand,100), LessThanOrEqual(i..., ReadSchema: struct<inv_date_sk:int,inv_item_sk:int,inv_quantity_on_hand:bigint>
                  :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=159782]
                  :              +- Project [d_date_sk#24]
                  :                 +- Filter (((isnotnull(d_date#26) AND (cast(d_date#26 as date) >= 2001-04-09)) AND (cast(d_date#26 as date) <= 2001-06-08)) AND isnotnull(d_date_sk#24))
                  :                    +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#24,d_date#26] Batched: true, DataFilters: [isnotnull(d_date#26), (cast(d_date#26 as date) >= 2001-04-09), (cast(d_date#26 as date) <= 2001-..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:string>
                  +- Sort [ss_item_sk#1250 ASC NULLS FIRST], false, 0
                     +- Exchange hashpartitioning(ss_item_sk#1250, 200), ENSURE_REQUIREMENTS, [plan_id=159788]
                        +- Filter isnotnull(ss_item_sk#1250)
                           +- FileScan parquet spark_catalog.m.store_sales[ss_item_sk#1250] Batched: true, DataFilters: [isnotnull(ss_item_sk#1250)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int>
