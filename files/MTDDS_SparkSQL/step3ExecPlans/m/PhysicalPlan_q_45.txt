AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[ca_zip#8180 ASC NULLS FIRST,ca_city#8177 ASC NULLS FIRST], output=[ca_zip#8180,ca_city#8177,sum(ws_sales_price)#31759])
   +- HashAggregate(keys=[ca_zip#8180, ca_city#8177], functions=[sum(ws_sales_price#448)], output=[ca_zip#8180, ca_city#8177, sum(ws_sales_price)#31759])
      +- Exchange hashpartitioning(ca_zip#8180, ca_city#8177, 200), ENSURE_REQUIREMENTS, [plan_id=94374]
         +- HashAggregate(keys=[ca_zip#8180, ca_city#8177], functions=[partial_sum(ws_sales_price#448)], output=[ca_zip#8180, ca_city#8177, sum#31774])
            +- Project [ws_sales_price#448, ca_city#8177, ca_zip#8180]
               +- Filter (substr(ca_zip#8180, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR exists#31782)
                  +- BroadcastHashJoin [i_item_id#1272], [i_item_id#31737], ExistenceJoin(exists#31782), BuildRight, false
                     :- Project [ws_sales_price#448, ca_city#8177, ca_zip#8180, i_item_id#1272]
                     :  +- BroadcastHashJoin [ws_item_sk#430], [i_item_sk#1271], Inner, BuildRight, false
                     :     :- Project [ws_item_sk#430, ws_sales_price#448, ca_city#8177, ca_zip#8180]
                     :     :  +- BroadcastHashJoin [ws_sold_date_sk#427], [d_date_sk#24], Inner, BuildRight, false
                     :     :     :- Project [ws_sold_date_sk#427, ws_item_sk#430, ws_sales_price#448, ca_city#8177, ca_zip#8180]
                     :     :     :  +- BroadcastHashJoin [c_current_addr_sk#85], [ca_address_sk#8171], Inner, BuildRight, false
                     :     :     :     :- Project [ws_sold_date_sk#427, ws_item_sk#430, ws_sales_price#448, c_current_addr_sk#85]
                     :     :     :     :  +- BroadcastHashJoin [ws_bill_customer_sk#431], [c_customer_sk#81], Inner, BuildRight, false
                     :     :     :     :     :- Filter ((isnotnull(ws_bill_customer_sk#431) AND isnotnull(ws_sold_date_sk#427)) AND isnotnull(ws_item_sk#430))
                     :     :     :     :     :  +- FileScan parquet spark_catalog.m.web_sales[ws_sold_date_sk#427,ws_item_sk#430,ws_bill_customer_sk#431,ws_sales_price#448] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#431), isnotnull(ws_sold_date_sk#427), isnotnull(ws_item_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_bill_customer_sk), IsNotNull(ws_sold_date_sk), IsNotNull(ws_item_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_sales_price:double>
                     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=94352]
                     :     :     :     :        +- Filter (isnotnull(c_customer_sk#81) AND isnotnull(c_current_addr_sk#85))
                     :     :     :     :           +- FileScan parquet spark_catalog.m.customer[c_customer_sk#81,c_current_addr_sk#85] Batched: true, DataFilters: [isnotnull(c_customer_sk#81), isnotnull(c_current_addr_sk#85)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
                     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=94356]
                     :     :     :        +- Filter isnotnull(ca_address_sk#8171)
                     :     :     :           +- FileScan parquet spark_catalog.m.customer_address[ca_address_sk#8171,ca_city#8177,ca_zip#8180] Batched: true, DataFilters: [isnotnull(ca_address_sk#8171)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_city:string,ca_zip:string>
                     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=94360]
                     :     :        +- Project [d_date_sk#24]
                     :     :           +- Filter ((((isnotnull(d_qoy#34) AND isnotnull(d_year#30)) AND (d_qoy#34 = 2)) AND (d_year#30 = 2001)) AND isnotnull(d_date_sk#24))
                     :     :              +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#24,d_year#30,d_qoy#34] Batched: true, DataFilters: [isnotnull(d_qoy#34), isnotnull(d_year#30), (d_qoy#34 = 2), (d_year#30 = 2001), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
                     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=94364]
                     :        +- Filter isnotnull(i_item_sk#1271)
                     :           +- FileScan parquet spark_catalog.m.item[i_item_sk#1271,i_item_id#1272] Batched: true, DataFilters: [isnotnull(i_item_sk#1271)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>
                     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=94368]
                        +- Project [i_item_id#31737]
                           +- Filter i_item_sk#31736 IN (2,3,5,7,11,13,17,19,23,29)
                              +- FileScan parquet spark_catalog.m.item[i_item_sk#31736,i_item_id#31737] Batched: true, DataFilters: [i_item_sk#31736 IN (2,3,5,7,11,13,17,19,23,29)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/item], PartitionFilters: [], PushedFilters: [In(i_item_sk, [11,13,17,19,2,23,29,3,5,7])], ReadSchema: struct<i_item_sk:int,i_item_id:string>
