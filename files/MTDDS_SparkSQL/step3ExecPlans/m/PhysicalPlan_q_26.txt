AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[i_item_id#1272 ASC NULLS FIRST], output=[i_item_id#1272,agg1#25493,agg2#25494,agg3#25495,agg4#25496])
   +- HashAggregate(keys=[i_item_id#1272], functions=[avg(cs_quantity#479), avg(cs_list_price#481), avg(cs_coupon_amt#488), avg(cs_sales_price#482)], output=[i_item_id#1272, agg1#25493, agg2#25494, agg3#25495, agg4#25496])
      +- Exchange hashpartitioning(i_item_id#1272, 200), ENSURE_REQUIREMENTS, [plan_id=70566]
         +- HashAggregate(keys=[i_item_id#1272], functions=[partial_avg(cs_quantity#479), partial_avg(cs_list_price#481), partial_avg(cs_coupon_amt#488), partial_avg(cs_sales_price#482)], output=[i_item_id#1272, sum#25529, count#25530L, sum#25531, count#25532L, sum#25533, count#25534L, sum#25535, count#25536L])
            +- Project [cs_quantity#479, cs_list_price#481, cs_sales_price#482, cs_coupon_amt#488, i_item_id#1272]
               +- BroadcastHashJoin [cs_promo_sk#477], [p_promo_sk#8275], Inner, BuildRight, false
                  :- Project [cs_promo_sk#477, cs_quantity#479, cs_list_price#481, cs_sales_price#482, cs_coupon_amt#488, i_item_id#1272]
                  :  +- BroadcastHashJoin [cs_item_sk#476], [i_item_sk#1271], Inner, BuildRight, false
                  :     :- Project [cs_item_sk#476, cs_promo_sk#477, cs_quantity#479, cs_list_price#481, cs_sales_price#482, cs_coupon_amt#488]
                  :     :  +- BroadcastHashJoin [cs_sold_date_sk#461], [d_date_sk#24], Inner, BuildRight, false
                  :     :     :- Project [cs_sold_date_sk#461, cs_item_sk#476, cs_promo_sk#477, cs_quantity#479, cs_list_price#481, cs_sales_price#482, cs_coupon_amt#488]
                  :     :     :  +- BroadcastHashJoin [cs_bill_cdemo_sk#465], [cd_demo_sk#8266], Inner, BuildRight, false
                  :     :     :     :- Filter (((isnotnull(cs_bill_cdemo_sk#465) AND isnotnull(cs_sold_date_sk#461)) AND isnotnull(cs_item_sk#476)) AND isnotnull(cs_promo_sk#477))
                  :     :     :     :  +- FileScan parquet spark_catalog.m.catalog_sales[cs_sold_date_sk#461,cs_bill_cdemo_sk#465,cs_item_sk#476,cs_promo_sk#477,cs_quantity#479,cs_list_price#481,cs_sales_price#482,cs_coupon_amt#488] Batched: true, DataFilters: [isnotnull(cs_bill_cdemo_sk#465), isnotnull(cs_sold_date_sk#461), isnotnull(cs_item_sk#476), isno..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs_item_sk), IsNotNull(cs_pro..., ReadSchema: struct<cs_sold_date_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_quantity:int,cs...
                  :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=70549]
                  :     :     :        +- Project [cd_demo_sk#8266]
                  :     :     :           +- Filter ((((((isnotnull(cd_gender#8267) AND isnotnull(cd_marital_status#8268)) AND isnotnull(cd_education_status#8269)) AND (cd_gender#8267 = M)) AND (cd_marital_status#8268 = D)) AND (cd_education_status#8269 = Secondary)) AND isnotnull(cd_demo_sk#8266))
                  :     :     :              +- FileScan parquet spark_catalog.m.customer_demographics[cd_demo_sk#8266,cd_gender#8267,cd_marital_status#8268,cd_education_status#8269] Batched: true, DataFilters: [isnotnull(cd_gender#8267), isnotnull(cd_marital_status#8268), isnotnull(cd_education_status#8269..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer_demograph..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_gender), IsNotNull(cd_marital_status), IsNotNull(cd_education_status), EqualTo(cd_g..., ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string>
                  :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=70553]
                  :     :        +- Project [d_date_sk#24]
                  :     :           +- Filter ((isnotnull(d_year#30) AND (d_year#30 = 2001)) AND isnotnull(d_date_sk#24))
                  :     :              +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#24,d_year#30] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 2001), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                  :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=70557]
                  :        +- Filter isnotnull(i_item_sk#1271)
                  :           +- FileScan parquet spark_catalog.m.item[i_item_sk#1271,i_item_id#1272] Batched: true, DataFilters: [isnotnull(i_item_sk#1271)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>
                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=70561]
                     +- Project [p_promo_sk#8275]
                        +- Filter (((p_channel_email#8284 = N) OR (p_channel_event#8289 = N)) AND isnotnull(p_promo_sk#8275))
                           +- FileScan parquet spark_catalog.m.promotion[p_promo_sk#8275,p_channel_email#8284,p_channel_event#8289] Batched: true, DataFilters: [((p_channel_email#8284 = N) OR (p_channel_event#8289 = N)), isnotnull(p_promo_sk#8275)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/promotion], PartitionFilters: [], PushedFilters: [Or(EqualTo(p_channel_email,N),EqualTo(p_channel_event,N)), IsNotNull(p_promo_sk)], ReadSchema: struct<p_promo_sk:int,p_channel_email:string,p_channel_event:string>
