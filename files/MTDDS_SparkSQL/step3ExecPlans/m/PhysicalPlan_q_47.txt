AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[(sum_sales#31848 - avg_monthly_sales#31849) ASC NULLS FIRST,psum#31851 ASC NULLS FIRST], output=[i_category#1283,d_year#30,avg_monthly_sales#31849,sum_sales#31848,psum#31851,nsum#31852])
   +- Project [i_category#1283, d_year#30, avg_monthly_sales#31849, sum_sales#31848, sum_sales#31873 AS psum#31851, sum_sales#31882 AS nsum#31852]
      +- SortMergeJoin [i_category#1283, i_brand#1279, s_store_name#57, s_company_name#69, rn#31850], [i_category#33016, i_brand#33012, s_store_name#33082, s_company_name#33094, (rn#33110 - 1)], Inner
         :- Project [i_category#1283, i_brand#1279, s_store_name#57, s_company_name#69, d_year#30, sum_sales#31848, avg_monthly_sales#31849, rn#31850, sum_sales#31873]
         :  +- SortMergeJoin [i_category#1283, i_brand#1279, s_store_name#57, s_company_name#69, rn#31850], [i_category#32909, i_brand#32905, s_store_name#32975, s_company_name#32987, (rn#33003 + 1)], Inner
         :     :- Sort [i_category#1283 ASC NULLS FIRST, i_brand#1279 ASC NULLS FIRST, s_store_name#57 ASC NULLS FIRST, s_company_name#69 ASC NULLS FIRST, rn#31850 ASC NULLS FIRST], false, 0
         :     :  +- Exchange hashpartitioning(i_category#1283, i_brand#1279, s_store_name#57, s_company_name#69, rn#31850, 200), ENSURE_REQUIREMENTS, [plan_id=97788]
         :     :     +- Project [i_category#1283, i_brand#1279, s_store_name#57, s_company_name#69, d_year#30, sum_sales#31848, avg_monthly_sales#31849, rn#31850]
         :     :        +- Filter ((isnotnull(avg_monthly_sales#31849) AND (avg_monthly_sales#31849 > 0.0)) AND CASE WHEN (avg_monthly_sales#31849 > 0.0) THEN ((abs((sum_sales#31848 - avg_monthly_sales#31849)) / avg_monthly_sales#31849) > 0.1) END)
         :     :           +- Window [avg(_w0#31866) windowspecdefinition(i_category#1283, i_brand#1279, s_store_name#57, s_company_name#69, d_year#30, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#31849], [i_category#1283, i_brand#1279, s_store_name#57, s_company_name#69, d_year#30]
         :     :              +- Project [i_category#1283, i_brand#1279, s_store_name#57, s_company_name#69, d_year#30, sum_sales#31848, _w0#31866, rn#31850]
         :     :                 +- Filter (isnotnull(d_year#30) AND (d_year#30 = 2001))
         :     :                    +- Window [rank(d_year#30, d_moy#32) windowspecdefinition(i_category#1283, i_brand#1279, s_store_name#57, s_company_name#69, d_year#30 ASC NULLS FIRST, d_moy#32 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#31850], [i_category#1283, i_brand#1279, s_store_name#57, s_company_name#69], [d_year#30 ASC NULLS FIRST, d_moy#32 ASC NULLS FIRST]
         :     :                       +- Sort [i_category#1283 ASC NULLS FIRST, i_brand#1279 ASC NULLS FIRST, s_store_name#57 ASC NULLS FIRST, s_company_name#69 ASC NULLS FIRST, d_year#30 ASC NULLS FIRST, d_moy#32 ASC NULLS FIRST], false, 0
         :     :                          +- Exchange hashpartitioning(i_category#1283, i_brand#1279, s_store_name#57, s_company_name#69, 200), ENSURE_REQUIREMENTS, [plan_id=97758]
         :     :                             +- HashAggregate(keys=[i_category#1283, i_brand#1279, s_store_name#57, s_company_name#69, d_year#30, d_moy#32], functions=[sum(ss_sales_price#1261)], output=[i_category#1283, i_brand#1279, s_store_name#57, s_company_name#69, d_year#30, d_moy#32, sum_sales#31848, _w0#31866])
         :     :                                +- Exchange hashpartitioning(i_category#1283, i_brand#1279, s_store_name#57, s_company_name#69, d_year#30, d_moy#32, 200), ENSURE_REQUIREMENTS, [plan_id=97755]
         :     :                                   +- HashAggregate(keys=[i_category#1283, i_brand#1279, s_store_name#57, s_company_name#69, d_year#30, d_moy#32], functions=[partial_sum(ss_sales_price#1261)], output=[i_category#1283, i_brand#1279, s_store_name#57, s_company_name#69, d_year#30, d_moy#32, sum#32766])
         :     :                                      +- Project [i_brand#1279, i_category#1283, ss_sales_price#1261, d_year#30, d_moy#32, s_store_name#57, s_company_name#69]
         :     :                                         +- BroadcastHashJoin [ss_store_sk#1255], [s_store_sk#52], Inner, BuildRight, false
         :     :                                            :- Project [i_brand#1279, i_category#1283, ss_store_sk#1255, ss_sales_price#1261, d_year#30, d_moy#32]
         :     :                                            :  +- BroadcastHashJoin [ss_sold_date_sk#1248], [d_date_sk#24], Inner, BuildRight, false
         :     :                                            :     :- Project [i_brand#1279, i_category#1283, ss_sold_date_sk#1248, ss_store_sk#1255, ss_sales_price#1261]
         :     :                                            :     :  +- BroadcastHashJoin [i_item_sk#1271], [ss_item_sk#1250], Inner, BuildLeft, false
         :     :                                            :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=97742]
         :     :                                            :     :     :  +- Filter ((isnotnull(i_item_sk#1271) AND isnotnull(i_category#1283)) AND isnotnull(i_brand#1279))
         :     :                                            :     :     :     +- FileScan parquet spark_catalog.m.item[i_item_sk#1271,i_brand#1279,i_category#1283] Batched: true, DataFilters: [isnotnull(i_item_sk#1271), isnotnull(i_category#1283), isnotnull(i_brand#1279)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
         :     :                                            :     :     +- Filter ((isnotnull(ss_item_sk#1250) AND isnotnull(ss_sold_date_sk#1248)) AND isnotnull(ss_store_sk#1255))
         :     :                                            :     :        +- FileScan parquet spark_catalog.m.store_sales[ss_sold_date_sk#1248,ss_item_sk#1250,ss_store_sk#1255,ss_sales_price#1261] Batched: true, DataFilters: [isnotnull(ss_item_sk#1250), isnotnull(ss_sold_date_sk#1248), isnotnull(ss_store_sk#1255)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_sales_price:double>
         :     :                                            :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=97746]
         :     :                                            :        +- Filter ((((d_year#30 = 2001) OR ((d_year#30 = 2000) AND (d_moy#32 = 12))) OR ((d_year#30 = 2002) AND (d_moy#32 = 1))) AND isnotnull(d_date_sk#24))
         :     :                                            :           +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [(((d_year#30 = 2001) OR ((d_year#30 = 2000) AND (d_moy#32 = 12))) OR ((d_year#30 = 2002) AND (d_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,2001),And(EqualTo(d_year,2000),EqualTo(d_moy,12))),And(EqualTo(d_year,2002)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
         :     :                                            +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=97750]
         :     :                                               +- Filter ((isnotnull(s_store_sk#52) AND isnotnull(s_store_name#57)) AND isnotnull(s_company_name#69))
         :     :                                                  +- FileScan parquet spark_catalog.m.store[s_store_sk#52,s_store_name#57,s_company_name#69] Batched: true, DataFilters: [isnotnull(s_store_sk#52), isnotnull(s_store_name#57), isnotnull(s_company_name#69)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_name), IsNotNull(s_company_name)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>
         :     +- Sort [i_category#32909 ASC NULLS FIRST, i_brand#32905 ASC NULLS FIRST, s_store_name#32975 ASC NULLS FIRST, s_company_name#32987 ASC NULLS FIRST, (rn#33003 + 1) ASC NULLS FIRST], false, 0
         :        +- Exchange hashpartitioning(i_category#32909, i_brand#32905, s_store_name#32975, s_company_name#32987, (rn#33003 + 1), 200), ENSURE_REQUIREMENTS, [plan_id=97789]
         :           +- Project [i_category#32909, i_brand#32905, s_store_name#32975, s_company_name#32987, sum_sales#31848 AS sum_sales#31873, rn#33003]
         :              +- Window [rank(d_year#32948, d_moy#32950) windowspecdefinition(i_category#32909, i_brand#32905, s_store_name#32975, s_company_name#32987, d_year#32948 ASC NULLS FIRST, d_moy#32950 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#33003], [i_category#32909, i_brand#32905, s_store_name#32975, s_company_name#32987], [d_year#32948 ASC NULLS FIRST, d_moy#32950 ASC NULLS FIRST]
         :                 +- Sort [i_category#32909 ASC NULLS FIRST, i_brand#32905 ASC NULLS FIRST, s_store_name#32975 ASC NULLS FIRST, s_company_name#32987 ASC NULLS FIRST, d_year#32948 ASC NULLS FIRST, d_moy#32950 ASC NULLS FIRST], false, 0
         :                    +- Exchange hashpartitioning(i_category#32909, i_brand#32905, s_store_name#32975, s_company_name#32987, 200), ENSURE_REQUIREMENTS, [plan_id=97782]
         :                       +- HashAggregate(keys=[i_category#32909, i_brand#32905, s_store_name#32975, s_company_name#32987, d_year#32948, d_moy#32950], functions=[sum(ss_sales_price#32932)], output=[i_category#32909, i_brand#32905, s_store_name#32975, s_company_name#32987, d_year#32948, d_moy#32950, sum_sales#31848])
         :                          +- Exchange hashpartitioning(i_category#32909, i_brand#32905, s_store_name#32975, s_company_name#32987, d_year#32948, d_moy#32950, 200), ENSURE_REQUIREMENTS, [plan_id=97779]
         :                             +- HashAggregate(keys=[i_category#32909, i_brand#32905, s_store_name#32975, s_company_name#32987, d_year#32948, d_moy#32950], functions=[partial_sum(ss_sales_price#32932)], output=[i_category#32909, i_brand#32905, s_store_name#32975, s_company_name#32987, d_year#32948, d_moy#32950, sum#33112])
         :                                +- Project [i_brand#32905, i_category#32909, ss_sales_price#32932, d_year#32948, d_moy#32950, s_store_name#32975, s_company_name#32987]
         :                                   +- BroadcastHashJoin [ss_store_sk#32926], [s_store_sk#32970], Inner, BuildRight, false
         :                                      :- Project [i_brand#32905, i_category#32909, ss_store_sk#32926, ss_sales_price#32932, d_year#32948, d_moy#32950]
         :                                      :  +- BroadcastHashJoin [ss_sold_date_sk#32919], [d_date_sk#32942], Inner, BuildRight, false
         :                                      :     :- Project [i_brand#32905, i_category#32909, ss_sold_date_sk#32919, ss_store_sk#32926, ss_sales_price#32932]
         :                                      :     :  +- BroadcastHashJoin [i_item_sk#32897], [ss_item_sk#32921], Inner, BuildLeft, false
         :                                      :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=97766]
         :                                      :     :     :  +- Filter ((isnotnull(i_item_sk#32897) AND isnotnull(i_category#32909)) AND isnotnull(i_brand#32905))
         :                                      :     :     :     +- FileScan parquet spark_catalog.m.item[i_item_sk#32897,i_brand#32905,i_category#32909] Batched: true, DataFilters: [isnotnull(i_item_sk#32897), isnotnull(i_category#32909), isnotnull(i_brand#32905)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
         :                                      :     :     +- Filter ((isnotnull(ss_item_sk#32921) AND isnotnull(ss_sold_date_sk#32919)) AND isnotnull(ss_store_sk#32926))
         :                                      :     :        +- FileScan parquet spark_catalog.m.store_sales[ss_sold_date_sk#32919,ss_item_sk#32921,ss_store_sk#32926,ss_sales_price#32932] Batched: true, DataFilters: [isnotnull(ss_item_sk#32921), isnotnull(ss_sold_date_sk#32919), isnotnull(ss_store_sk#32926)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_sales_price:double>
         :                                      :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=97770]
         :                                      :        +- Filter ((((d_year#32948 = 2001) OR ((d_year#32948 = 2000) AND (d_moy#32950 = 12))) OR ((d_year#32948 = 2002) AND (d_moy#32950 = 1))) AND isnotnull(d_date_sk#32942))
         :                                      :           +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#32942,d_year#32948,d_moy#32950] Batched: true, DataFilters: [(((d_year#32948 = 2001) OR ((d_year#32948 = 2000) AND (d_moy#32950 = 12))) OR ((d_year#32948 = 2..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,2001),And(EqualTo(d_year,2000),EqualTo(d_moy,12))),And(EqualTo(d_year,2002)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
         :                                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=97774]
         :                                         +- Filter ((isnotnull(s_store_sk#32970) AND isnotnull(s_store_name#32975)) AND isnotnull(s_company_name#32987))
         :                                            +- FileScan parquet spark_catalog.m.store[s_store_sk#32970,s_store_name#32975,s_company_name#32987] Batched: true, DataFilters: [isnotnull(s_store_sk#32970), isnotnull(s_store_name#32975), isnotnull(s_company_name#32987)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_name), IsNotNull(s_company_name)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>
         +- Sort [i_category#33016 ASC NULLS FIRST, i_brand#33012 ASC NULLS FIRST, s_store_name#33082 ASC NULLS FIRST, s_company_name#33094 ASC NULLS FIRST, (rn#33110 - 1) ASC NULLS FIRST], false, 0
            +- Exchange hashpartitioning(i_category#33016, i_brand#33012, s_store_name#33082, s_company_name#33094, (rn#33110 - 1), 200), ENSURE_REQUIREMENTS, [plan_id=97816]
               +- Project [i_category#33016, i_brand#33012, s_store_name#33082, s_company_name#33094, sum_sales#31848 AS sum_sales#31882, rn#33110]
                  +- Window [rank(d_year#33055, d_moy#33057) windowspecdefinition(i_category#33016, i_brand#33012, s_store_name#33082, s_company_name#33094, d_year#33055 ASC NULLS FIRST, d_moy#33057 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#33110], [i_category#33016, i_brand#33012, s_store_name#33082, s_company_name#33094], [d_year#33055 ASC NULLS FIRST, d_moy#33057 ASC NULLS FIRST]
                     +- Sort [i_category#33016 ASC NULLS FIRST, i_brand#33012 ASC NULLS FIRST, s_store_name#33082 ASC NULLS FIRST, s_company_name#33094 ASC NULLS FIRST, d_year#33055 ASC NULLS FIRST, d_moy#33057 ASC NULLS FIRST], false, 0
                        +- Exchange hashpartitioning(i_category#33016, i_brand#33012, s_store_name#33082, s_company_name#33094, 200), ENSURE_REQUIREMENTS, [plan_id=97810]
                           +- HashAggregate(keys=[i_category#33016, i_brand#33012, s_store_name#33082, s_company_name#33094, d_year#33055, d_moy#33057], functions=[sum(ss_sales_price#33039)], output=[i_category#33016, i_brand#33012, s_store_name#33082, s_company_name#33094, d_year#33055, d_moy#33057, sum_sales#31848])
                              +- Exchange hashpartitioning(i_category#33016, i_brand#33012, s_store_name#33082, s_company_name#33094, d_year#33055, d_moy#33057, 200), ENSURE_REQUIREMENTS, [plan_id=97807]
                                 +- HashAggregate(keys=[i_category#33016, i_brand#33012, s_store_name#33082, s_company_name#33094, d_year#33055, d_moy#33057], functions=[partial_sum(ss_sales_price#33039)], output=[i_category#33016, i_brand#33012, s_store_name#33082, s_company_name#33094, d_year#33055, d_moy#33057, sum#33114])
                                    +- Project [i_brand#33012, i_category#33016, ss_sales_price#33039, d_year#33055, d_moy#33057, s_store_name#33082, s_company_name#33094]
                                       +- BroadcastHashJoin [ss_store_sk#33033], [s_store_sk#33077], Inner, BuildRight, false
                                          :- Project [i_brand#33012, i_category#33016, ss_store_sk#33033, ss_sales_price#33039, d_year#33055, d_moy#33057]
                                          :  +- BroadcastHashJoin [ss_sold_date_sk#33026], [d_date_sk#33049], Inner, BuildRight, false
                                          :     :- Project [i_brand#33012, i_category#33016, ss_sold_date_sk#33026, ss_store_sk#33033, ss_sales_price#33039]
                                          :     :  +- BroadcastHashJoin [i_item_sk#33004], [ss_item_sk#33028], Inner, BuildLeft, false
                                          :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=97794]
                                          :     :     :  +- Filter ((isnotnull(i_item_sk#33004) AND isnotnull(i_category#33016)) AND isnotnull(i_brand#33012))
                                          :     :     :     +- FileScan parquet spark_catalog.m.item[i_item_sk#33004,i_brand#33012,i_category#33016] Batched: true, DataFilters: [isnotnull(i_item_sk#33004), isnotnull(i_category#33016), isnotnull(i_brand#33012)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
                                          :     :     +- Filter ((isnotnull(ss_item_sk#33028) AND isnotnull(ss_sold_date_sk#33026)) AND isnotnull(ss_store_sk#33033))
                                          :     :        +- FileScan parquet spark_catalog.m.store_sales[ss_sold_date_sk#33026,ss_item_sk#33028,ss_store_sk#33033,ss_sales_price#33039] Batched: true, DataFilters: [isnotnull(ss_item_sk#33028), isnotnull(ss_sold_date_sk#33026), isnotnull(ss_store_sk#33033)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_sales_price:double>
                                          :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=97798]
                                          :        +- Filter ((((d_year#33055 = 2001) OR ((d_year#33055 = 2000) AND (d_moy#33057 = 12))) OR ((d_year#33055 = 2002) AND (d_moy#33057 = 1))) AND isnotnull(d_date_sk#33049))
                                          :           +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#33049,d_year#33055,d_moy#33057] Batched: true, DataFilters: [(((d_year#33055 = 2001) OR ((d_year#33055 = 2000) AND (d_moy#33057 = 12))) OR ((d_year#33055 = 2..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,2001),And(EqualTo(d_year,2000),EqualTo(d_moy,12))),And(EqualTo(d_year,2002)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=97802]
                                             +- Filter ((isnotnull(s_store_sk#33077) AND isnotnull(s_store_name#33082)) AND isnotnull(s_company_name#33094))
                                                +- FileScan parquet spark_catalog.m.store[s_store_sk#33077,s_store_name#33082,s_company_name#33094] Batched: true, DataFilters: [isnotnull(s_store_sk#33077), isnotnull(s_store_name#33082), isnotnull(s_company_name#33094)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_name), IsNotNull(s_company_name)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>
