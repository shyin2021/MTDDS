AdaptiveSparkPlan isFinalPlan=false
+- Sort [Returns_Loss#48585 DESC NULLS LAST], true, 0
   +- Exchange rangepartitioning(Returns_Loss#48585 DESC NULLS LAST, 200), ENSURE_REQUIREMENTS, [plan_id=173898]
      +- HashAggregate(keys=[cc_call_center_id#20248, cc_name#20253, cc_manager#20258, cd_marital_status#8268, cd_education_status#8269], functions=[sum(cr_net_loss#7837)], output=[Call_Center#48582, Call_Center_Name#48583, Manager#48584, Returns_Loss#48585])
         +- Exchange hashpartitioning(cc_call_center_id#20248, cc_name#20253, cc_manager#20258, cd_marital_status#8268, cd_education_status#8269, 200), ENSURE_REQUIREMENTS, [plan_id=173895]
            +- HashAggregate(keys=[cc_call_center_id#20248, cc_name#20253, cc_manager#20258, cd_marital_status#8268, cd_education_status#8269], functions=[partial_sum(cr_net_loss#7837)], output=[cc_call_center_id#20248, cc_name#20253, cc_manager#20258, cd_marital_status#8268, cd_education_status#8269, sum#48605])
               +- Project [cc_call_center_id#20248, cc_name#20253, cc_manager#20258, cr_net_loss#7837, cd_marital_status#8268, cd_education_status#8269]
                  +- BroadcastHashJoin [c_current_hdemo_sk#84], [hd_demo_sk#12110], Inner, BuildRight, false
                     :- Project [cc_call_center_id#20248, cc_name#20253, cc_manager#20258, cr_net_loss#7837, c_current_hdemo_sk#84, cd_marital_status#8268, cd_education_status#8269]
                     :  +- BroadcastHashJoin [c_current_cdemo_sk#83], [cd_demo_sk#8266], Inner, BuildRight, false
                     :     :- Project [cc_call_center_id#20248, cc_name#20253, cc_manager#20258, cr_net_loss#7837, c_current_cdemo_sk#83, c_current_hdemo_sk#84]
                     :     :  +- BroadcastHashJoin [c_current_addr_sk#85], [ca_address_sk#8171], Inner, BuildRight, false
                     :     :     :- Project [cc_call_center_id#20248, cc_name#20253, cc_manager#20258, cr_net_loss#7837, c_current_cdemo_sk#83, c_current_hdemo_sk#84, c_current_addr_sk#85]
                     :     :     :  +- BroadcastHashJoin [cr_returning_customer_sk#7818], [c_customer_sk#81], Inner, BuildRight, false
                     :     :     :     :- Project [cc_call_center_id#20248, cc_name#20253, cc_manager#20258, cr_returning_customer_sk#7818, cr_net_loss#7837]
                     :     :     :     :  +- BroadcastHashJoin [cr_returned_date_sk#7811], [d_date_sk#24], Inner, BuildRight, false
                     :     :     :     :     :- Project [cc_call_center_id#20248, cc_name#20253, cc_manager#20258, cr_returned_date_sk#7811, cr_returning_customer_sk#7818, cr_net_loss#7837]
                     :     :     :     :     :  +- BroadcastHashJoin [cc_call_center_sk#20247], [cr_call_center_sk#7822], Inner, BuildLeft, false
                     :     :     :     :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=173870]
                     :     :     :     :     :     :  +- Filter isnotnull(cc_call_center_sk#20247)
                     :     :     :     :     :     :     +- FileScan parquet spark_catalog.m.call_center[cc_call_center_sk#20247,cc_call_center_id#20248,cc_name#20253,cc_manager#20258] Batched: true, DataFilters: [isnotnull(cc_call_center_sk#20247)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/call_center], PartitionFilters: [], PushedFilters: [IsNotNull(cc_call_center_sk)], ReadSchema: struct<cc_call_center_sk:int,cc_call_center_id:string,cc_name:string,cc_manager:string>
                     :     :     :     :     :     +- Filter ((isnotnull(cr_call_center_sk#7822) AND isnotnull(cr_returned_date_sk#7811)) AND isnotnull(cr_returning_customer_sk#7818))
                     :     :     :     :     :        +- FileScan parquet spark_catalog.m.catalog_returns[cr_returned_date_sk#7811,cr_returning_customer_sk#7818,cr_call_center_sk#7822,cr_net_loss#7837] Batched: true, DataFilters: [isnotnull(cr_call_center_sk#7822), isnotnull(cr_returned_date_sk#7811), isnotnull(cr_returning_c..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/catalog_returns], PartitionFilters: [], PushedFilters: [IsNotNull(cr_call_center_sk), IsNotNull(cr_returned_date_sk), IsNotNull(cr_returning_customer_sk)], ReadSchema: struct<cr_returned_date_sk:int,cr_returning_customer_sk:int,cr_call_center_sk:int,cr_net_loss:dou...
                     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=173874]
                     :     :     :     :        +- Project [d_date_sk#24]
                     :     :     :     :           +- Filter ((((isnotnull(d_year#30) AND isnotnull(d_moy#32)) AND (d_year#30 = 2000)) AND (d_moy#32 = 12)) AND isnotnull(d_date_sk#24))
                     :     :     :     :              +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [isnotnull(d_year#30), isnotnull(d_moy#32), (d_year#30 = 2000), (d_moy#32 = 12), isnotnull(d_date..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,12), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=173878]
                     :     :     :        +- Filter (((isnotnull(c_customer_sk#81) AND isnotnull(c_current_addr_sk#85)) AND isnotnull(c_current_cdemo_sk#83)) AND isnotnull(c_current_hdemo_sk#84))
                     :     :     :           +- FileScan parquet spark_catalog.m.customer[c_customer_sk#81,c_current_cdemo_sk#83,c_current_hdemo_sk#84,c_current_addr_sk#85] Batched: true, DataFilters: [isnotnull(c_customer_sk#81), isnotnull(c_current_addr_sk#85), isnotnull(c_current_cdemo_sk#83), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk), IsNotNull..., ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_hdemo_sk:int,c_current_addr_sk:int>
                     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=173882]
                     :     :        +- Project [ca_address_sk#8171]
                     :     :           +- Filter ((isnotnull(ca_gmt_offset#8182) AND (ca_gmt_offset#8182 = -7.0)) AND isnotnull(ca_address_sk#8171))
                     :     :              +- FileScan parquet spark_catalog.m.customer_address[ca_address_sk#8171,ca_gmt_offset#8182] Batched: true, DataFilters: [isnotnull(ca_gmt_offset#8182), (ca_gmt_offset#8182 = -7.0), isnotnull(ca_address_sk#8171)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-7.0), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:double>
                     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=173886]
                     :        +- Filter ((((cd_marital_status#8268 = M) AND (cd_education_status#8269 = Unknown)) OR ((cd_marital_status#8268 = W) AND (cd_education_status#8269 = Advanced Degree))) AND isnotnull(cd_demo_sk#8266))
                     :           +- FileScan parquet spark_catalog.m.customer_demographics[cd_demo_sk#8266,cd_marital_status#8268,cd_education_status#8269] Batched: true, DataFilters: [(((cd_marital_status#8268 = M) AND (cd_education_status#8269 = Unknown)) OR ((cd_marital_status#..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer_demograph..., PartitionFilters: [], PushedFilters: [Or(And(EqualTo(cd_marital_status,M),EqualTo(cd_education_status,Unknown)),And(EqualTo(cd_marital..., ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>
                     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=173890]
                        +- Project [hd_demo_sk#12110]
                           +- Filter ((isnotnull(hd_buy_potential#12112) AND StartsWith(hd_buy_potential#12112, 5001-10000)) AND isnotnull(hd_demo_sk#12110))
                              +- FileScan parquet spark_catalog.m.household_demographics[hd_demo_sk#12110,hd_buy_potential#12112] Batched: true, DataFilters: [isnotnull(hd_buy_potential#12112), StartsWith(hd_buy_potential#12112, 5001-10000), isnotnull(hd_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/household_demograp..., PartitionFilters: [], PushedFilters: [IsNotNull(hd_buy_potential), StringStartsWith(hd_buy_potential,5001-10000), IsNotNull(hd_demo_sk)], ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string>
