AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[(sum_sales#34336 - avg_monthly_sales#34337) ASC NULLS FIRST,avg_monthly_sales#34337 ASC NULLS FIRST], output=[i_category#1283,d_year#30,d_moy#32,avg_monthly_sales#34337,sum_sales#34336,psum#34339,nsum#34340])
   +- Project [i_category#1283, d_year#30, d_moy#32, avg_monthly_sales#34337, sum_sales#34336, sum_sales#34360 AS psum#34339, sum_sales#34368 AS nsum#34340]
      +- SortMergeJoin [i_category#1283, i_brand#1279, cc_name#20253, rn#34338], [i_category#35616, i_brand#35612, cc_name#35694, (rn#35723 - 1)], Inner
         :- Project [i_category#1283, i_brand#1279, cc_name#20253, d_year#30, d_moy#32, sum_sales#34336, avg_monthly_sales#34337, rn#34338, sum_sales#34360]
         :  +- SortMergeJoin [i_category#1283, i_brand#1279, cc_name#20253, rn#34338], [i_category#35496, i_brand#35492, cc_name#35574, (rn#35603 + 1)], Inner
         :     :- Sort [i_category#1283 ASC NULLS FIRST, i_brand#1279 ASC NULLS FIRST, cc_name#20253 ASC NULLS FIRST, rn#34338 ASC NULLS FIRST], false, 0
         :     :  +- Exchange hashpartitioning(i_category#1283, i_brand#1279, cc_name#20253, rn#34338, 200), ENSURE_REQUIREMENTS, [plan_id=110772]
         :     :     +- Project [i_category#1283, i_brand#1279, cc_name#20253, d_year#30, d_moy#32, sum_sales#34336, avg_monthly_sales#34337, rn#34338]
         :     :        +- Filter ((isnotnull(avg_monthly_sales#34337) AND (avg_monthly_sales#34337 > 0.0)) AND CASE WHEN (avg_monthly_sales#34337 > 0.0) THEN ((abs((sum_sales#34336 - avg_monthly_sales#34337)) / avg_monthly_sales#34337) > 0.1) END)
         :     :           +- Window [avg(_w0#34354) windowspecdefinition(i_category#1283, i_brand#1279, cc_name#20253, d_year#30, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#34337], [i_category#1283, i_brand#1279, cc_name#20253, d_year#30]
         :     :              +- Filter (isnotnull(d_year#30) AND (d_year#30 = 2000))
         :     :                 +- Window [rank(d_year#30, d_moy#32) windowspecdefinition(i_category#1283, i_brand#1279, cc_name#20253, d_year#30 ASC NULLS FIRST, d_moy#32 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#34338], [i_category#1283, i_brand#1279, cc_name#20253], [d_year#30 ASC NULLS FIRST, d_moy#32 ASC NULLS FIRST]
         :     :                    +- Sort [i_category#1283 ASC NULLS FIRST, i_brand#1279 ASC NULLS FIRST, cc_name#20253 ASC NULLS FIRST, d_year#30 ASC NULLS FIRST, d_moy#32 ASC NULLS FIRST], false, 0
         :     :                       +- Exchange hashpartitioning(i_category#1283, i_brand#1279, cc_name#20253, 200), ENSURE_REQUIREMENTS, [plan_id=110743]
         :     :                          +- HashAggregate(keys=[i_category#1283, i_brand#1279, cc_name#20253, d_year#30, d_moy#32], functions=[sum(cs_sales_price#482)], output=[i_category#1283, i_brand#1279, cc_name#20253, d_year#30, d_moy#32, sum_sales#34336, _w0#34354])
         :     :                             +- Exchange hashpartitioning(i_category#1283, i_brand#1279, cc_name#20253, d_year#30, d_moy#32, 200), ENSURE_REQUIREMENTS, [plan_id=110740]
         :     :                                +- HashAggregate(keys=[i_category#1283, i_brand#1279, cc_name#20253, d_year#30, d_moy#32], functions=[partial_sum(cs_sales_price#482)], output=[i_category#1283, i_brand#1279, cc_name#20253, d_year#30, d_moy#32, sum#35360])
         :     :                                   +- Project [i_brand#1279, i_category#1283, cs_sales_price#482, d_year#30, d_moy#32, cc_name#20253]
         :     :                                      +- BroadcastHashJoin [cs_call_center_sk#472], [cc_call_center_sk#20247], Inner, BuildRight, false
         :     :                                         :- Project [i_brand#1279, i_category#1283, cs_call_center_sk#472, cs_sales_price#482, d_year#30, d_moy#32]
         :     :                                         :  +- BroadcastHashJoin [cs_sold_date_sk#461], [d_date_sk#24], Inner, BuildRight, false
         :     :                                         :     :- Project [i_brand#1279, i_category#1283, cs_sold_date_sk#461, cs_call_center_sk#472, cs_sales_price#482]
         :     :                                         :     :  +- BroadcastHashJoin [i_item_sk#1271], [cs_item_sk#476], Inner, BuildLeft, false
         :     :                                         :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=110727]
         :     :                                         :     :     :  +- Filter ((isnotnull(i_item_sk#1271) AND isnotnull(i_category#1283)) AND isnotnull(i_brand#1279))
         :     :                                         :     :     :     +- FileScan parquet spark_catalog.m.item[i_item_sk#1271,i_brand#1279,i_category#1283] Batched: true, DataFilters: [isnotnull(i_item_sk#1271), isnotnull(i_category#1283), isnotnull(i_brand#1279)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
         :     :                                         :     :     +- Filter ((isnotnull(cs_item_sk#476) AND isnotnull(cs_sold_date_sk#461)) AND isnotnull(cs_call_center_sk#472))
         :     :                                         :     :        +- FileScan parquet spark_catalog.m.catalog_sales[cs_sold_date_sk#461,cs_call_center_sk#472,cs_item_sk#476,cs_sales_price#482] Batched: true, DataFilters: [isnotnull(cs_item_sk#476), isnotnull(cs_sold_date_sk#461), isnotnull(cs_call_center_sk#472)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs_call_center_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_call_center_sk:int,cs_item_sk:int,cs_sales_price:double>
         :     :                                         :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=110731]
         :     :                                         :        +- Filter ((((d_year#30 = 2000) OR ((d_year#30 = 1999) AND (d_moy#32 = 12))) OR ((d_year#30 = 2001) AND (d_moy#32 = 1))) AND isnotnull(d_date_sk#24))
         :     :                                         :           +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [(((d_year#30 = 2000) OR ((d_year#30 = 1999) AND (d_moy#32 = 12))) OR ((d_year#30 = 2001) AND (d_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,2000),And(EqualTo(d_year,1999),EqualTo(d_moy,12))),And(EqualTo(d_year,2001)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
         :     :                                         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=110735]
         :     :                                            +- Filter (isnotnull(cc_call_center_sk#20247) AND isnotnull(cc_name#20253))
         :     :                                               +- FileScan parquet spark_catalog.m.call_center[cc_call_center_sk#20247,cc_name#20253] Batched: true, DataFilters: [isnotnull(cc_call_center_sk#20247), isnotnull(cc_name#20253)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/call_center], PartitionFilters: [], PushedFilters: [IsNotNull(cc_call_center_sk), IsNotNull(cc_name)], ReadSchema: struct<cc_call_center_sk:int,cc_name:string>
         :     +- Sort [i_category#35496 ASC NULLS FIRST, i_brand#35492 ASC NULLS FIRST, cc_name#35574 ASC NULLS FIRST, (rn#35603 + 1) ASC NULLS FIRST], false, 0
         :        +- Exchange hashpartitioning(i_category#35496, i_brand#35492, cc_name#35574, (rn#35603 + 1), 200), ENSURE_REQUIREMENTS, [plan_id=110773]
         :           +- Project [i_category#35496, i_brand#35492, cc_name#35574, sum_sales#34336 AS sum_sales#34360, rn#35603]
         :              +- Window [rank(d_year#35546, d_moy#35548) windowspecdefinition(i_category#35496, i_brand#35492, cc_name#35574, d_year#35546 ASC NULLS FIRST, d_moy#35548 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#35603], [i_category#35496, i_brand#35492, cc_name#35574], [d_year#35546 ASC NULLS FIRST, d_moy#35548 ASC NULLS FIRST]
         :                 +- Sort [i_category#35496 ASC NULLS FIRST, i_brand#35492 ASC NULLS FIRST, cc_name#35574 ASC NULLS FIRST, d_year#35546 ASC NULLS FIRST, d_moy#35548 ASC NULLS FIRST], false, 0
         :                    +- Exchange hashpartitioning(i_category#35496, i_brand#35492, cc_name#35574, 200), ENSURE_REQUIREMENTS, [plan_id=110766]
         :                       +- HashAggregate(keys=[i_category#35496, i_brand#35492, cc_name#35574, d_year#35546, d_moy#35548], functions=[sum(cs_sales_price#35527)], output=[i_category#35496, i_brand#35492, cc_name#35574, d_year#35546, d_moy#35548, sum_sales#34336])
         :                          +- Exchange hashpartitioning(i_category#35496, i_brand#35492, cc_name#35574, d_year#35546, d_moy#35548, 200), ENSURE_REQUIREMENTS, [plan_id=110763]
         :                             +- HashAggregate(keys=[i_category#35496, i_brand#35492, cc_name#35574, d_year#35546, d_moy#35548], functions=[partial_sum(cs_sales_price#35527)], output=[i_category#35496, i_brand#35492, cc_name#35574, d_year#35546, d_moy#35548, sum#35725])
         :                                +- Project [i_brand#35492, i_category#35496, cs_sales_price#35527, d_year#35546, d_moy#35548, cc_name#35574]
         :                                   +- BroadcastHashJoin [cs_call_center_sk#35517], [cc_call_center_sk#35568], Inner, BuildRight, false
         :                                      :- Project [i_brand#35492, i_category#35496, cs_call_center_sk#35517, cs_sales_price#35527, d_year#35546, d_moy#35548]
         :                                      :  +- BroadcastHashJoin [cs_sold_date_sk#35506], [d_date_sk#35540], Inner, BuildRight, false
         :                                      :     :- Project [i_brand#35492, i_category#35496, cs_sold_date_sk#35506, cs_call_center_sk#35517, cs_sales_price#35527]
         :                                      :     :  +- BroadcastHashJoin [i_item_sk#35484], [cs_item_sk#35521], Inner, BuildLeft, false
         :                                      :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=110750]
         :                                      :     :     :  +- Filter ((isnotnull(i_item_sk#35484) AND isnotnull(i_category#35496)) AND isnotnull(i_brand#35492))
         :                                      :     :     :     +- FileScan parquet spark_catalog.m.item[i_item_sk#35484,i_brand#35492,i_category#35496] Batched: true, DataFilters: [isnotnull(i_item_sk#35484), isnotnull(i_category#35496), isnotnull(i_brand#35492)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
         :                                      :     :     +- Filter ((isnotnull(cs_item_sk#35521) AND isnotnull(cs_sold_date_sk#35506)) AND isnotnull(cs_call_center_sk#35517))
         :                                      :     :        +- FileScan parquet spark_catalog.m.catalog_sales[cs_sold_date_sk#35506,cs_call_center_sk#35517,cs_item_sk#35521,cs_sales_price#35527] Batched: true, DataFilters: [isnotnull(cs_item_sk#35521), isnotnull(cs_sold_date_sk#35506), isnotnull(cs_call_center_sk#35517)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs_call_center_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_call_center_sk:int,cs_item_sk:int,cs_sales_price:double>
         :                                      :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=110754]
         :                                      :        +- Filter ((((d_year#35546 = 2000) OR ((d_year#35546 = 1999) AND (d_moy#35548 = 12))) OR ((d_year#35546 = 2001) AND (d_moy#35548 = 1))) AND isnotnull(d_date_sk#35540))
         :                                      :           +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#35540,d_year#35546,d_moy#35548] Batched: true, DataFilters: [(((d_year#35546 = 2000) OR ((d_year#35546 = 1999) AND (d_moy#35548 = 12))) OR ((d_year#35546 = 2..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,2000),And(EqualTo(d_year,1999),EqualTo(d_moy,12))),And(EqualTo(d_year,2001)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
         :                                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=110758]
         :                                         +- Filter (isnotnull(cc_call_center_sk#35568) AND isnotnull(cc_name#35574))
         :                                            +- FileScan parquet spark_catalog.m.call_center[cc_call_center_sk#35568,cc_name#35574] Batched: true, DataFilters: [isnotnull(cc_call_center_sk#35568), isnotnull(cc_name#35574)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/call_center], PartitionFilters: [], PushedFilters: [IsNotNull(cc_call_center_sk), IsNotNull(cc_name)], ReadSchema: struct<cc_call_center_sk:int,cc_name:string>
         +- Sort [i_category#35616 ASC NULLS FIRST, i_brand#35612 ASC NULLS FIRST, cc_name#35694 ASC NULLS FIRST, (rn#35723 - 1) ASC NULLS FIRST], false, 0
            +- Exchange hashpartitioning(i_category#35616, i_brand#35612, cc_name#35694, (rn#35723 - 1), 200), ENSURE_REQUIREMENTS, [plan_id=110800]
               +- Project [i_category#35616, i_brand#35612, cc_name#35694, sum_sales#34336 AS sum_sales#34368, rn#35723]
                  +- Window [rank(d_year#35666, d_moy#35668) windowspecdefinition(i_category#35616, i_brand#35612, cc_name#35694, d_year#35666 ASC NULLS FIRST, d_moy#35668 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#35723], [i_category#35616, i_brand#35612, cc_name#35694], [d_year#35666 ASC NULLS FIRST, d_moy#35668 ASC NULLS FIRST]
                     +- Sort [i_category#35616 ASC NULLS FIRST, i_brand#35612 ASC NULLS FIRST, cc_name#35694 ASC NULLS FIRST, d_year#35666 ASC NULLS FIRST, d_moy#35668 ASC NULLS FIRST], false, 0
                        +- Exchange hashpartitioning(i_category#35616, i_brand#35612, cc_name#35694, 200), ENSURE_REQUIREMENTS, [plan_id=110794]
                           +- HashAggregate(keys=[i_category#35616, i_brand#35612, cc_name#35694, d_year#35666, d_moy#35668], functions=[sum(cs_sales_price#35647)], output=[i_category#35616, i_brand#35612, cc_name#35694, d_year#35666, d_moy#35668, sum_sales#34336])
                              +- Exchange hashpartitioning(i_category#35616, i_brand#35612, cc_name#35694, d_year#35666, d_moy#35668, 200), ENSURE_REQUIREMENTS, [plan_id=110791]
                                 +- HashAggregate(keys=[i_category#35616, i_brand#35612, cc_name#35694, d_year#35666, d_moy#35668], functions=[partial_sum(cs_sales_price#35647)], output=[i_category#35616, i_brand#35612, cc_name#35694, d_year#35666, d_moy#35668, sum#35727])
                                    +- Project [i_brand#35612, i_category#35616, cs_sales_price#35647, d_year#35666, d_moy#35668, cc_name#35694]
                                       +- BroadcastHashJoin [cs_call_center_sk#35637], [cc_call_center_sk#35688], Inner, BuildRight, false
                                          :- Project [i_brand#35612, i_category#35616, cs_call_center_sk#35637, cs_sales_price#35647, d_year#35666, d_moy#35668]
                                          :  +- BroadcastHashJoin [cs_sold_date_sk#35626], [d_date_sk#35660], Inner, BuildRight, false
                                          :     :- Project [i_brand#35612, i_category#35616, cs_sold_date_sk#35626, cs_call_center_sk#35637, cs_sales_price#35647]
                                          :     :  +- BroadcastHashJoin [i_item_sk#35604], [cs_item_sk#35641], Inner, BuildLeft, false
                                          :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=110778]
                                          :     :     :  +- Filter ((isnotnull(i_item_sk#35604) AND isnotnull(i_category#35616)) AND isnotnull(i_brand#35612))
                                          :     :     :     +- FileScan parquet spark_catalog.m.item[i_item_sk#35604,i_brand#35612,i_category#35616] Batched: true, DataFilters: [isnotnull(i_item_sk#35604), isnotnull(i_category#35616), isnotnull(i_brand#35612)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
                                          :     :     +- Filter ((isnotnull(cs_item_sk#35641) AND isnotnull(cs_sold_date_sk#35626)) AND isnotnull(cs_call_center_sk#35637))
                                          :     :        +- FileScan parquet spark_catalog.m.catalog_sales[cs_sold_date_sk#35626,cs_call_center_sk#35637,cs_item_sk#35641,cs_sales_price#35647] Batched: true, DataFilters: [isnotnull(cs_item_sk#35641), isnotnull(cs_sold_date_sk#35626), isnotnull(cs_call_center_sk#35637)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs_call_center_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_call_center_sk:int,cs_item_sk:int,cs_sales_price:double>
                                          :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=110782]
                                          :        +- Filter ((((d_year#35666 = 2000) OR ((d_year#35666 = 1999) AND (d_moy#35668 = 12))) OR ((d_year#35666 = 2001) AND (d_moy#35668 = 1))) AND isnotnull(d_date_sk#35660))
                                          :           +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#35660,d_year#35666,d_moy#35668] Batched: true, DataFilters: [(((d_year#35666 = 2000) OR ((d_year#35666 = 1999) AND (d_moy#35668 = 12))) OR ((d_year#35666 = 2..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,2000),And(EqualTo(d_year,1999),EqualTo(d_moy,12))),And(EqualTo(d_year,2001)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=110786]
                                             +- Filter (isnotnull(cc_call_center_sk#35688) AND isnotnull(cc_name#35694))
                                                +- FileScan parquet spark_catalog.m.call_center[cc_call_center_sk#35688,cc_name#35694] Batched: true, DataFilters: [isnotnull(cc_call_center_sk#35688), isnotnull(cc_name#35694)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/call_center], PartitionFilters: [], PushedFilters: [IsNotNull(cc_call_center_sk), IsNotNull(cc_name)], ReadSchema: struct<cc_call_center_sk:int,cc_name:string>
