== Parsed Logical Plan ==
'GlobalLimit 100
+- 'LocalLimit 100
   +- 'Sort ['lochierarchy DESC NULLS LAST, CASE WHEN (('grouping('i_category) + 'grouping('i_class)) = 0) THEN 'i_category END ASC NULLS FIRST, 'rank_within_parent ASC NULLS FIRST], true
      +- 'Aggregate [rollup(Vector(0), Vector(1), 'i_category, 'i_class)], ['sum('ws_net_paid) AS total_sum#47706, 'i_category, 'i_class, ('grouping('i_category) + 'grouping('i_class)) AS lochierarchy#47707, 'rank() windowspecdefinition(('grouping('i_category) + 'grouping('i_class)), CASE WHEN ('grouping('i_class) = 0) THEN 'i_category END, 'sum('ws_net_paid) DESC NULLS LAST, unspecifiedframe$()) AS rank_within_parent#47708]
         +- 'Filter (((('d1.d_month_seq >= 1210) AND ('d1.d_month_seq <= (1210 + 11))) AND ('d1.d_date_sk = 'ws_sold_date_sk)) AND ('i_item_sk = 'ws_item_sk))
            +- 'Join Inner
               :- 'Join Inner
               :  :- 'UnresolvedRelation [web_sales], [], false
               :  +- 'SubqueryAlias d1
               :     +- 'UnresolvedRelation [date_dim], [], false
               +- 'UnresolvedRelation [item], [], false

== Analyzed Logical Plan ==
total_sum: double, i_category: string, i_class: string, lochierarchy: tinyint, rank_within_parent: int
GlobalLimit 100
+- LocalLimit 100
   +- Project [total_sum#47706, i_category#47716, i_class#47717, lochierarchy#47707, rank_within_parent#47708]
      +- Sort [lochierarchy#47707 DESC NULLS LAST, CASE WHEN (cast((cast((shiftright(spark_grouping_id#47715L, 1) & 1) as tinyint) + cast((shiftright(spark_grouping_id#47715L, 0) & 1) as tinyint)) as int) = 0) THEN i_category#47716 END ASC NULLS FIRST, rank_within_parent#47708 ASC NULLS FIRST], true
         +- Project [total_sum#47706, i_category#47716, i_class#47717, lochierarchy#47707, rank_within_parent#47708, spark_grouping_id#47715L]
            +- Project [total_sum#47706, i_category#47716, i_class#47717, lochierarchy#47707, _w0#47726, _w1#47730, _w2#47731, rank_within_parent#47708, rank_within_parent#47708, spark_grouping_id#47715L]
               +- Window [rank(_w0#47726) windowspecdefinition(_w1#47730, _w2#47731, _w0#47726 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#47708], [_w1#47730, _w2#47731], [_w0#47726 DESC NULLS LAST]
                  +- Aggregate [i_category#47716, i_class#47717, spark_grouping_id#47715L], [sum(ws_net_paid#456) AS total_sum#47706, i_category#47716, i_class#47717, (cast((shiftright(spark_grouping_id#47715L, 1) & 1) as tinyint) + cast((shiftright(spark_grouping_id#47715L, 0) & 1) as tinyint)) AS lochierarchy#47707, sum(ws_net_paid#456) AS _w0#47726, (cast((shiftright(spark_grouping_id#47715L, 1) & 1) as tinyint) + cast((shiftright(spark_grouping_id#47715L, 0) & 1) as tinyint)) AS _w1#47730, CASE WHEN (cast(cast((shiftright(spark_grouping_id#47715L, 0) & 1) as tinyint) as int) = 0) THEN i_category#47716 END AS _w2#47731, spark_grouping_id#47715L]
                     +- Expand [[ws_sold_date_sk#427, ws_sold_time_sk#428, ws_ship_date_sk#429, ws_item_sk#430, ws_bill_customer_sk#431, ws_bill_cdemo_sk#432, ws_bill_hdemo_sk#433, ws_bill_addr_sk#434, ws_ship_customer_sk#435, ws_ship_cdemo_sk#436, ws_ship_hdemo_sk#437, ws_ship_addr_sk#438, ws_web_page_sk#439, ws_web_site_sk#440, ws_ship_mode_sk#441, ws_warehouse_sk#442, ws_promo_sk#443, ws_order_number#444, ws_quantity#445, ws_wholesale_cost#446, ws_list_price#447, ws_sales_price#448, ws_ext_discount_amt#449, ws_ext_sales_price#450, ... 63 more fields], [ws_sold_date_sk#427, ws_sold_time_sk#428, ws_ship_date_sk#429, ws_item_sk#430, ws_bill_customer_sk#431, ws_bill_cdemo_sk#432, ws_bill_hdemo_sk#433, ws_bill_addr_sk#434, ws_ship_customer_sk#435, ws_ship_cdemo_sk#436, ws_ship_hdemo_sk#437, ws_ship_addr_sk#438, ws_web_page_sk#439, ws_web_site_sk#440, ws_ship_mode_sk#441, ws_warehouse_sk#442, ws_promo_sk#443, ws_order_number#444, ws_quantity#445, ws_wholesale_cost#446, ws_list_price#447, ws_sales_price#448, ws_ext_discount_amt#449, ws_ext_sales_price#450, ... 63 more fields], [ws_sold_date_sk#427, ws_sold_time_sk#428, ws_ship_date_sk#429, ws_item_sk#430, ws_bill_customer_sk#431, ws_bill_cdemo_sk#432, ws_bill_hdemo_sk#433, ws_bill_addr_sk#434, ws_ship_customer_sk#435, ws_ship_cdemo_sk#436, ws_ship_hdemo_sk#437, ws_ship_addr_sk#438, ws_web_page_sk#439, ws_web_site_sk#440, ws_ship_mode_sk#441, ws_warehouse_sk#442, ws_promo_sk#443, ws_order_number#444, ws_quantity#445, ws_wholesale_cost#446, ws_list_price#447, ws_sales_price#448, ws_ext_discount_amt#449, ws_ext_sales_price#450, ... 63 more fields]], [ws_sold_date_sk#427, ws_sold_time_sk#428, ws_ship_date_sk#429, ws_item_sk#430, ws_bill_customer_sk#431, ws_bill_cdemo_sk#432, ws_bill_hdemo_sk#433, ws_bill_addr_sk#434, ws_ship_customer_sk#435, ws_ship_cdemo_sk#436, ws_ship_hdemo_sk#437, ws_ship_addr_sk#438, ws_web_page_sk#439, ws_web_site_sk#440, ws_ship_mode_sk#441, ws_warehouse_sk#442, ws_promo_sk#443, ws_order_number#444, ws_quantity#445, ws_wholesale_cost#446, ws_list_price#447, ws_sales_price#448, ws_ext_discount_amt#449, ws_ext_sales_price#450, ... 63 more fields]
                        +- Project [ws_sold_date_sk#427, ws_sold_time_sk#428, ws_ship_date_sk#429, ws_item_sk#430, ws_bill_customer_sk#431, ws_bill_cdemo_sk#432, ws_bill_hdemo_sk#433, ws_bill_addr_sk#434, ws_ship_customer_sk#435, ws_ship_cdemo_sk#436, ws_ship_hdemo_sk#437, ws_ship_addr_sk#438, ws_web_page_sk#439, ws_web_site_sk#440, ws_ship_mode_sk#441, ws_warehouse_sk#442, ws_promo_sk#443, ws_order_number#444, ws_quantity#445, ws_wholesale_cost#446, ws_list_price#447, ws_sales_price#448, ws_ext_discount_amt#449, ws_ext_sales_price#450, ... 62 more fields]
                           +- Filter ((((d_month_seq#27 >= 1210) AND (d_month_seq#27 <= (1210 + 11))) AND (d_date_sk#24 = ws_sold_date_sk#427)) AND (i_item_sk#1271 = ws_item_sk#430))
                              +- Join Inner
                                 :- Join Inner
                                 :  :- SubqueryAlias spark_catalog.m.web_sales
                                 :  :  +- Relation spark_catalog.m.web_sales[ws_sold_date_sk#427,ws_sold_time_sk#428,ws_ship_date_sk#429,ws_item_sk#430,ws_bill_customer_sk#431,ws_bill_cdemo_sk#432,ws_bill_hdemo_sk#433,ws_bill_addr_sk#434,ws_ship_customer_sk#435,ws_ship_cdemo_sk#436,ws_ship_hdemo_sk#437,ws_ship_addr_sk#438,ws_web_page_sk#439,ws_web_site_sk#440,ws_ship_mode_sk#441,ws_warehouse_sk#442,ws_promo_sk#443,ws_order_number#444,ws_quantity#445,ws_wholesale_cost#446,ws_list_price#447,ws_sales_price#448,ws_ext_discount_amt#449,ws_ext_sales_price#450,... 10 more fields] parquet
                                 :  +- SubqueryAlias d1
                                 :     +- SubqueryAlias spark_catalog.m.date_dim
                                 :        +- Relation spark_catalog.m.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet
                                 +- SubqueryAlias spark_catalog.m.item
                                    +- Relation spark_catalog.m.item[i_item_sk#1271,i_item_id#1272,i_rec_start_date#1273,i_rec_end_date#1274,i_item_desc#1275,i_current_price#1276,i_wholesale_cost#1277,i_brand_id#1278,i_brand#1279,i_class_id#1280,i_class#1281,i_category_id#1282,i_category#1283,i_manufact_id#1284,i_manufact#1285,i_size#1286,i_formulation#1287,i_color#1288,i_units#1289,i_container#1290,i_manager_id#1291,i_product_name#1292] parquet

== Optimized Logical Plan ==
GlobalLimit 100
+- LocalLimit 100
   +- Project [total_sum#47706, i_category#47716, i_class#47717, lochierarchy#47707, rank_within_parent#47708]
      +- Sort [lochierarchy#47707 DESC NULLS LAST, CASE WHEN ((cast((shiftright(spark_grouping_id#47715L, 1) & 1) as tinyint) + cast((shiftright(spark_grouping_id#47715L, 0) & 1) as tinyint)) = 0) THEN i_category#47716 END ASC NULLS FIRST, rank_within_parent#47708 ASC NULLS FIRST], true
         +- Project [total_sum#47706, i_category#47716, i_class#47717, lochierarchy#47707, rank_within_parent#47708, spark_grouping_id#47715L]
            +- Window [rank(_w0#47726) windowspecdefinition(_w1#47730, _w2#47731, _w0#47726 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#47708], [_w1#47730, _w2#47731], [_w0#47726 DESC NULLS LAST]
               +- Aggregate [i_category#47716, i_class#47717, spark_grouping_id#47715L], [sum(ws_net_paid#456) AS total_sum#47706, i_category#47716, i_class#47717, (cast((shiftright(spark_grouping_id#47715L, 1) & 1) as tinyint) + cast((shiftright(spark_grouping_id#47715L, 0) & 1) as tinyint)) AS lochierarchy#47707, sum(ws_net_paid#456) AS _w0#47726, (cast((shiftright(spark_grouping_id#47715L, 1) & 1) as tinyint) + cast((shiftright(spark_grouping_id#47715L, 0) & 1) as tinyint)) AS _w1#47730, CASE WHEN (cast((shiftright(spark_grouping_id#47715L, 0) & 1) as tinyint) = 0) THEN i_category#47716 END AS _w2#47731, spark_grouping_id#47715L]
                  +- Expand [[ws_net_paid#456, i_category#1283, i_class#1281, 0], [ws_net_paid#456, i_category#1283, null, 1], [ws_net_paid#456, null, null, 3]], [ws_net_paid#456, i_category#47716, i_class#47717, spark_grouping_id#47715L]
                     +- Project [ws_net_paid#456, i_category#1283, i_class#1281]
                        +- Join Inner, (i_item_sk#1271 = ws_item_sk#430)
                           :- Project [ws_item_sk#430, ws_net_paid#456]
                           :  +- Join Inner, (d_date_sk#24 = ws_sold_date_sk#427)
                           :     :- Project [ws_sold_date_sk#427, ws_item_sk#430, ws_net_paid#456]
                           :     :  +- Filter (isnotnull(ws_sold_date_sk#427) AND isnotnull(ws_item_sk#430))
                           :     :     +- Relation spark_catalog.m.web_sales[ws_sold_date_sk#427,ws_sold_time_sk#428,ws_ship_date_sk#429,ws_item_sk#430,ws_bill_customer_sk#431,ws_bill_cdemo_sk#432,ws_bill_hdemo_sk#433,ws_bill_addr_sk#434,ws_ship_customer_sk#435,ws_ship_cdemo_sk#436,ws_ship_hdemo_sk#437,ws_ship_addr_sk#438,ws_web_page_sk#439,ws_web_site_sk#440,ws_ship_mode_sk#441,ws_warehouse_sk#442,ws_promo_sk#443,ws_order_number#444,ws_quantity#445,ws_wholesale_cost#446,ws_list_price#447,ws_sales_price#448,ws_ext_discount_amt#449,ws_ext_sales_price#450,... 10 more fields] parquet
                           :     +- Project [d_date_sk#24]
                           :        +- Filter ((isnotnull(d_month_seq#27) AND ((d_month_seq#27 >= 1210) AND (d_month_seq#27 <= 1221))) AND isnotnull(d_date_sk#24))
                           :           +- Relation spark_catalog.m.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet
                           +- Project [i_item_sk#1271, i_class#1281, i_category#1283]
                              +- Filter isnotnull(i_item_sk#1271)
                                 +- Relation spark_catalog.m.item[i_item_sk#1271,i_item_id#1272,i_rec_start_date#1273,i_rec_end_date#1274,i_item_desc#1275,i_current_price#1276,i_wholesale_cost#1277,i_brand_id#1278,i_brand#1279,i_class_id#1280,i_class#1281,i_category_id#1282,i_category#1283,i_manufact_id#1284,i_manufact#1285,i_size#1286,i_formulation#1287,i_color#1288,i_units#1289,i_container#1290,i_manager_id#1291,i_product_name#1292] parquet

== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[lochierarchy#47707 DESC NULLS LAST,CASE WHEN ((cast((shiftright(spark_grouping_id#47715L, 1) & 1) as tinyint) + cast((shiftright(spark_grouping_id#47715L, 0) & 1) as tinyint)) = 0) THEN i_category#47716 END ASC NULLS FIRST,rank_within_parent#47708 ASC NULLS FIRST], output=[total_sum#47706,i_category#47716,i_class#47717,lochierarchy#47707,rank_within_parent#47708])
   +- Project [total_sum#47706, i_category#47716, i_class#47717, lochierarchy#47707, rank_within_parent#47708, spark_grouping_id#47715L]
      +- Window [rank(_w0#47726) windowspecdefinition(_w1#47730, _w2#47731, _w0#47726 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#47708], [_w1#47730, _w2#47731], [_w0#47726 DESC NULLS LAST]
         +- Sort [_w1#47730 ASC NULLS FIRST, _w2#47731 ASC NULLS FIRST, _w0#47726 DESC NULLS LAST], false, 0
            +- Exchange hashpartitioning(_w1#47730, _w2#47731, 200), ENSURE_REQUIREMENTS, [plan_id=164605]
               +- HashAggregate(keys=[i_category#47716, i_class#47717, spark_grouping_id#47715L], functions=[sum(ws_net_paid#456)], output=[total_sum#47706, i_category#47716, i_class#47717, lochierarchy#47707, _w0#47726, _w1#47730, _w2#47731, spark_grouping_id#47715L])
                  +- Exchange hashpartitioning(i_category#47716, i_class#47717, spark_grouping_id#47715L, 200), ENSURE_REQUIREMENTS, [plan_id=164602]
                     +- HashAggregate(keys=[i_category#47716, i_class#47717, spark_grouping_id#47715L], functions=[partial_sum(ws_net_paid#456)], output=[i_category#47716, i_class#47717, spark_grouping_id#47715L, sum#47758])
                        +- Expand [[ws_net_paid#456, i_category#1283, i_class#1281, 0], [ws_net_paid#456, i_category#1283, null, 1], [ws_net_paid#456, null, null, 3]], [ws_net_paid#456, i_category#47716, i_class#47717, spark_grouping_id#47715L]
                           +- Project [ws_net_paid#456, i_category#1283, i_class#1281]
                              +- BroadcastHashJoin [ws_item_sk#430], [i_item_sk#1271], Inner, BuildRight, false
                                 :- Project [ws_item_sk#430, ws_net_paid#456]
                                 :  +- BroadcastHashJoin [ws_sold_date_sk#427], [d_date_sk#24], Inner, BuildRight, false
                                 :     :- Filter (isnotnull(ws_sold_date_sk#427) AND isnotnull(ws_item_sk#430))
                                 :     :  +- FileScan parquet spark_catalog.m.web_sales[ws_sold_date_sk#427,ws_item_sk#430,ws_net_paid#456] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#427), isnotnull(ws_item_sk#430)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_item_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_net_paid:double>
                                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=164592]
                                 :        +- Project [d_date_sk#24]
                                 :           +- Filter (((isnotnull(d_month_seq#27) AND (d_month_seq#27 >= 1210)) AND (d_month_seq#27 <= 1221)) AND isnotnull(d_date_sk#24))
                                 :              +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#24,d_month_seq#27] Batched: true, DataFilters: [isnotnull(d_month_seq#27), (d_month_seq#27 >= 1210), (d_month_seq#27 <= 1221), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1210), LessThanOrEqual(d_month_seq,1221),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int>
                                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=164596]
                                    +- Filter isnotnull(i_item_sk#1271)
                                       +- FileScan parquet spark_catalog.m.item[i_item_sk#1271,i_class#1281,i_category#1283] Batched: true, DataFilters: [isnotnull(i_item_sk#1271)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_class:string,i_category:string>
