AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[c_customer_id#82 ASC NULLS FIRST,c_salutation#88 ASC NULLS FIRST,c_first_name#89 ASC NULLS FIRST,c_last_name#90 ASC NULLS FIRST,ca_street_number#46761 ASC NULLS FIRST,ca_street_name#46762 ASC NULLS FIRST,ca_street_type#46763 ASC NULLS FIRST,ca_suite_number#46764 ASC NULLS FIRST,ca_city#46765 ASC NULLS FIRST,ca_county#46766 ASC NULLS FIRST,ca_state#46767 ASC NULLS FIRST,ca_zip#46768 ASC NULLS FIRST,ca_country#46769 ASC NULLS FIRST,ca_gmt_offset#46770 ASC NULLS FIRST,ca_location_type#46771 ASC NULLS FIRST,ctr_total_return#46758 ASC NULLS FIRST], output=[c_customer_id#82,c_salutation#88,c_first_name#89,c_last_name#90,ca_street_number#46761,ca_street_name#46762,ca_street_type#46763,ca_suite_number#46764,ca_city#46765,ca_county#46766,ca_state#46767,ca_zip#46768,ca_country#46769,ca_gmt_offset#46770,ca_location_type#46771,ctr_total_return#46758])
   +- Project [c_customer_id#82, c_salutation#88, c_first_name#89, c_last_name#90, ca_street_number#46761, ca_street_name#46762, ca_street_type#46763, ca_suite_number#46764, ca_city#46765, ca_county#46766, ca_state#46767, ca_zip#46768, ca_country#46769, ca_gmt_offset#46770, ca_location_type#46771, ctr_total_return#46758]
      +- BroadcastHashJoin [c_current_addr_sk#85], [ca_address_sk#46759], Inner, BuildRight, false
         :- Project [ctr_total_return#46758, c_customer_id#82, c_current_addr_sk#85, c_salutation#88, c_first_name#89, c_last_name#90]
         :  +- BroadcastHashJoin [ctr_customer_sk#46756], [c_customer_sk#81], Inner, BuildRight, false
         :     :- Project [ctr_customer_sk#46756, ctr_total_return#46758]
         :     :  +- SortMergeJoin [ctr_state#46757], [ctr_state#46774], Inner, (ctr_total_return#46758 > (avg(ctr_total_return) * 1.2)#46777)
         :     :     :- Sort [ctr_state#46757 ASC NULLS FIRST], false, 0
         :     :     :  +- Exchange hashpartitioning(ctr_state#46757, 200), ENSURE_REQUIREMENTS, [plan_id=159203]
         :     :     :     +- Filter isnotnull(ctr_total_return#46758)
         :     :     :        +- HashAggregate(keys=[cr_returning_customer_sk#7818, ca_state#8179], functions=[sum(cr_return_amt_inc_tax#7831)], output=[ctr_customer_sk#46756, ctr_state#46757, ctr_total_return#46758])
         :     :     :           +- Exchange hashpartitioning(cr_returning_customer_sk#7818, ca_state#8179, 200), ENSURE_REQUIREMENTS, [plan_id=159182]
         :     :     :              +- HashAggregate(keys=[cr_returning_customer_sk#7818, ca_state#8179], functions=[partial_sum(cr_return_amt_inc_tax#7831)], output=[cr_returning_customer_sk#7818, ca_state#8179, sum#47128])
         :     :     :                 +- Project [cr_returning_customer_sk#7818, cr_return_amt_inc_tax#7831, ca_state#8179]
         :     :     :                    +- BroadcastHashJoin [cr_returning_addr_sk#7821], [ca_address_sk#8171], Inner, BuildRight, false
         :     :     :                       :- Project [cr_returning_customer_sk#7818, cr_returning_addr_sk#7821, cr_return_amt_inc_tax#7831]
         :     :     :                       :  +- BroadcastHashJoin [cr_returned_date_sk#7811], [d_date_sk#24], Inner, BuildRight, false
         :     :     :                       :     :- Filter ((isnotnull(cr_returned_date_sk#7811) AND isnotnull(cr_returning_addr_sk#7821)) AND isnotnull(cr_returning_customer_sk#7818))
         :     :     :                       :     :  +- FileScan parquet spark_catalog.m.catalog_returns[cr_returned_date_sk#7811,cr_returning_customer_sk#7818,cr_returning_addr_sk#7821,cr_return_amt_inc_tax#7831] Batched: true, DataFilters: [isnotnull(cr_returned_date_sk#7811), isnotnull(cr_returning_addr_sk#7821), isnotnull(cr_returnin..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/catalog_returns], PartitionFilters: [], PushedFilters: [IsNotNull(cr_returned_date_sk), IsNotNull(cr_returning_addr_sk), IsNotNull(cr_returning_customer..., ReadSchema: struct<cr_returned_date_sk:int,cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_am...
         :     :     :                       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=159173]
         :     :     :                       :        +- Project [d_date_sk#24]
         :     :     :                       :           +- Filter ((isnotnull(d_year#30) AND (d_year#30 = 2000)) AND isnotnull(d_date_sk#24))
         :     :     :                       :              +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#24,d_year#30] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 2000), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :     :     :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=159177]
         :     :     :                          +- Filter (isnotnull(ca_address_sk#8171) AND isnotnull(ca_state#8179))
         :     :     :                             +- FileScan parquet spark_catalog.m.customer_address[ca_address_sk#8171,ca_state#8179] Batched: true, DataFilters: [isnotnull(ca_address_sk#8171), isnotnull(ca_state#8179)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_state)], ReadSchema: struct<ca_address_sk:int,ca_state:string>
         :     :     +- Sort [ctr_state#46774 ASC NULLS FIRST], false, 0
         :     :        +- Filter isnotnull((avg(ctr_total_return) * 1.2)#46777)
         :     :           +- HashAggregate(keys=[ctr_state#46774], functions=[avg(ctr_total_return#46775)], output=[(avg(ctr_total_return) * 1.2)#46777, ctr_state#46774])
         :     :              +- Exchange hashpartitioning(ctr_state#46774, 200), ENSURE_REQUIREMENTS, [plan_id=159198]
         :     :                 +- HashAggregate(keys=[ctr_state#46774], functions=[partial_avg(ctr_total_return#46775)], output=[ctr_state#46774, sum#47131, count#47132L])
         :     :                    +- HashAggregate(keys=[cr_returning_customer_sk#47183, ca_state#47239], functions=[sum(cr_return_amt_inc_tax#47196)], output=[ctr_state#46774, ctr_total_return#46775])
         :     :                       +- Exchange hashpartitioning(cr_returning_customer_sk#47183, ca_state#47239, 200), ENSURE_REQUIREMENTS, [plan_id=159194]
         :     :                          +- HashAggregate(keys=[cr_returning_customer_sk#47183, ca_state#47239], functions=[partial_sum(cr_return_amt_inc_tax#47196)], output=[cr_returning_customer_sk#47183, ca_state#47239, sum#47248])
         :     :                             +- Project [cr_returning_customer_sk#47183, cr_return_amt_inc_tax#47196, ca_state#47239]
         :     :                                +- BroadcastHashJoin [cr_returning_addr_sk#47186], [ca_address_sk#47231], Inner, BuildRight, false
         :     :                                   :- Project [cr_returning_customer_sk#47183, cr_returning_addr_sk#47186, cr_return_amt_inc_tax#47196]
         :     :                                   :  +- BroadcastHashJoin [cr_returned_date_sk#47176], [d_date_sk#47203], Inner, BuildRight, false
         :     :                                   :     :- Filter (isnotnull(cr_returned_date_sk#47176) AND isnotnull(cr_returning_addr_sk#47186))
         :     :                                   :     :  +- FileScan parquet spark_catalog.m.catalog_returns[cr_returned_date_sk#47176,cr_returning_customer_sk#47183,cr_returning_addr_sk#47186,cr_return_amt_inc_tax#47196] Batched: true, DataFilters: [isnotnull(cr_returned_date_sk#47176), isnotnull(cr_returning_addr_sk#47186)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/catalog_returns], PartitionFilters: [], PushedFilters: [IsNotNull(cr_returned_date_sk), IsNotNull(cr_returning_addr_sk)], ReadSchema: struct<cr_returned_date_sk:int,cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_am...
         :     :                                   :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=159185]
         :     :                                   :        +- Project [d_date_sk#47203]
         :     :                                   :           +- Filter ((isnotnull(d_year#47209) AND (d_year#47209 = 2000)) AND isnotnull(d_date_sk#47203))
         :     :                                   :              +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#47203,d_year#47209] Batched: true, DataFilters: [isnotnull(d_year#47209), (d_year#47209 = 2000), isnotnull(d_date_sk#47203)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :     :                                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=159189]
         :     :                                      +- Filter (isnotnull(ca_address_sk#47231) AND isnotnull(ca_state#47239))
         :     :                                         +- FileScan parquet spark_catalog.m.customer_address[ca_address_sk#47231,ca_state#47239] Batched: true, DataFilters: [isnotnull(ca_address_sk#47231), isnotnull(ca_state#47239)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_state)], ReadSchema: struct<ca_address_sk:int,ca_state:string>
         :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=159209]
         :        +- Filter (isnotnull(c_customer_sk#81) AND isnotnull(c_current_addr_sk#85))
         :           +- FileScan parquet spark_catalog.m.customer[c_customer_sk#81,c_customer_id#82,c_current_addr_sk#85,c_salutation#88,c_first_name#89,c_last_name#90] Batched: true, DataFilters: [isnotnull(c_customer_sk#81), isnotnull(c_current_addr_sk#85)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_current_addr_sk:int,c_salutation:string,c_first_n...
         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=159213]
            +- Filter ((isnotnull(ca_state#46767) AND (ca_state#46767 = AZ)) AND isnotnull(ca_address_sk#46759))
               +- FileScan parquet spark_catalog.m.customer_address[ca_address_sk#46759,ca_street_number#46761,ca_street_name#46762,ca_street_type#46763,ca_suite_number#46764,ca_city#46765,ca_county#46766,ca_state#46767,ca_zip#46768,ca_country#46769,ca_gmt_offset#46770,ca_location_type#46771] Batched: true, DataFilters: [isnotnull(ca_state#46767), (ca_state#46767 = AZ), isnotnull(ca_address_sk#46759)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_state), EqualTo(ca_state,AZ), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_street_number:string,ca_street_name:string,ca_street_type:string,ca_s...
