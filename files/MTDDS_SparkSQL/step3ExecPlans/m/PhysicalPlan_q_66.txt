AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[w_warehouse_name#21222 ASC NULLS FIRST], output=[w_warehouse_name#21222,w_warehouse_sq_ft#21223,w_city#21228,w_county#21229,w_state#21230,w_country#21232,ship_carriers#39488,year#39489,jan_sales#39540,feb_sales#39541,mar_sales#39542,apr_sales#39543,may_sales#39544,jun_sales#39545,jul_sales#39546,aug_sales#39547,sep_sales#39548,oct_sales#39549,nov_sales#39550,dec_sales#39551,jan_sales_per_sq_foot#39552,feb_sales_per_sq_foot#39553,mar_sales_per_sq_foot#39554,apr_sales_per_sq_foot#39555,... 20 more fields])
   +- HashAggregate(keys=[w_warehouse_name#21222, w_warehouse_sq_ft#21223, w_city#21228, w_county#21229, w_state#21230, w_country#21232, ship_carriers#39488, year#39489], functions=[sum(jan_sales#39490), sum(feb_sales#39491), sum(mar_sales#39492), sum(apr_sales#39493), sum(may_sales#39494), sum(jun_sales#39495), sum(jul_sales#39496), sum(aug_sales#39497), sum(sep_sales#39498), sum(oct_sales#39499), sum(nov_sales#39500), sum(dec_sales#39501), sum((jan_sales#39490 / cast(w_warehouse_sq_ft#21223 as double))), sum((feb_sales#39491 / cast(w_warehouse_sq_ft#21223 as double))), sum((mar_sales#39492 / cast(w_warehouse_sq_ft#21223 as double))), sum((apr_sales#39493 / cast(w_warehouse_sq_ft#21223 as double))), sum((may_sales#39494 / cast(w_warehouse_sq_ft#21223 as double))), sum((jun_sales#39495 / cast(w_warehouse_sq_ft#21223 as double))), sum((jul_sales#39496 / cast(w_warehouse_sq_ft#21223 as double))), sum((aug_sales#39497 / cast(w_warehouse_sq_ft#21223 as double))), sum((sep_sales#39498 / cast(w_warehouse_sq_ft#21223 as double))), sum((oct_sales#39499 / cast(w_warehouse_sq_ft#21223 as double))), sum((nov_sales#39500 / cast(w_warehouse_sq_ft#21223 as double))), sum((dec_sales#39501 / cast(w_warehouse_sq_ft#21223 as double))), ... 12 more fields], output=[w_warehouse_name#21222, w_warehouse_sq_ft#21223, w_city#21228, w_county#21229, w_state#21230, w_country#21232, ship_carriers#39488, year#39489, jan_sales#39540, feb_sales#39541, mar_sales#39542, apr_sales#39543, may_sales#39544, jun_sales#39545, jul_sales#39546, aug_sales#39547, sep_sales#39548, oct_sales#39549, nov_sales#39550, dec_sales#39551, jan_sales_per_sq_foot#39552, feb_sales_per_sq_foot#39553, mar_sales_per_sq_foot#39554, apr_sales_per_sq_foot#39555, ... 20 more fields])
      +- Exchange hashpartitioning(w_warehouse_name#21222, w_warehouse_sq_ft#21223, w_city#21228, w_county#21229, w_state#21230, w_country#21232, ship_carriers#39488, year#39489, 200), ENSURE_REQUIREMENTS, [plan_id=133543]
         +- HashAggregate(keys=[w_warehouse_name#21222, w_warehouse_sq_ft#21223, w_city#21228, w_county#21229, w_state#21230, w_country#21232, ship_carriers#39488, year#39489], functions=[partial_sum(jan_sales#39490), partial_sum(feb_sales#39491), partial_sum(mar_sales#39492), partial_sum(apr_sales#39493), partial_sum(may_sales#39494), partial_sum(jun_sales#39495), partial_sum(jul_sales#39496), partial_sum(aug_sales#39497), partial_sum(sep_sales#39498), partial_sum(oct_sales#39499), partial_sum(nov_sales#39500), partial_sum(dec_sales#39501), partial_sum((jan_sales#39490 / cast(w_warehouse_sq_ft#21223 as double))), partial_sum((feb_sales#39491 / cast(w_warehouse_sq_ft#21223 as double))), partial_sum((mar_sales#39492 / cast(w_warehouse_sq_ft#21223 as double))), partial_sum((apr_sales#39493 / cast(w_warehouse_sq_ft#21223 as double))), partial_sum((may_sales#39494 / cast(w_warehouse_sq_ft#21223 as double))), partial_sum((jun_sales#39495 / cast(w_warehouse_sq_ft#21223 as double))), partial_sum((jul_sales#39496 / cast(w_warehouse_sq_ft#21223 as double))), partial_sum((aug_sales#39497 / cast(w_warehouse_sq_ft#21223 as double))), partial_sum((sep_sales#39498 / cast(w_warehouse_sq_ft#21223 as double))), partial_sum((oct_sales#39499 / cast(w_warehouse_sq_ft#21223 as double))), partial_sum((nov_sales#39500 / cast(w_warehouse_sq_ft#21223 as double))), partial_sum((dec_sales#39501 / cast(w_warehouse_sq_ft#21223 as double))), ... 12 more fields], output=[w_warehouse_name#21222, w_warehouse_sq_ft#21223, w_city#21228, w_county#21229, w_state#21230, w_country#21232, ship_carriers#39488, year#39489, sum#39945, sum#39946, sum#39947, sum#39948, sum#39949, sum#39950, sum#39951, sum#39952, sum#39953, sum#39954, sum#39955, sum#39956, sum#39957, sum#39958, sum#39959, sum#39960, ... 20 more fields])
            +- Union
               :- HashAggregate(keys=[w_warehouse_name#21222, w_warehouse_sq_ft#21223, w_city#21228, w_county#21229, w_state#21230, w_country#21232, d_year#30], functions=[sum(CASE WHEN (d_moy#32 = 1) THEN (ws_ext_list_price#452 * cast(ws_quantity#445 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#32 = 2) THEN (ws_ext_list_price#452 * cast(ws_quantity#445 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#32 = 3) THEN (ws_ext_list_price#452 * cast(ws_quantity#445 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#32 = 4) THEN (ws_ext_list_price#452 * cast(ws_quantity#445 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#32 = 5) THEN (ws_ext_list_price#452 * cast(ws_quantity#445 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#32 = 6) THEN (ws_ext_list_price#452 * cast(ws_quantity#445 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#32 = 7) THEN (ws_ext_list_price#452 * cast(ws_quantity#445 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#32 = 8) THEN (ws_ext_list_price#452 * cast(ws_quantity#445 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#32 = 9) THEN (ws_ext_list_price#452 * cast(ws_quantity#445 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#32 = 10) THEN (ws_ext_list_price#452 * cast(ws_quantity#445 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#32 = 11) THEN (ws_ext_list_price#452 * cast(ws_quantity#445 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#32 = 12) THEN (ws_ext_list_price#452 * cast(ws_quantity#445 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#32 = 1) THEN (ws_net_profit#460 * cast(ws_quantity#445 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#32 = 2) THEN (ws_net_profit#460 * cast(ws_quantity#445 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#32 = 3) THEN (ws_net_profit#460 * cast(ws_quantity#445 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#32 = 4) THEN (ws_net_profit#460 * cast(ws_quantity#445 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#32 = 5) THEN (ws_net_profit#460 * cast(ws_quantity#445 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#32 = 6) THEN (ws_net_profit#460 * cast(ws_quantity#445 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#32 = 7) THEN (ws_net_profit#460 * cast(ws_quantity#445 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#32 = 8) THEN (ws_net_profit#460 * cast(ws_quantity#445 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#32 = 9) THEN (ws_net_profit#460 * cast(ws_quantity#445 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#32 = 10) THEN (ws_net_profit#460 * cast(ws_quantity#445 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#32 = 11) THEN (ws_net_profit#460 * cast(ws_quantity#445 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#32 = 12) THEN (ws_net_profit#460 * cast(ws_quantity#445 as double)) ELSE 0.0 END)], output=[w_warehouse_name#21222, w_warehouse_sq_ft#21223, w_city#21228, w_county#21229, w_state#21230, w_country#21232, ship_carriers#39488, year#39489, jan_sales#39490, feb_sales#39491, mar_sales#39492, apr_sales#39493, may_sales#39494, jun_sales#39495, jul_sales#39496, aug_sales#39497, sep_sales#39498, oct_sales#39499, nov_sales#39500, dec_sales#39501, jan_net#39502, feb_net#39503, mar_net#39504, apr_net#39505, ... 8 more fields])
               :  +- Exchange hashpartitioning(w_warehouse_name#21222, w_warehouse_sq_ft#21223, w_city#21228, w_county#21229, w_state#21230, w_country#21232, d_year#30, 200), ENSURE_REQUIREMENTS, [plan_id=133519]
               :     +- HashAggregate(keys=[w_warehouse_name#21222, w_warehouse_sq_ft#21223, w_city#21228, w_county#21229, w_state#21230, w_country#21232, d_year#30], functions=[partial_sum(CASE WHEN (d_moy#32 = 1) THEN (ws_ext_list_price#452 * cast(ws_quantity#445 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#32 = 2) THEN (ws_ext_list_price#452 * cast(ws_quantity#445 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#32 = 3) THEN (ws_ext_list_price#452 * cast(ws_quantity#445 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#32 = 4) THEN (ws_ext_list_price#452 * cast(ws_quantity#445 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#32 = 5) THEN (ws_ext_list_price#452 * cast(ws_quantity#445 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#32 = 6) THEN (ws_ext_list_price#452 * cast(ws_quantity#445 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#32 = 7) THEN (ws_ext_list_price#452 * cast(ws_quantity#445 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#32 = 8) THEN (ws_ext_list_price#452 * cast(ws_quantity#445 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#32 = 9) THEN (ws_ext_list_price#452 * cast(ws_quantity#445 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#32 = 10) THEN (ws_ext_list_price#452 * cast(ws_quantity#445 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#32 = 11) THEN (ws_ext_list_price#452 * cast(ws_quantity#445 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#32 = 12) THEN (ws_ext_list_price#452 * cast(ws_quantity#445 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#32 = 1) THEN (ws_net_profit#460 * cast(ws_quantity#445 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#32 = 2) THEN (ws_net_profit#460 * cast(ws_quantity#445 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#32 = 3) THEN (ws_net_profit#460 * cast(ws_quantity#445 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#32 = 4) THEN (ws_net_profit#460 * cast(ws_quantity#445 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#32 = 5) THEN (ws_net_profit#460 * cast(ws_quantity#445 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#32 = 6) THEN (ws_net_profit#460 * cast(ws_quantity#445 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#32 = 7) THEN (ws_net_profit#460 * cast(ws_quantity#445 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#32 = 8) THEN (ws_net_profit#460 * cast(ws_quantity#445 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#32 = 9) THEN (ws_net_profit#460 * cast(ws_quantity#445 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#32 = 10) THEN (ws_net_profit#460 * cast(ws_quantity#445 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#32 = 11) THEN (ws_net_profit#460 * cast(ws_quantity#445 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#32 = 12) THEN (ws_net_profit#460 * cast(ws_quantity#445 as double)) ELSE 0.0 END)], output=[w_warehouse_name#21222, w_warehouse_sq_ft#21223, w_city#21228, w_county#21229, w_state#21230, w_country#21232, d_year#30, sum#40530, sum#40531, sum#40532, sum#40533, sum#40534, sum#40535, sum#40536, sum#40537, sum#40538, sum#40539, sum#40540, sum#40541, sum#40542, sum#40543, sum#40544, sum#40545, sum#40546, ... 7 more fields])
               :        +- Project [ws_quantity#445, ws_ext_list_price#452, ws_net_profit#460, w_warehouse_name#21222, w_warehouse_sq_ft#21223, w_city#21228, w_county#21229, w_state#21230, w_country#21232, d_year#30, d_moy#32]
               :           +- BroadcastHashJoin [ws_ship_mode_sk#441], [sm_ship_mode_sk#37115], Inner, BuildRight, false
               :              :- Project [ws_ship_mode_sk#441, ws_quantity#445, ws_ext_list_price#452, ws_net_profit#460, w_warehouse_name#21222, w_warehouse_sq_ft#21223, w_city#21228, w_county#21229, w_state#21230, w_country#21232, d_year#30, d_moy#32]
               :              :  +- BroadcastHashJoin [ws_sold_time_sk#428], [t_time_sk#39576], Inner, BuildRight, false
               :              :     :- Project [ws_sold_time_sk#428, ws_ship_mode_sk#441, ws_quantity#445, ws_ext_list_price#452, ws_net_profit#460, w_warehouse_name#21222, w_warehouse_sq_ft#21223, w_city#21228, w_county#21229, w_state#21230, w_country#21232, d_year#30, d_moy#32]
               :              :     :  +- BroadcastHashJoin [ws_sold_date_sk#427], [d_date_sk#24], Inner, BuildRight, false
               :              :     :     :- Project [ws_sold_date_sk#427, ws_sold_time_sk#428, ws_ship_mode_sk#441, ws_quantity#445, ws_ext_list_price#452, ws_net_profit#460, w_warehouse_name#21222, w_warehouse_sq_ft#21223, w_city#21228, w_county#21229, w_state#21230, w_country#21232]
               :              :     :     :  +- BroadcastHashJoin [ws_warehouse_sk#442], [w_warehouse_sk#21220], Inner, BuildRight, false
               :              :     :     :     :- Filter (((isnotnull(ws_warehouse_sk#442) AND isnotnull(ws_sold_date_sk#427)) AND isnotnull(ws_sold_time_sk#428)) AND isnotnull(ws_ship_mode_sk#441))
               :              :     :     :     :  +- FileScan parquet spark_catalog.m.web_sales[ws_sold_date_sk#427,ws_sold_time_sk#428,ws_ship_mode_sk#441,ws_warehouse_sk#442,ws_quantity#445,ws_ext_list_price#452,ws_net_profit#460] Batched: true, DataFilters: [isnotnull(ws_warehouse_sk#442), isnotnull(ws_sold_date_sk#427), isnotnull(ws_sold_time_sk#428), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_warehouse_sk), IsNotNull(ws_sold_date_sk), IsNotNull(ws_sold_time_sk), IsNotNull(ws..., ReadSchema: struct<ws_sold_date_sk:int,ws_sold_time_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_quantit...
               :              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=133502]
               :              :     :     :        +- Filter isnotnull(w_warehouse_sk#21220)
               :              :     :     :           +- FileScan parquet spark_catalog.m.warehouse[w_warehouse_sk#21220,w_warehouse_name#21222,w_warehouse_sq_ft#21223,w_city#21228,w_county#21229,w_state#21230,w_country#21232] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#21220)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/warehouse], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string,w_warehouse_sq_ft:int,w_city:string,w_county:st...
               :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=133506]
               :              :     :        +- Filter ((isnotnull(d_year#30) AND (d_year#30 = 2002)) AND isnotnull(d_date_sk#24))
               :              :     :           +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 2002), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
               :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=133510]
               :              :        +- Project [t_time_sk#39576]
               :              :           +- Filter (((isnotnull(t_time#39578) AND (t_time#39578 >= 23285)) AND (t_time#39578 <= 52085)) AND isnotnull(t_time_sk#39576))
               :              :              +- FileScan parquet spark_catalog.m.time_dim[t_time_sk#39576,t_time#39578] Batched: true, DataFilters: [isnotnull(t_time#39578), (t_time#39578 >= 23285), (t_time#39578 <= 52085), isnotnull(t_time_sk#3..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_time), GreaterThanOrEqual(t_time,23285), LessThanOrEqual(t_time,52085), IsNotNull(t_..., ReadSchema: struct<t_time_sk:int,t_time:int>
               :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=133514]
               :                 +- Project [sm_ship_mode_sk#37115]
               :                    +- Filter (sm_carrier#37119 IN (RUPEKSA,USPS) AND isnotnull(sm_ship_mode_sk#37115))
               :                       +- FileScan parquet spark_catalog.m.ship_mode[sm_ship_mode_sk#37115,sm_carrier#37119] Batched: true, DataFilters: [sm_carrier#37119 IN (RUPEKSA,USPS), isnotnull(sm_ship_mode_sk#37115)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/ship_mode], PartitionFilters: [], PushedFilters: [In(sm_carrier, [RUPEKSA,USPS]), IsNotNull(sm_ship_mode_sk)], ReadSchema: struct<sm_ship_mode_sk:int,sm_carrier:string>
               +- HashAggregate(keys=[w_warehouse_name#39588, w_warehouse_sq_ft#39589, w_city#39594, w_county#39595, w_state#39596, w_country#39598, d_year#39606], functions=[sum(CASE WHEN (d_moy#39608 = 1) THEN (cs_ext_sales_price#484 * cast(cs_quantity#479 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#39608 = 2) THEN (cs_ext_sales_price#484 * cast(cs_quantity#479 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#39608 = 3) THEN (cs_ext_sales_price#484 * cast(cs_quantity#479 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#39608 = 4) THEN (cs_ext_sales_price#484 * cast(cs_quantity#479 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#39608 = 5) THEN (cs_ext_sales_price#484 * cast(cs_quantity#479 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#39608 = 6) THEN (cs_ext_sales_price#484 * cast(cs_quantity#479 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#39608 = 7) THEN (cs_ext_sales_price#484 * cast(cs_quantity#479 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#39608 = 8) THEN (cs_ext_sales_price#484 * cast(cs_quantity#479 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#39608 = 9) THEN (cs_ext_sales_price#484 * cast(cs_quantity#479 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#39608 = 10) THEN (cs_ext_sales_price#484 * cast(cs_quantity#479 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#39608 = 11) THEN (cs_ext_sales_price#484 * cast(cs_quantity#479 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#39608 = 12) THEN (cs_ext_sales_price#484 * cast(cs_quantity#479 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#39608 = 1) THEN (cs_net_profit#494 * cast(cs_quantity#479 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#39608 = 2) THEN (cs_net_profit#494 * cast(cs_quantity#479 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#39608 = 3) THEN (cs_net_profit#494 * cast(cs_quantity#479 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#39608 = 4) THEN (cs_net_profit#494 * cast(cs_quantity#479 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#39608 = 5) THEN (cs_net_profit#494 * cast(cs_quantity#479 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#39608 = 6) THEN (cs_net_profit#494 * cast(cs_quantity#479 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#39608 = 7) THEN (cs_net_profit#494 * cast(cs_quantity#479 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#39608 = 8) THEN (cs_net_profit#494 * cast(cs_quantity#479 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#39608 = 9) THEN (cs_net_profit#494 * cast(cs_quantity#479 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#39608 = 10) THEN (cs_net_profit#494 * cast(cs_quantity#479 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#39608 = 11) THEN (cs_net_profit#494 * cast(cs_quantity#479 as double)) ELSE 0.0 END), sum(CASE WHEN (d_moy#39608 = 12) THEN (cs_net_profit#494 * cast(cs_quantity#479 as double)) ELSE 0.0 END)], output=[w_warehouse_name#39588, w_warehouse_sq_ft#39589, w_city#39594, w_county#39595, w_state#39596, w_country#39598, ship_carriers#39514, year#39515, jan_sales#39516, feb_sales#39517, mar_sales#39518, apr_sales#39519, may_sales#39520, jun_sales#39521, jul_sales#39522, aug_sales#39523, sep_sales#39524, oct_sales#39525, nov_sales#39526, dec_sales#39527, jan_net#39528, feb_net#39529, mar_net#39530, apr_net#39531, ... 8 more fields])
                  +- Exchange hashpartitioning(w_warehouse_name#39588, w_warehouse_sq_ft#39589, w_city#39594, w_county#39595, w_state#39596, w_country#39598, d_year#39606, 200), ENSURE_REQUIREMENTS, [plan_id=133538]
                     +- HashAggregate(keys=[w_warehouse_name#39588, w_warehouse_sq_ft#39589, w_city#39594, w_county#39595, w_state#39596, w_country#39598, d_year#39606], functions=[partial_sum(CASE WHEN (d_moy#39608 = 1) THEN (cs_ext_sales_price#484 * cast(cs_quantity#479 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#39608 = 2) THEN (cs_ext_sales_price#484 * cast(cs_quantity#479 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#39608 = 3) THEN (cs_ext_sales_price#484 * cast(cs_quantity#479 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#39608 = 4) THEN (cs_ext_sales_price#484 * cast(cs_quantity#479 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#39608 = 5) THEN (cs_ext_sales_price#484 * cast(cs_quantity#479 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#39608 = 6) THEN (cs_ext_sales_price#484 * cast(cs_quantity#479 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#39608 = 7) THEN (cs_ext_sales_price#484 * cast(cs_quantity#479 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#39608 = 8) THEN (cs_ext_sales_price#484 * cast(cs_quantity#479 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#39608 = 9) THEN (cs_ext_sales_price#484 * cast(cs_quantity#479 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#39608 = 10) THEN (cs_ext_sales_price#484 * cast(cs_quantity#479 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#39608 = 11) THEN (cs_ext_sales_price#484 * cast(cs_quantity#479 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#39608 = 12) THEN (cs_ext_sales_price#484 * cast(cs_quantity#479 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#39608 = 1) THEN (cs_net_profit#494 * cast(cs_quantity#479 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#39608 = 2) THEN (cs_net_profit#494 * cast(cs_quantity#479 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#39608 = 3) THEN (cs_net_profit#494 * cast(cs_quantity#479 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#39608 = 4) THEN (cs_net_profit#494 * cast(cs_quantity#479 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#39608 = 5) THEN (cs_net_profit#494 * cast(cs_quantity#479 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#39608 = 6) THEN (cs_net_profit#494 * cast(cs_quantity#479 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#39608 = 7) THEN (cs_net_profit#494 * cast(cs_quantity#479 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#39608 = 8) THEN (cs_net_profit#494 * cast(cs_quantity#479 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#39608 = 9) THEN (cs_net_profit#494 * cast(cs_quantity#479 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#39608 = 10) THEN (cs_net_profit#494 * cast(cs_quantity#479 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#39608 = 11) THEN (cs_net_profit#494 * cast(cs_quantity#479 as double)) ELSE 0.0 END), partial_sum(CASE WHEN (d_moy#39608 = 12) THEN (cs_net_profit#494 * cast(cs_quantity#479 as double)) ELSE 0.0 END)], output=[w_warehouse_name#39588, w_warehouse_sq_ft#39589, w_city#39594, w_county#39595, w_state#39596, w_country#39598, d_year#39606, sum#40578, sum#40579, sum#40580, sum#40581, sum#40582, sum#40583, sum#40584, sum#40585, sum#40586, sum#40587, sum#40588, sum#40589, sum#40590, sum#40591, sum#40592, sum#40593, sum#40594, ... 7 more fields])
                        +- Project [cs_quantity#479, cs_ext_sales_price#484, cs_net_profit#494, w_warehouse_name#39588, w_warehouse_sq_ft#39589, w_city#39594, w_county#39595, w_state#39596, w_country#39598, d_year#39606, d_moy#39608]
                           +- BroadcastHashJoin [cs_ship_mode_sk#474], [sm_ship_mode_sk#39638], Inner, BuildRight, false
                              :- Project [cs_ship_mode_sk#474, cs_quantity#479, cs_ext_sales_price#484, cs_net_profit#494, w_warehouse_name#39588, w_warehouse_sq_ft#39589, w_city#39594, w_county#39595, w_state#39596, w_country#39598, d_year#39606, d_moy#39608]
                              :  +- BroadcastHashJoin [cs_sold_time_sk#462], [t_time_sk#39628], Inner, BuildRight, false
                              :     :- Project [cs_sold_time_sk#462, cs_ship_mode_sk#474, cs_quantity#479, cs_ext_sales_price#484, cs_net_profit#494, w_warehouse_name#39588, w_warehouse_sq_ft#39589, w_city#39594, w_county#39595, w_state#39596, w_country#39598, d_year#39606, d_moy#39608]
                              :     :  +- BroadcastHashJoin [cs_sold_date_sk#461], [d_date_sk#39600], Inner, BuildRight, false
                              :     :     :- Project [cs_sold_date_sk#461, cs_sold_time_sk#462, cs_ship_mode_sk#474, cs_quantity#479, cs_ext_sales_price#484, cs_net_profit#494, w_warehouse_name#39588, w_warehouse_sq_ft#39589, w_city#39594, w_county#39595, w_state#39596, w_country#39598]
                              :     :     :  +- BroadcastHashJoin [cs_warehouse_sk#475], [w_warehouse_sk#39586], Inner, BuildRight, false
                              :     :     :     :- Filter (((isnotnull(cs_warehouse_sk#475) AND isnotnull(cs_sold_date_sk#461)) AND isnotnull(cs_sold_time_sk#462)) AND isnotnull(cs_ship_mode_sk#474))
                              :     :     :     :  +- FileScan parquet spark_catalog.m.catalog_sales[cs_sold_date_sk#461,cs_sold_time_sk#462,cs_ship_mode_sk#474,cs_warehouse_sk#475,cs_quantity#479,cs_ext_sales_price#484,cs_net_profit#494] Batched: true, DataFilters: [isnotnull(cs_warehouse_sk#475), isnotnull(cs_sold_date_sk#461), isnotnull(cs_sold_time_sk#462), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_warehouse_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs_sold_time_sk), IsNotNull(cs..., ReadSchema: struct<cs_sold_date_sk:int,cs_sold_time_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int,cs_quantit...
                              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=133521]
                              :     :     :        +- Filter isnotnull(w_warehouse_sk#39586)
                              :     :     :           +- FileScan parquet spark_catalog.m.warehouse[w_warehouse_sk#39586,w_warehouse_name#39588,w_warehouse_sq_ft#39589,w_city#39594,w_county#39595,w_state#39596,w_country#39598] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#39586)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/warehouse], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string,w_warehouse_sq_ft:int,w_city:string,w_county:st...
                              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=133525]
                              :     :        +- Filter ((isnotnull(d_year#39606) AND (d_year#39606 = 2002)) AND isnotnull(d_date_sk#39600))
                              :     :           +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#39600,d_year#39606,d_moy#39608] Batched: true, DataFilters: [isnotnull(d_year#39606), (d_year#39606 = 2002), isnotnull(d_date_sk#39600)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=133529]
                              :        +- Project [t_time_sk#39628]
                              :           +- Filter (((isnotnull(t_time#39630) AND (t_time#39630 >= 23285)) AND (t_time#39630 <= 52085)) AND isnotnull(t_time_sk#39628))
                              :              +- FileScan parquet spark_catalog.m.time_dim[t_time_sk#39628,t_time#39630] Batched: true, DataFilters: [isnotnull(t_time#39630), (t_time#39630 >= 23285), (t_time#39630 <= 52085), isnotnull(t_time_sk#3..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_time), GreaterThanOrEqual(t_time,23285), LessThanOrEqual(t_time,52085), IsNotNull(t_..., ReadSchema: struct<t_time_sk:int,t_time:int>
                              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=133533]
                                 +- Project [sm_ship_mode_sk#39638]
                                    +- Filter (sm_carrier#39642 IN (RUPEKSA,USPS) AND isnotnull(sm_ship_mode_sk#39638))
                                       +- FileScan parquet spark_catalog.m.ship_mode[sm_ship_mode_sk#39638,sm_carrier#39642] Batched: true, DataFilters: [sm_carrier#39642 IN (RUPEKSA,USPS), isnotnull(sm_ship_mode_sk#39638)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/ship_mode], PartitionFilters: [], PushedFilters: [In(sm_carrier, [RUPEKSA,USPS]), IsNotNull(sm_ship_mode_sk)], ReadSchema: struct<sm_ship_mode_sk:int,sm_carrier:string>
