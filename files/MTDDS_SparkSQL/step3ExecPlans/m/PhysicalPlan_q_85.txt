AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[substr(r_reason_desc, 1, 20)#47648 ASC NULLS FIRST,avg(ws_quantity)#47649 ASC NULLS FIRST,avg(wr_refunded_cash)#47650 ASC NULLS FIRST,avg(wr_fee)#47651 ASC NULLS FIRST], output=[substr(r_reason_desc, 1, 20)#47648,avg(ws_quantity)#47649,avg(wr_refunded_cash)#47650,avg(wr_fee)#47651])
   +- HashAggregate(keys=[r_reason_desc#8431], functions=[avg(ws_quantity#445), avg(wr_refunded_cash#7867), avg(wr_fee#7865)], output=[substr(r_reason_desc, 1, 20)#47648, avg(ws_quantity)#47649, avg(wr_refunded_cash)#47650, avg(wr_fee)#47651])
      +- Exchange hashpartitioning(r_reason_desc#8431, 200), ENSURE_REQUIREMENTS, [plan_id=164107]
         +- HashAggregate(keys=[r_reason_desc#8431], functions=[partial_avg(ws_quantity#445), partial_avg(wr_refunded_cash#7867), partial_avg(wr_fee#7865)], output=[r_reason_desc#8431, sum#47677, count#47678L, sum#47679, count#47680L, sum#47681, count#47682L])
            +- Project [ws_quantity#445, wr_fee#7865, wr_refunded_cash#7867, r_reason_desc#8431]
               +- BroadcastHashJoin [wr_reason_sk#7859], [r_reason_sk#8429], Inner, BuildRight, false
                  :- Project [ws_quantity#445, wr_reason_sk#7859, wr_fee#7865, wr_refunded_cash#7867]
                  :  +- BroadcastHashJoin [ws_sold_date_sk#427], [d_date_sk#24], Inner, BuildRight, false
                  :     :- Project [ws_sold_date_sk#427, ws_quantity#445, wr_reason_sk#7859, wr_fee#7865, wr_refunded_cash#7867]
                  :     :  +- BroadcastHashJoin [wr_refunded_addr_sk#7853], [ca_address_sk#8171], Inner, BuildRight, ((((ca_state#8179 IN (VA,IL,TN) AND (ws_net_profit#460 >= 100.0)) AND (ws_net_profit#460 <= 200.0)) OR ((ca_state#8179 IN (WV,SD,TX) AND (ws_net_profit#460 >= 150.0)) AND (ws_net_profit#460 <= 300.0))) OR ((ca_state#8179 IN (CO,CA,AL) AND (ws_net_profit#460 >= 50.0)) AND (ws_net_profit#460 <= 250.0))), false
                  :     :     :- Project [ws_sold_date_sk#427, ws_quantity#445, ws_net_profit#460, wr_refunded_addr_sk#7853, wr_reason_sk#7859, wr_fee#7865, wr_refunded_cash#7867]
                  :     :     :  +- BroadcastHashJoin [wr_returning_cdemo_sk#7855, cd_marital_status#8268, cd_education_status#8269], [cd_demo_sk#47635, cd_marital_status#47637, cd_education_status#47638], Inner, BuildRight, false
                  :     :     :     :- Project [ws_sold_date_sk#427, ws_quantity#445, ws_net_profit#460, wr_refunded_addr_sk#7853, wr_returning_cdemo_sk#7855, wr_reason_sk#7859, wr_fee#7865, wr_refunded_cash#7867, cd_marital_status#8268, cd_education_status#8269]
                  :     :     :     :  +- BroadcastHashJoin [wr_refunded_cdemo_sk#7851], [cd_demo_sk#8266], Inner, BuildRight, ((((((cd_marital_status#8268 = M) AND (cd_education_status#8269 = Advanced Degree)) AND (ws_sales_price#448 >= 100.0)) AND (ws_sales_price#448 <= 150.0)) OR ((((cd_marital_status#8268 = D) AND (cd_education_status#8269 = College)) AND (ws_sales_price#448 >= 50.0)) AND (ws_sales_price#448 <= 100.0))) OR ((((cd_marital_status#8268 = S) AND (cd_education_status#8269 = 2 yr Degree)) AND (ws_sales_price#448 >= 150.0)) AND (ws_sales_price#448 <= 200.0))), false
                  :     :     :     :     :- Project [ws_sold_date_sk#427, ws_quantity#445, ws_sales_price#448, ws_net_profit#460, wr_refunded_cdemo_sk#7851, wr_refunded_addr_sk#7853, wr_returning_cdemo_sk#7855, wr_reason_sk#7859, wr_fee#7865, wr_refunded_cash#7867]
                  :     :     :     :     :  +- BroadcastHashJoin [ws_web_page_sk#439], [wp_web_page_sk#45845], Inner, BuildRight, false
                  :     :     :     :     :     :- Project [ws_sold_date_sk#427, ws_web_page_sk#439, ws_quantity#445, ws_sales_price#448, ws_net_profit#460, wr_refunded_cdemo_sk#7851, wr_refunded_addr_sk#7853, wr_returning_cdemo_sk#7855, wr_reason_sk#7859, wr_fee#7865, wr_refunded_cash#7867]
                  :     :     :     :     :     :  +- BroadcastHashJoin [ws_item_sk#430, ws_order_number#444], [wr_item_sk#7849, wr_order_number#7860], Inner, BuildRight, false
                  :     :     :     :     :     :     :- Filter (((((isnotnull(ws_item_sk#430) AND isnotnull(ws_order_number#444)) AND isnotnull(ws_web_page_sk#439)) AND isnotnull(ws_sold_date_sk#427)) AND ((((ws_sales_price#448 >= 100.0) AND (ws_sales_price#448 <= 150.0)) OR ((ws_sales_price#448 >= 50.0) AND (ws_sales_price#448 <= 100.0))) OR ((ws_sales_price#448 >= 150.0) AND (ws_sales_price#448 <= 200.0)))) AND ((((ws_net_profit#460 >= 100.0) AND (ws_net_profit#460 <= 200.0)) OR ((ws_net_profit#460 >= 150.0) AND (ws_net_profit#460 <= 300.0))) OR ((ws_net_profit#460 >= 50.0) AND (ws_net_profit#460 <= 250.0))))
                  :     :     :     :     :     :     :  +- FileScan parquet spark_catalog.m.web_sales[ws_sold_date_sk#427,ws_item_sk#430,ws_web_page_sk#439,ws_order_number#444,ws_quantity#445,ws_sales_price#448,ws_net_profit#460] Batched: true, DataFilters: [isnotnull(ws_item_sk#430), isnotnull(ws_order_number#444), isnotnull(ws_web_page_sk#439), isnotn..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_order_number), IsNotNull(ws_web_page_sk), IsNotNull(ws_sold_..., ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_web_page_sk:int,ws_order_number:int,ws_quantity:int,...
                  :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[0, int, false] as bigint), 32) | (cast(input[5, int, false] as bigint) & 4294967295))),false), [plan_id=164078]
                  :     :     :     :     :     :        +- Filter (((((isnotnull(wr_item_sk#7849) AND isnotnull(wr_order_number#7860)) AND isnotnull(wr_refunded_cdemo_sk#7851)) AND isnotnull(wr_returning_cdemo_sk#7855)) AND isnotnull(wr_refunded_addr_sk#7853)) AND isnotnull(wr_reason_sk#7859))
                  :     :     :     :     :     :           +- FileScan parquet spark_catalog.m.web_returns[wr_item_sk#7849,wr_refunded_cdemo_sk#7851,wr_refunded_addr_sk#7853,wr_returning_cdemo_sk#7855,wr_reason_sk#7859,wr_order_number#7860,wr_fee#7865,wr_refunded_cash#7867] Batched: true, DataFilters: [isnotnull(wr_item_sk#7849), isnotnull(wr_order_number#7860), isnotnull(wr_refunded_cdemo_sk#7851..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/web_returns], PartitionFilters: [], PushedFilters: [IsNotNull(wr_item_sk), IsNotNull(wr_order_number), IsNotNull(wr_refunded_cdemo_sk), IsNotNull(wr..., ReadSchema: struct<wr_item_sk:int,wr_refunded_cdemo_sk:int,wr_refunded_addr_sk:int,wr_returning_cdemo_sk:int,...
                  :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=164082]
                  :     :     :     :     :        +- Filter isnotnull(wp_web_page_sk#45845)
                  :     :     :     :     :           +- FileScan parquet spark_catalog.m.web_page[wp_web_page_sk#45845] Batched: true, DataFilters: [isnotnull(wp_web_page_sk#45845)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/web_page], PartitionFilters: [], PushedFilters: [IsNotNull(wp_web_page_sk)], ReadSchema: struct<wp_web_page_sk:int>
                  :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=164086]
                  :     :     :     :        +- Filter (((isnotnull(cd_demo_sk#8266) AND isnotnull(cd_marital_status#8268)) AND isnotnull(cd_education_status#8269)) AND ((((cd_marital_status#8268 = M) AND (cd_education_status#8269 = Advanced Degree)) OR ((cd_marital_status#8268 = D) AND (cd_education_status#8269 = College))) OR ((cd_marital_status#8268 = S) AND (cd_education_status#8269 = 2 yr Degree))))
                  :     :     :     :           +- FileScan parquet spark_catalog.m.customer_demographics[cd_demo_sk#8266,cd_marital_status#8268,cd_education_status#8269] Batched: true, DataFilters: [isnotnull(cd_demo_sk#8266), isnotnull(cd_marital_status#8268), isnotnull(cd_education_status#826..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer_demograph..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_demo_sk), IsNotNull(cd_marital_status), IsNotNull(cd_education_status), Or(Or(And(E..., ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>
                  :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, int, false], input[1, string, false], input[2, string, false]),false), [plan_id=164090]
                  :     :     :        +- Filter ((isnotnull(cd_demo_sk#47635) AND isnotnull(cd_marital_status#47637)) AND isnotnull(cd_education_status#47638))
                  :     :     :           +- FileScan parquet spark_catalog.m.customer_demographics[cd_demo_sk#47635,cd_marital_status#47637,cd_education_status#47638] Batched: true, DataFilters: [isnotnull(cd_demo_sk#47635), isnotnull(cd_marital_status#47637), isnotnull(cd_education_status#4..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer_demograph..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_demo_sk), IsNotNull(cd_marital_status), IsNotNull(cd_education_status)], ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>
                  :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=164094]
                  :     :        +- Project [ca_address_sk#8171, ca_state#8179]
                  :     :           +- Filter (((isnotnull(ca_country#8181) AND (ca_country#8181 = United States)) AND isnotnull(ca_address_sk#8171)) AND ((ca_state#8179 IN (VA,IL,TN) OR ca_state#8179 IN (WV,SD,TX)) OR ca_state#8179 IN (CO,CA,AL)))
                  :     :              +- FileScan parquet spark_catalog.m.customer_address[ca_address_sk#8171,ca_state#8179,ca_country#8181] Batched: true, DataFilters: [isnotnull(ca_country#8181), (ca_country#8181 = United States), isnotnull(ca_address_sk#8171), ((..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_country), EqualTo(ca_country,United States), IsNotNull(ca_address_sk), Or(Or(In(ca_..., ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_country:string>
                  :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=164098]
                  :        +- Project [d_date_sk#24]
                  :           +- Filter ((isnotnull(d_year#30) AND (d_year#30 = 2002)) AND isnotnull(d_date_sk#24))
                  :              +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#24,d_year#30] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 2002), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=164102]
                     +- Filter isnotnull(r_reason_sk#8429)
                        +- FileScan parquet spark_catalog.m.reason[r_reason_sk#8429,r_reason_desc#8431] Batched: true, DataFilters: [isnotnull(r_reason_sk#8429)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/reason], PartitionFilters: [], PushedFilters: [IsNotNull(r_reason_sk)], ReadSchema: struct<r_reason_sk:int,r_reason_desc:string>
