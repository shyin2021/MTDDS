== Parsed Logical Plan ==
'GlobalLimit 100
+- 'LocalLimit 100
   +- 'Sort ['i_item_id ASC NULLS FIRST], true
      +- 'Aggregate ['i_item_id], ['i_item_id, 'avg('ss_quantity) AS agg1#8262, 'avg('ss_list_price) AS agg2#8263, 'avg('ss_coupon_amt) AS agg3#8264, 'avg('ss_sales_price) AS agg4#8265]
         +- 'Filter ((((('ss_sold_date_sk = 'd_date_sk) AND ('ss_item_sk = 'i_item_sk)) AND ('ss_cdemo_sk = 'cd_demo_sk)) AND (('ss_promo_sk = 'p_promo_sk) AND ('cd_gender = F))) AND ((('cd_marital_status = W) AND ('cd_education_status = College)) AND ((('p_channel_email = N) OR ('p_channel_event = N)) AND ('d_year = 2001))))
            +- 'Join Inner
               :- 'Join Inner
               :  :- 'Join Inner
               :  :  :- 'Join Inner
               :  :  :  :- 'UnresolvedRelation [store_sales], [], false
               :  :  :  +- 'UnresolvedRelation [customer_demographics], [], false
               :  :  +- 'UnresolvedRelation [date_dim], [], false
               :  +- 'UnresolvedRelation [item], [], false
               +- 'UnresolvedRelation [promotion], [], false

== Analyzed Logical Plan ==
i_item_id: string, agg1: double, agg2: double, agg3: double, agg4: double
GlobalLimit 100
+- LocalLimit 100
   +- Sort [i_item_id#1272 ASC NULLS FIRST], true
      +- Aggregate [i_item_id#1272], [i_item_id#1272, avg(ss_quantity#1258) AS agg1#8262, avg(ss_list_price#1260) AS agg2#8263, avg(ss_coupon_amt#1267) AS agg3#8264, avg(ss_sales_price#1261) AS agg4#8265]
         +- Filter (((((ss_sold_date_sk#1248 = d_date_sk#24) AND (ss_item_sk#1250 = i_item_sk#1271)) AND (ss_cdemo_sk#1252 = cd_demo_sk#8266)) AND ((ss_promo_sk#1256 = p_promo_sk#8275) AND (cd_gender#8267 = F))) AND (((cd_marital_status#8268 = W) AND (cd_education_status#8269 = College)) AND (((p_channel_email#8284 = N) OR (p_channel_event#8289 = N)) AND (d_year#30 = 2001))))
            +- Join Inner
               :- Join Inner
               :  :- Join Inner
               :  :  :- Join Inner
               :  :  :  :- SubqueryAlias spark_catalog.m.store_sales
               :  :  :  :  +- Relation spark_catalog.m.store_sales[ss_sold_date_sk#1248,ss_sold_time_sk#1249,ss_item_sk#1250,ss_customer_sk#1251,ss_cdemo_sk#1252,ss_hdemo_sk#1253,ss_addr_sk#1254,ss_store_sk#1255,ss_promo_sk#1256,ss_ticket_number#1257,ss_quantity#1258,ss_wholesale_cost#1259,ss_list_price#1260,ss_sales_price#1261,ss_ext_discount_amt#1262,ss_ext_sales_price#1263,ss_ext_wholesale_cost#1264,ss_ext_list_price#1265,ss_ext_tax#1266,ss_coupon_amt#1267,ss_net_paid#1268,ss_net_paid_inc_tax#1269,ss_net_profit#1270] parquet
               :  :  :  +- SubqueryAlias spark_catalog.m.customer_demographics
               :  :  :     +- Relation spark_catalog.m.customer_demographics[cd_demo_sk#8266,cd_gender#8267,cd_marital_status#8268,cd_education_status#8269,cd_purchase_estimate#8270,cd_credit_rating#8271,cd_dep_count#8272,cd_dep_employed_count#8273,cd_dep_college_count#8274] parquet
               :  :  +- SubqueryAlias spark_catalog.m.date_dim
               :  :     +- Relation spark_catalog.m.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet
               :  +- SubqueryAlias spark_catalog.m.item
               :     +- Relation spark_catalog.m.item[i_item_sk#1271,i_item_id#1272,i_rec_start_date#1273,i_rec_end_date#1274,i_item_desc#1275,i_current_price#1276,i_wholesale_cost#1277,i_brand_id#1278,i_brand#1279,i_class_id#1280,i_class#1281,i_category_id#1282,i_category#1283,i_manufact_id#1284,i_manufact#1285,i_size#1286,i_formulation#1287,i_color#1288,i_units#1289,i_container#1290,i_manager_id#1291,i_product_name#1292] parquet
               +- SubqueryAlias spark_catalog.m.promotion
                  +- Relation spark_catalog.m.promotion[p_promo_sk#8275,p_promo_id#8276,p_start_date_sk#8277,p_end_date_sk#8278,p_item_sk#8279,p_cost#8280,p_response_target#8281,p_promo_name#8282,p_channel_dmail#8283,p_channel_email#8284,p_channel_catalog#8285,p_channel_tv#8286,p_channel_radio#8287,p_channel_press#8288,p_channel_event#8289,p_channel_demo#8290,p_channel_details#8291,p_purpose#8292,p_discount_active#8293] parquet

== Optimized Logical Plan ==
GlobalLimit 100
+- LocalLimit 100
   +- Sort [i_item_id#1272 ASC NULLS FIRST], true
      +- Aggregate [i_item_id#1272], [i_item_id#1272, avg(ss_quantity#1258) AS agg1#8262, avg(ss_list_price#1260) AS agg2#8263, avg(ss_coupon_amt#1267) AS agg3#8264, avg(ss_sales_price#1261) AS agg4#8265]
         +- Project [ss_quantity#1258, ss_list_price#1260, ss_sales_price#1261, ss_coupon_amt#1267, i_item_id#1272]
            +- Join Inner, (ss_promo_sk#1256 = p_promo_sk#8275)
               :- Project [ss_promo_sk#1256, ss_quantity#1258, ss_list_price#1260, ss_sales_price#1261, ss_coupon_amt#1267, i_item_id#1272]
               :  +- Join Inner, (ss_item_sk#1250 = i_item_sk#1271)
               :     :- Project [ss_item_sk#1250, ss_promo_sk#1256, ss_quantity#1258, ss_list_price#1260, ss_sales_price#1261, ss_coupon_amt#1267]
               :     :  +- Join Inner, (ss_sold_date_sk#1248 = d_date_sk#24)
               :     :     :- Project [ss_sold_date_sk#1248, ss_item_sk#1250, ss_promo_sk#1256, ss_quantity#1258, ss_list_price#1260, ss_sales_price#1261, ss_coupon_amt#1267]
               :     :     :  +- Join Inner, (ss_cdemo_sk#1252 = cd_demo_sk#8266)
               :     :     :     :- Project [ss_sold_date_sk#1248, ss_item_sk#1250, ss_cdemo_sk#1252, ss_promo_sk#1256, ss_quantity#1258, ss_list_price#1260, ss_sales_price#1261, ss_coupon_amt#1267]
               :     :     :     :  +- Filter ((isnotnull(ss_cdemo_sk#1252) AND isnotnull(ss_sold_date_sk#1248)) AND (isnotnull(ss_item_sk#1250) AND isnotnull(ss_promo_sk#1256)))
               :     :     :     :     +- Relation spark_catalog.m.store_sales[ss_sold_date_sk#1248,ss_sold_time_sk#1249,ss_item_sk#1250,ss_customer_sk#1251,ss_cdemo_sk#1252,ss_hdemo_sk#1253,ss_addr_sk#1254,ss_store_sk#1255,ss_promo_sk#1256,ss_ticket_number#1257,ss_quantity#1258,ss_wholesale_cost#1259,ss_list_price#1260,ss_sales_price#1261,ss_ext_discount_amt#1262,ss_ext_sales_price#1263,ss_ext_wholesale_cost#1264,ss_ext_list_price#1265,ss_ext_tax#1266,ss_coupon_amt#1267,ss_net_paid#1268,ss_net_paid_inc_tax#1269,ss_net_profit#1270] parquet
               :     :     :     +- Project [cd_demo_sk#8266]
               :     :     :        +- Filter ((((isnotnull(cd_gender#8267) AND isnotnull(cd_marital_status#8268)) AND isnotnull(cd_education_status#8269)) AND (((cd_gender#8267 = F) AND (cd_marital_status#8268 = W)) AND (cd_education_status#8269 = College))) AND isnotnull(cd_demo_sk#8266))
               :     :     :           +- Relation spark_catalog.m.customer_demographics[cd_demo_sk#8266,cd_gender#8267,cd_marital_status#8268,cd_education_status#8269,cd_purchase_estimate#8270,cd_credit_rating#8271,cd_dep_count#8272,cd_dep_employed_count#8273,cd_dep_college_count#8274] parquet
               :     :     +- Project [d_date_sk#24]
               :     :        +- Filter ((isnotnull(d_year#30) AND (d_year#30 = 2001)) AND isnotnull(d_date_sk#24))
               :     :           +- Relation spark_catalog.m.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet
               :     +- Project [i_item_sk#1271, i_item_id#1272]
               :        +- Filter isnotnull(i_item_sk#1271)
               :           +- Relation spark_catalog.m.item[i_item_sk#1271,i_item_id#1272,i_rec_start_date#1273,i_rec_end_date#1274,i_item_desc#1275,i_current_price#1276,i_wholesale_cost#1277,i_brand_id#1278,i_brand#1279,i_class_id#1280,i_class#1281,i_category_id#1282,i_category#1283,i_manufact_id#1284,i_manufact#1285,i_size#1286,i_formulation#1287,i_color#1288,i_units#1289,i_container#1290,i_manager_id#1291,i_product_name#1292] parquet
               +- Project [p_promo_sk#8275]
                  +- Filter (((p_channel_email#8284 = N) OR (p_channel_event#8289 = N)) AND isnotnull(p_promo_sk#8275))
                     +- Relation spark_catalog.m.promotion[p_promo_sk#8275,p_promo_id#8276,p_start_date_sk#8277,p_end_date_sk#8278,p_item_sk#8279,p_cost#8280,p_response_target#8281,p_promo_name#8282,p_channel_dmail#8283,p_channel_email#8284,p_channel_catalog#8285,p_channel_tv#8286,p_channel_radio#8287,p_channel_press#8288,p_channel_event#8289,p_channel_demo#8290,p_channel_details#8291,p_purpose#8292,p_discount_active#8293] parquet

== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[i_item_id#1272 ASC NULLS FIRST], output=[i_item_id#1272,agg1#8262,agg2#8263,agg3#8264,agg4#8265])
   +- HashAggregate(keys=[i_item_id#1272], functions=[avg(ss_quantity#1258), avg(ss_list_price#1260), avg(ss_coupon_amt#1267), avg(ss_sales_price#1261)], output=[i_item_id#1272, agg1#8262, agg2#8263, agg3#8264, agg4#8265])
      +- Exchange hashpartitioning(i_item_id#1272, 200), ENSURE_REQUIREMENTS, [plan_id=10258]
         +- HashAggregate(keys=[i_item_id#1272], functions=[partial_avg(ss_quantity#1258), partial_avg(ss_list_price#1260), partial_avg(ss_coupon_amt#1267), partial_avg(ss_sales_price#1261)], output=[i_item_id#1272, sum#8328, count#8329L, sum#8330, count#8331L, sum#8332, count#8333L, sum#8334, count#8335L])
            +- Project [ss_quantity#1258, ss_list_price#1260, ss_sales_price#1261, ss_coupon_amt#1267, i_item_id#1272]
               +- BroadcastHashJoin [ss_promo_sk#1256], [p_promo_sk#8275], Inner, BuildRight, false
                  :- Project [ss_promo_sk#1256, ss_quantity#1258, ss_list_price#1260, ss_sales_price#1261, ss_coupon_amt#1267, i_item_id#1272]
                  :  +- BroadcastHashJoin [ss_item_sk#1250], [i_item_sk#1271], Inner, BuildRight, false
                  :     :- Project [ss_item_sk#1250, ss_promo_sk#1256, ss_quantity#1258, ss_list_price#1260, ss_sales_price#1261, ss_coupon_amt#1267]
                  :     :  +- BroadcastHashJoin [ss_sold_date_sk#1248], [d_date_sk#24], Inner, BuildRight, false
                  :     :     :- Project [ss_sold_date_sk#1248, ss_item_sk#1250, ss_promo_sk#1256, ss_quantity#1258, ss_list_price#1260, ss_sales_price#1261, ss_coupon_amt#1267]
                  :     :     :  +- BroadcastHashJoin [ss_cdemo_sk#1252], [cd_demo_sk#8266], Inner, BuildRight, false
                  :     :     :     :- Filter (((isnotnull(ss_cdemo_sk#1252) AND isnotnull(ss_sold_date_sk#1248)) AND isnotnull(ss_item_sk#1250)) AND isnotnull(ss_promo_sk#1256))
                  :     :     :     :  +- FileScan parquet spark_catalog.m.store_sales[ss_sold_date_sk#1248,ss_item_sk#1250,ss_cdemo_sk#1252,ss_promo_sk#1256,ss_quantity#1258,ss_list_price#1260,ss_sales_price#1261,ss_coupon_amt#1267] Batched: true, DataFilters: [isnotnull(ss_cdemo_sk#1252), isnotnull(ss_sold_date_sk#1248), isnotnull(ss_item_sk#1250), isnotn..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_cdemo_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk), IsNotNull(ss_promo_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_cdemo_sk:int,ss_promo_sk:int,ss_quantity:int,ss_list...
                  :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=10241]
                  :     :     :        +- Project [cd_demo_sk#8266]
                  :     :     :           +- Filter ((((((isnotnull(cd_gender#8267) AND isnotnull(cd_marital_status#8268)) AND isnotnull(cd_education_status#8269)) AND (cd_gender#8267 = F)) AND (cd_marital_status#8268 = W)) AND (cd_education_status#8269 = College)) AND isnotnull(cd_demo_sk#8266))
                  :     :     :              +- FileScan parquet spark_catalog.m.customer_demographics[cd_demo_sk#8266,cd_gender#8267,cd_marital_status#8268,cd_education_status#8269] Batched: true, DataFilters: [isnotnull(cd_gender#8267), isnotnull(cd_marital_status#8268), isnotnull(cd_education_status#8269..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer_demograph..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_gender), IsNotNull(cd_marital_status), IsNotNull(cd_education_status), EqualTo(cd_g..., ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string>
                  :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=10245]
                  :     :        +- Project [d_date_sk#24]
                  :     :           +- Filter ((isnotnull(d_year#30) AND (d_year#30 = 2001)) AND isnotnull(d_date_sk#24))
                  :     :              +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#24,d_year#30] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 2001), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                  :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=10249]
                  :        +- Filter isnotnull(i_item_sk#1271)
                  :           +- FileScan parquet spark_catalog.m.item[i_item_sk#1271,i_item_id#1272] Batched: true, DataFilters: [isnotnull(i_item_sk#1271)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>
                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=10253]
                     +- Project [p_promo_sk#8275]
                        +- Filter (((p_channel_email#8284 = N) OR (p_channel_event#8289 = N)) AND isnotnull(p_promo_sk#8275))
                           +- FileScan parquet spark_catalog.m.promotion[p_promo_sk#8275,p_channel_email#8284,p_channel_event#8289] Batched: true, DataFilters: [((p_channel_email#8284 = N) OR (p_channel_event#8289 = N)), isnotnull(p_promo_sk#8275)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/promotion], PartitionFilters: [], PushedFilters: [Or(EqualTo(p_channel_email,N),EqualTo(p_channel_event,N)), IsNotNull(p_promo_sk)], ReadSchema: struct<p_promo_sk:int,p_channel_email:string,p_channel_event:string>
