AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[(sum_sales#48446 - avg_monthly_sales#48447) ASC NULLS FIRST,s_store_name#57 ASC NULLS FIRST], output=[i_category#1283,i_class#1281,i_brand#1279,s_store_name#57,s_company_name#69,d_moy#32,sum_sales#48446,avg_monthly_sales#48447])
   +- Project [i_category#1283, i_class#1281, i_brand#1279, s_store_name#57, s_company_name#69, d_moy#32, sum_sales#48446, avg_monthly_sales#48447]
      +- Filter CASE WHEN NOT (avg_monthly_sales#48447 = 0.0) THEN ((abs((sum_sales#48446 - avg_monthly_sales#48447)) / avg_monthly_sales#48447) > 0.1) END
         +- Window [avg(_w0#48451) windowspecdefinition(i_category#1283, i_brand#1279, s_store_name#57, s_company_name#69, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#48447], [i_category#1283, i_brand#1279, s_store_name#57, s_company_name#69]
            +- Sort [i_category#1283 ASC NULLS FIRST, i_brand#1279 ASC NULLS FIRST, s_store_name#57 ASC NULLS FIRST, s_company_name#69 ASC NULLS FIRST], false, 0
               +- Exchange hashpartitioning(i_category#1283, i_brand#1279, s_store_name#57, s_company_name#69, 200), ENSURE_REQUIREMENTS, [plan_id=171677]
                  +- HashAggregate(keys=[i_category#1283, i_class#1281, i_brand#1279, s_store_name#57, s_company_name#69, d_moy#32], functions=[sum(ss_sales_price#1261)], output=[i_category#1283, i_class#1281, i_brand#1279, s_store_name#57, s_company_name#69, d_moy#32, sum_sales#48446, _w0#48451])
                     +- Exchange hashpartitioning(i_category#1283, i_class#1281, i_brand#1279, s_store_name#57, s_company_name#69, d_moy#32, 200), ENSURE_REQUIREMENTS, [plan_id=171674]
                        +- HashAggregate(keys=[i_category#1283, i_class#1281, i_brand#1279, s_store_name#57, s_company_name#69, d_moy#32], functions=[partial_sum(ss_sales_price#1261)], output=[i_category#1283, i_class#1281, i_brand#1279, s_store_name#57, s_company_name#69, d_moy#32, sum#48485])
                           +- Project [i_brand#1279, i_class#1281, i_category#1283, ss_sales_price#1261, d_moy#32, s_store_name#57, s_company_name#69]
                              +- BroadcastHashJoin [ss_store_sk#1255], [s_store_sk#52], Inner, BuildRight, false
                                 :- Project [i_brand#1279, i_class#1281, i_category#1283, ss_store_sk#1255, ss_sales_price#1261, d_moy#32]
                                 :  +- BroadcastHashJoin [ss_sold_date_sk#1248], [d_date_sk#24], Inner, BuildRight, false
                                 :     :- Project [i_brand#1279, i_class#1281, i_category#1283, ss_sold_date_sk#1248, ss_store_sk#1255, ss_sales_price#1261]
                                 :     :  +- BroadcastHashJoin [i_item_sk#1271], [ss_item_sk#1250], Inner, BuildLeft, false
                                 :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=171661]
                                 :     :     :  +- Filter (((i_category#1283 IN (Women,Music,Children) AND i_class#1281 IN (dresses,classical,school-uniforms)) OR (i_category#1283 IN (Jewelry,Sports,Electronics) AND i_class#1281 IN (pendants,camping,musical))) AND isnotnull(i_item_sk#1271))
                                 :     :     :     +- FileScan parquet spark_catalog.m.item[i_item_sk#1271,i_brand#1279,i_class#1281,i_category#1283] Batched: true, DataFilters: [((i_category#1283 IN (Women,Music,Children) AND i_class#1281 IN (dresses,classical,school-unifor..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/item], PartitionFilters: [], PushedFilters: [Or(And(In(i_category, [Children,Music,Women]),In(i_class, [classical,dresses,school-uniforms])),..., ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string>
                                 :     :     +- Filter ((isnotnull(ss_item_sk#1250) AND isnotnull(ss_sold_date_sk#1248)) AND isnotnull(ss_store_sk#1255))
                                 :     :        +- FileScan parquet spark_catalog.m.store_sales[ss_sold_date_sk#1248,ss_item_sk#1250,ss_store_sk#1255,ss_sales_price#1261] Batched: true, DataFilters: [isnotnull(ss_item_sk#1250), isnotnull(ss_sold_date_sk#1248), isnotnull(ss_store_sk#1255)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_sales_price:double>
                                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=171665]
                                 :        +- Project [d_date_sk#24, d_moy#32]
                                 :           +- Filter ((isnotnull(d_year#30) AND (d_year#30 = 2002)) AND isnotnull(d_date_sk#24))
                                 :              +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 2002), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=171669]
                                    +- Filter isnotnull(s_store_sk#52)
                                       +- FileScan parquet spark_catalog.m.store[s_store_sk#52,s_store_name#57,s_company_name#69] Batched: true, DataFilters: [isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>
