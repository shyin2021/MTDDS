AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[total_cnt#41250L DESC NULLS LAST,i_item_desc#1275 ASC NULLS FIRST,w_warehouse_name#21222 ASC NULLS FIRST,d_week_seq#28 ASC NULLS FIRST], output=[i_item_desc#1275,w_warehouse_name#21222,d_week_seq#28,no_promo#41248L,promo#41249L,total_cnt#41250L])
   +- HashAggregate(keys=[i_item_desc#1275, w_warehouse_name#21222, d_week_seq#28], functions=[sum(CASE WHEN isnull(p_promo_sk#8275) THEN 1 ELSE 0 END), sum(CASE WHEN isnotnull(p_promo_sk#8275) THEN 1 ELSE 0 END), count(1)], output=[i_item_desc#1275, w_warehouse_name#21222, d_week_seq#28, no_promo#41248L, promo#41249L, total_cnt#41250L])
      +- Exchange hashpartitioning(i_item_desc#1275, w_warehouse_name#21222, d_week_seq#28, 200), ENSURE_REQUIREMENTS, [plan_id=140919]
         +- HashAggregate(keys=[i_item_desc#1275, w_warehouse_name#21222, d_week_seq#28], functions=[partial_sum(CASE WHEN isnull(p_promo_sk#8275) THEN 1 ELSE 0 END), partial_sum(CASE WHEN isnotnull(p_promo_sk#8275) THEN 1 ELSE 0 END), partial_count(1)], output=[i_item_desc#1275, w_warehouse_name#21222, d_week_seq#28, sum#41339L, sum#41340L, count#41341L])
            +- Project [w_warehouse_name#21222, i_item_desc#1275, d_week_seq#28, p_promo_sk#8275]
               +- BroadcastHashJoin [cs_item_sk#476, cs_order_number#478], [cr_item_sk#7813, cr_order_number#7827], LeftOuter, BuildRight, false
                  :- Project [cs_item_sk#476, cs_order_number#478, w_warehouse_name#21222, i_item_desc#1275, d_week_seq#28, p_promo_sk#8275]
                  :  +- BroadcastHashJoin [cs_promo_sk#477], [p_promo_sk#8275], LeftOuter, BuildRight, false
                  :     :- Project [cs_item_sk#476, cs_promo_sk#477, cs_order_number#478, w_warehouse_name#21222, i_item_desc#1275, d_week_seq#28]
                  :     :  +- BroadcastHashJoin [cs_ship_date_sk#463], [d_date_sk#41280], Inner, BuildRight, (cast(d_date#41282 as double) > (cast(d_date#26 as double) + 5.0)), false
                  :     :     :- Project [cs_ship_date_sk#463, cs_item_sk#476, cs_promo_sk#477, cs_order_number#478, w_warehouse_name#21222, i_item_desc#1275, d_date#26, d_week_seq#28]
                  :     :     :  +- BroadcastHashJoin [d_week_seq#28, inv_date_sk#21216], [d_week_seq#41256, d_date_sk#41252], Inner, BuildRight, false
                  :     :     :     :- Project [cs_ship_date_sk#463, cs_item_sk#476, cs_promo_sk#477, cs_order_number#478, inv_date_sk#21216, w_warehouse_name#21222, i_item_desc#1275, d_date#26, d_week_seq#28]
                  :     :     :     :  +- BroadcastHashJoin [cs_sold_date_sk#461], [d_date_sk#24], Inner, BuildRight, false
                  :     :     :     :     :- Project [cs_sold_date_sk#461, cs_ship_date_sk#463, cs_item_sk#476, cs_promo_sk#477, cs_order_number#478, inv_date_sk#21216, w_warehouse_name#21222, i_item_desc#1275]
                  :     :     :     :     :  +- BroadcastHashJoin [cs_bill_hdemo_sk#466], [hd_demo_sk#12110], Inner, BuildRight, false
                  :     :     :     :     :     :- Project [cs_sold_date_sk#461, cs_ship_date_sk#463, cs_bill_hdemo_sk#466, cs_item_sk#476, cs_promo_sk#477, cs_order_number#478, inv_date_sk#21216, w_warehouse_name#21222, i_item_desc#1275]
                  :     :     :     :     :     :  +- BroadcastHashJoin [cs_bill_cdemo_sk#465], [cd_demo_sk#8266], Inner, BuildRight, false
                  :     :     :     :     :     :     :- Project [cs_sold_date_sk#461, cs_ship_date_sk#463, cs_bill_cdemo_sk#465, cs_bill_hdemo_sk#466, cs_item_sk#476, cs_promo_sk#477, cs_order_number#478, inv_date_sk#21216, w_warehouse_name#21222, i_item_desc#1275]
                  :     :     :     :     :     :     :  +- BroadcastHashJoin [cs_item_sk#476], [i_item_sk#1271], Inner, BuildRight, false
                  :     :     :     :     :     :     :     :- Project [cs_sold_date_sk#461, cs_ship_date_sk#463, cs_bill_cdemo_sk#465, cs_bill_hdemo_sk#466, cs_item_sk#476, cs_promo_sk#477, cs_order_number#478, inv_date_sk#21216, w_warehouse_name#21222]
                  :     :     :     :     :     :     :     :  +- BroadcastHashJoin [inv_warehouse_sk#21218], [w_warehouse_sk#21220], Inner, BuildRight, false
                  :     :     :     :     :     :     :     :     :- Project [cs_sold_date_sk#461, cs_ship_date_sk#463, cs_bill_cdemo_sk#465, cs_bill_hdemo_sk#466, cs_item_sk#476, cs_promo_sk#477, cs_order_number#478, inv_date_sk#21216, inv_warehouse_sk#21218]
                  :     :     :     :     :     :     :     :     :  +- SortMergeJoin [cs_item_sk#476], [inv_item_sk#21217], Inner, (inv_quantity_on_hand#21219L < cast(cs_quantity#479 as bigint))
                  :     :     :     :     :     :     :     :     :     :- Sort [cs_item_sk#476 ASC NULLS FIRST], false, 0
                  :     :     :     :     :     :     :     :     :     :  +- Exchange hashpartitioning(cs_item_sk#476, 200), ENSURE_REQUIREMENTS, [plan_id=140875]
                  :     :     :     :     :     :     :     :     :     :     +- Filter (((((isnotnull(cs_quantity#479) AND isnotnull(cs_item_sk#476)) AND isnotnull(cs_bill_cdemo_sk#465)) AND isnotnull(cs_bill_hdemo_sk#466)) AND isnotnull(cs_sold_date_sk#461)) AND isnotnull(cs_ship_date_sk#463))
                  :     :     :     :     :     :     :     :     :     :        +- FileScan parquet spark_catalog.m.catalog_sales[cs_sold_date_sk#461,cs_ship_date_sk#463,cs_bill_cdemo_sk#465,cs_bill_hdemo_sk#466,cs_item_sk#476,cs_promo_sk#477,cs_order_number#478,cs_quantity#479] Batched: true, DataFilters: [isnotnull(cs_quantity#479), isnotnull(cs_item_sk#476), isnotnull(cs_bill_cdemo_sk#465), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_quantity), IsNotNull(cs_item_sk), IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_bill_hd..., ReadSchema: struct<cs_sold_date_sk:int,cs_ship_date_sk:int,cs_bill_cdemo_sk:int,cs_bill_hdemo_sk:int,cs_item_...
                  :     :     :     :     :     :     :     :     :     +- Sort [inv_item_sk#21217 ASC NULLS FIRST], false, 0
                  :     :     :     :     :     :     :     :     :        +- Exchange hashpartitioning(inv_item_sk#21217, 200), ENSURE_REQUIREMENTS, [plan_id=140876]
                  :     :     :     :     :     :     :     :     :           +- Filter (((isnotnull(inv_quantity_on_hand#21219L) AND isnotnull(inv_item_sk#21217)) AND isnotnull(inv_warehouse_sk#21218)) AND isnotnull(inv_date_sk#21216))
                  :     :     :     :     :     :     :     :     :              +- FileScan parquet spark_catalog.m.inventory[inv_date_sk#21216,inv_item_sk#21217,inv_warehouse_sk#21218,inv_quantity_on_hand#21219L] Batched: true, DataFilters: [isnotnull(inv_quantity_on_hand#21219L), isnotnull(inv_item_sk#21217), isnotnull(inv_warehouse_sk..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/inventory], PartitionFilters: [], PushedFilters: [IsNotNull(inv_quantity_on_hand), IsNotNull(inv_item_sk), IsNotNull(inv_warehouse_sk), IsNotNull(..., ReadSchema: struct<inv_date_sk:int,inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:bigint>
                  :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=140882]
                  :     :     :     :     :     :     :     :        +- Filter isnotnull(w_warehouse_sk#21220)
                  :     :     :     :     :     :     :     :           +- FileScan parquet spark_catalog.m.warehouse[w_warehouse_sk#21220,w_warehouse_name#21222] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#21220)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/warehouse], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>
                  :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=140886]
                  :     :     :     :     :     :     :        +- Filter isnotnull(i_item_sk#1271)
                  :     :     :     :     :     :     :           +- FileScan parquet spark_catalog.m.item[i_item_sk#1271,i_item_desc#1275] Batched: true, DataFilters: [isnotnull(i_item_sk#1271)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_desc:string>
                  :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=140890]
                  :     :     :     :     :     :        +- Project [cd_demo_sk#8266]
                  :     :     :     :     :     :           +- Filter ((isnotnull(cd_marital_status#8268) AND (cd_marital_status#8268 = M)) AND isnotnull(cd_demo_sk#8266))
                  :     :     :     :     :     :              +- FileScan parquet spark_catalog.m.customer_demographics[cd_demo_sk#8266,cd_marital_status#8268] Batched: true, DataFilters: [isnotnull(cd_marital_status#8268), (cd_marital_status#8268 = M), isnotnull(cd_demo_sk#8266)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer_demograph..., PartitionFilters: [], PushedFilters: [IsNotNull(cd_marital_status), EqualTo(cd_marital_status,M), IsNotNull(cd_demo_sk)], ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string>
                  :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=140894]
                  :     :     :     :     :        +- Project [hd_demo_sk#12110]
                  :     :     :     :     :           +- Filter ((isnotnull(hd_buy_potential#12112) AND (hd_buy_potential#12112 = 501-1000)) AND isnotnull(hd_demo_sk#12110))
                  :     :     :     :     :              +- FileScan parquet spark_catalog.m.household_demographics[hd_demo_sk#12110,hd_buy_potential#12112] Batched: true, DataFilters: [isnotnull(hd_buy_potential#12112), (hd_buy_potential#12112 = 501-1000), isnotnull(hd_demo_sk#121..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/household_demograp..., PartitionFilters: [], PushedFilters: [IsNotNull(hd_buy_potential), EqualTo(hd_buy_potential,501-1000), IsNotNull(hd_demo_sk)], ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string>
                  :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=140898]
                  :     :     :     :        +- Project [d_date_sk#24, d_date#26, d_week_seq#28]
                  :     :     :     :           +- Filter ((((isnotnull(d_year#30) AND (d_year#30 = 2001)) AND isnotnull(d_date_sk#24)) AND isnotnull(d_week_seq#28)) AND isnotnull(d_date#26))
                  :     :     :     :              +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#24,d_date#26,d_week_seq#28,d_year#30] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 2001), isnotnull(d_date_sk#24), isnotnull(d_week_seq#28), isn..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk), IsNotNull(d_week_seq), IsNotNull(..., ReadSchema: struct<d_date_sk:int,d_date:string,d_week_seq:int,d_year:int>
                  :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[1, int, false] as bigint), 32) | (cast(input[0, int, false] as bigint) & 4294967295))),false), [plan_id=140902]
                  :     :     :        +- Filter (isnotnull(d_week_seq#41256) AND isnotnull(d_date_sk#41252))
                  :     :     :           +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#41252,d_week_seq#41256] Batched: true, DataFilters: [isnotnull(d_week_seq#41256), isnotnull(d_date_sk#41252)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_week_seq:int>
                  :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=140906]
                  :     :        +- Filter (isnotnull(d_date#41282) AND isnotnull(d_date_sk#41280))
                  :     :           +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#41280,d_date#41282] Batched: true, DataFilters: [isnotnull(d_date#41282), isnotnull(d_date_sk#41280)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:string>
                  :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=140910]
                  :        +- Filter isnotnull(p_promo_sk#8275)
                  :           +- FileScan parquet spark_catalog.m.promotion[p_promo_sk#8275] Batched: true, DataFilters: [isnotnull(p_promo_sk#8275)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/promotion], PartitionFilters: [], PushedFilters: [IsNotNull(p_promo_sk)], ReadSchema: struct<p_promo_sk:int>
                  +- BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[0, int, false] as bigint), 32) | (cast(input[1, int, false] as bigint) & 4294967295))),false), [plan_id=140914]
                     +- Filter (isnotnull(cr_item_sk#7813) AND isnotnull(cr_order_number#7827))
                        +- FileScan parquet spark_catalog.m.catalog_returns[cr_item_sk#7813,cr_order_number#7827] Batched: true, DataFilters: [isnotnull(cr_item_sk#7813), isnotnull(cr_order_number#7827)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/catalog_returns], PartitionFilters: [], PushedFilters: [IsNotNull(cr_item_sk), IsNotNull(cr_order_number)], ReadSchema: struct<cr_item_sk:int,cr_order_number:int>
