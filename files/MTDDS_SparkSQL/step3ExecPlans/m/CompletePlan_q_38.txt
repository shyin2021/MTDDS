== Parsed Logical Plan ==
'GlobalLimit 100
+- 'LocalLimit 100
   +- 'Project [unresolvedalias('count(1), None)]
      +- 'SubqueryAlias hot_cust
         +- 'Intersect false
            :- 'Intersect false
            :  :- 'Distinct
            :  :  +- 'Project ['c_last_name, 'c_first_name, 'd_date]
            :  :     +- 'Filter ((('store_sales.ss_sold_date_sk = 'date_dim.d_date_sk) AND ('store_sales.ss_customer_sk = 'customer.c_customer_sk)) AND (('d_month_seq >= 1179) AND ('d_month_seq <= (1179 + 11))))
            :  :        +- 'Join Inner
            :  :           :- 'Join Inner
            :  :           :  :- 'UnresolvedRelation [store_sales], [], false
            :  :           :  +- 'UnresolvedRelation [date_dim], [], false
            :  :           +- 'UnresolvedRelation [customer], [], false
            :  +- 'Distinct
            :     +- 'Project ['c_last_name, 'c_first_name, 'd_date]
            :        +- 'Filter ((('catalog_sales.cs_sold_date_sk = 'date_dim.d_date_sk) AND ('catalog_sales.cs_bill_customer_sk = 'customer.c_customer_sk)) AND (('d_month_seq >= 1179) AND ('d_month_seq <= (1179 + 11))))
            :           +- 'Join Inner
            :              :- 'Join Inner
            :              :  :- 'UnresolvedRelation [catalog_sales], [], false
            :              :  +- 'UnresolvedRelation [date_dim], [], false
            :              +- 'UnresolvedRelation [customer], [], false
            +- 'Distinct
               +- 'Project ['c_last_name, 'c_first_name, 'd_date]
                  +- 'Filter ((('web_sales.ws_sold_date_sk = 'date_dim.d_date_sk) AND ('web_sales.ws_bill_customer_sk = 'customer.c_customer_sk)) AND (('d_month_seq >= 1179) AND ('d_month_seq <= (1179 + 11))))
                     +- 'Join Inner
                        :- 'Join Inner
                        :  :- 'UnresolvedRelation [web_sales], [], false
                        :  +- 'UnresolvedRelation [date_dim], [], false
                        +- 'UnresolvedRelation [customer], [], false

== Analyzed Logical Plan ==
count(1): bigint
GlobalLimit 100
+- LocalLimit 100
   +- Aggregate [count(1) AS count(1)#29887L]
      +- SubqueryAlias hot_cust
         +- Intersect false
            :- Intersect false
            :  :- Distinct
            :  :  +- Project [c_last_name#90, c_first_name#89, d_date#26]
            :  :     +- Filter (((ss_sold_date_sk#1248 = d_date_sk#24) AND (ss_customer_sk#1251 = c_customer_sk#81)) AND ((d_month_seq#27 >= 1179) AND (d_month_seq#27 <= (1179 + 11))))
            :  :        +- Join Inner
            :  :           :- Join Inner
            :  :           :  :- SubqueryAlias spark_catalog.m.store_sales
            :  :           :  :  +- Relation spark_catalog.m.store_sales[ss_sold_date_sk#1248,ss_sold_time_sk#1249,ss_item_sk#1250,ss_customer_sk#1251,ss_cdemo_sk#1252,ss_hdemo_sk#1253,ss_addr_sk#1254,ss_store_sk#1255,ss_promo_sk#1256,ss_ticket_number#1257,ss_quantity#1258,ss_wholesale_cost#1259,ss_list_price#1260,ss_sales_price#1261,ss_ext_discount_amt#1262,ss_ext_sales_price#1263,ss_ext_wholesale_cost#1264,ss_ext_list_price#1265,ss_ext_tax#1266,ss_coupon_amt#1267,ss_net_paid#1268,ss_net_paid_inc_tax#1269,ss_net_profit#1270] parquet
            :  :           :  +- SubqueryAlias spark_catalog.m.date_dim
            :  :           :     +- Relation spark_catalog.m.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet
            :  :           +- SubqueryAlias spark_catalog.m.customer
            :  :              +- Relation spark_catalog.m.customer[c_customer_sk#81,c_customer_id#82,c_current_cdemo_sk#83,c_current_hdemo_sk#84,c_current_addr_sk#85,c_first_shipto_date_sk#86,c_first_sales_date_sk#87,c_salutation#88,c_first_name#89,c_last_name#90,c_preferred_cust_flag#91,c_birth_day#92,c_birth_month#93,c_birth_year#94,c_birth_country#95,c_login#96,c_email_address#97,c_last_review_date#98] parquet
            :  +- Distinct
            :     +- Project [c_last_name#29832, c_first_name#29831, d_date#29797]
            :        +- Filter (((cs_sold_date_sk#461 = d_date_sk#29795) AND (cs_bill_customer_sk#464 = c_customer_sk#29823)) AND ((d_month_seq#29798 >= 1179) AND (d_month_seq#29798 <= (1179 + 11))))
            :           +- Join Inner
            :              :- Join Inner
            :              :  :- SubqueryAlias spark_catalog.m.catalog_sales
            :              :  :  +- Relation spark_catalog.m.catalog_sales[cs_sold_date_sk#461,cs_sold_time_sk#462,cs_ship_date_sk#463,cs_bill_customer_sk#464,cs_bill_cdemo_sk#465,cs_bill_hdemo_sk#466,cs_bill_addr_sk#467,cs_ship_customer_sk#468,cs_ship_cdemo_sk#469,cs_ship_hdemo_sk#470,cs_ship_addr_sk#471,cs_call_center_sk#472,cs_catalog_page_sk#473,cs_ship_mode_sk#474,cs_warehouse_sk#475,cs_item_sk#476,cs_promo_sk#477,cs_order_number#478,cs_quantity#479,cs_wholesale_cost#480,cs_list_price#481,cs_sales_price#482,cs_ext_discount_amt#483,cs_ext_sales_price#484,... 10 more fields] parquet
            :              :  +- SubqueryAlias spark_catalog.m.date_dim
            :              :     +- Relation spark_catalog.m.date_dim[d_date_sk#29795,d_date_id#29796,d_date#29797,d_month_seq#29798,d_week_seq#29799,d_quarter_seq#29800,d_year#29801,d_dow#29802,d_moy#29803,d_dom#29804,d_qoy#29805,d_fy_year#29806,d_fy_quarter_seq#29807,d_fy_week_seq#29808,d_day_name#29809,d_quarter_name#29810,d_holiday#29811,d_weekend#29812,d_following_holiday#29813,d_first_dom#29814,d_last_dom#29815,d_same_day_ly#29816,d_same_day_lq#29817,d_current_day#29818,... 4 more fields] parquet
            :              +- SubqueryAlias spark_catalog.m.customer
            :                 +- Relation spark_catalog.m.customer[c_customer_sk#29823,c_customer_id#29824,c_current_cdemo_sk#29825,c_current_hdemo_sk#29826,c_current_addr_sk#29827,c_first_shipto_date_sk#29828,c_first_sales_date_sk#29829,c_salutation#29830,c_first_name#29831,c_last_name#29832,c_preferred_cust_flag#29833,c_birth_day#29834,c_birth_month#29835,c_birth_year#29836,c_birth_country#29837,c_login#29838,c_email_address#29839,c_last_review_date#29840] parquet
            +- Distinct
               +- Project [c_last_name#29878, c_first_name#29877, d_date#29843]
                  +- Filter (((ws_sold_date_sk#427 = d_date_sk#29841) AND (ws_bill_customer_sk#431 = c_customer_sk#29869)) AND ((d_month_seq#29844 >= 1179) AND (d_month_seq#29844 <= (1179 + 11))))
                     +- Join Inner
                        :- Join Inner
                        :  :- SubqueryAlias spark_catalog.m.web_sales
                        :  :  +- Relation spark_catalog.m.web_sales[ws_sold_date_sk#427,ws_sold_time_sk#428,ws_ship_date_sk#429,ws_item_sk#430,ws_bill_customer_sk#431,ws_bill_cdemo_sk#432,ws_bill_hdemo_sk#433,ws_bill_addr_sk#434,ws_ship_customer_sk#435,ws_ship_cdemo_sk#436,ws_ship_hdemo_sk#437,ws_ship_addr_sk#438,ws_web_page_sk#439,ws_web_site_sk#440,ws_ship_mode_sk#441,ws_warehouse_sk#442,ws_promo_sk#443,ws_order_number#444,ws_quantity#445,ws_wholesale_cost#446,ws_list_price#447,ws_sales_price#448,ws_ext_discount_amt#449,ws_ext_sales_price#450,... 10 more fields] parquet
                        :  +- SubqueryAlias spark_catalog.m.date_dim
                        :     +- Relation spark_catalog.m.date_dim[d_date_sk#29841,d_date_id#29842,d_date#29843,d_month_seq#29844,d_week_seq#29845,d_quarter_seq#29846,d_year#29847,d_dow#29848,d_moy#29849,d_dom#29850,d_qoy#29851,d_fy_year#29852,d_fy_quarter_seq#29853,d_fy_week_seq#29854,d_day_name#29855,d_quarter_name#29856,d_holiday#29857,d_weekend#29858,d_following_holiday#29859,d_first_dom#29860,d_last_dom#29861,d_same_day_ly#29862,d_same_day_lq#29863,d_current_day#29864,... 4 more fields] parquet
                        +- SubqueryAlias spark_catalog.m.customer
                           +- Relation spark_catalog.m.customer[c_customer_sk#29869,c_customer_id#29870,c_current_cdemo_sk#29871,c_current_hdemo_sk#29872,c_current_addr_sk#29873,c_first_shipto_date_sk#29874,c_first_sales_date_sk#29875,c_salutation#29876,c_first_name#29877,c_last_name#29878,c_preferred_cust_flag#29879,c_birth_day#29880,c_birth_month#29881,c_birth_year#29882,c_birth_country#29883,c_login#29884,c_email_address#29885,c_last_review_date#29886] parquet

== Optimized Logical Plan ==
Aggregate [count(1) AS count(1)#29887L]
+- Project
   +- Join LeftSemi, (((c_last_name#90 <=> c_last_name#29878) AND (c_first_name#89 <=> c_first_name#29877)) AND (d_date#26 <=> d_date#29843))
      :- Join LeftSemi, (((c_last_name#90 <=> c_last_name#29832) AND (c_first_name#89 <=> c_first_name#29831)) AND (d_date#26 <=> d_date#29797))
      :  :- Aggregate [c_last_name#90, c_first_name#89, d_date#26], [c_last_name#90, c_first_name#89, d_date#26]
      :  :  +- Project [c_last_name#90, c_first_name#89, d_date#26]
      :  :     +- Join Inner, (ss_customer_sk#1251 = c_customer_sk#81)
      :  :        :- Project [ss_customer_sk#1251, d_date#26]
      :  :        :  +- Join Inner, (ss_sold_date_sk#1248 = d_date_sk#24)
      :  :        :     :- Project [ss_sold_date_sk#1248, ss_customer_sk#1251]
      :  :        :     :  +- Filter (isnotnull(ss_sold_date_sk#1248) AND isnotnull(ss_customer_sk#1251))
      :  :        :     :     +- Relation spark_catalog.m.store_sales[ss_sold_date_sk#1248,ss_sold_time_sk#1249,ss_item_sk#1250,ss_customer_sk#1251,ss_cdemo_sk#1252,ss_hdemo_sk#1253,ss_addr_sk#1254,ss_store_sk#1255,ss_promo_sk#1256,ss_ticket_number#1257,ss_quantity#1258,ss_wholesale_cost#1259,ss_list_price#1260,ss_sales_price#1261,ss_ext_discount_amt#1262,ss_ext_sales_price#1263,ss_ext_wholesale_cost#1264,ss_ext_list_price#1265,ss_ext_tax#1266,ss_coupon_amt#1267,ss_net_paid#1268,ss_net_paid_inc_tax#1269,ss_net_profit#1270] parquet
      :  :        :     +- Project [d_date_sk#24, d_date#26]
      :  :        :        +- Filter ((isnotnull(d_month_seq#27) AND ((d_month_seq#27 >= 1179) AND (d_month_seq#27 <= 1190))) AND isnotnull(d_date_sk#24))
      :  :        :           +- Relation spark_catalog.m.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet
      :  :        +- Project [c_customer_sk#81, c_first_name#89, c_last_name#90]
      :  :           +- Filter isnotnull(c_customer_sk#81)
      :  :              +- Relation spark_catalog.m.customer[c_customer_sk#81,c_customer_id#82,c_current_cdemo_sk#83,c_current_hdemo_sk#84,c_current_addr_sk#85,c_first_shipto_date_sk#86,c_first_sales_date_sk#87,c_salutation#88,c_first_name#89,c_last_name#90,c_preferred_cust_flag#91,c_birth_day#92,c_birth_month#93,c_birth_year#94,c_birth_country#95,c_login#96,c_email_address#97,c_last_review_date#98] parquet
      :  +- Aggregate [c_last_name#29832, c_first_name#29831, d_date#29797], [c_last_name#29832, c_first_name#29831, d_date#29797]
      :     +- Project [c_last_name#29832, c_first_name#29831, d_date#29797]
      :        +- Join Inner, (cs_bill_customer_sk#464 = c_customer_sk#29823)
      :           :- Project [cs_bill_customer_sk#464, d_date#29797]
      :           :  +- Join Inner, (cs_sold_date_sk#461 = d_date_sk#29795)
      :           :     :- Project [cs_sold_date_sk#461, cs_bill_customer_sk#464]
      :           :     :  +- Filter (isnotnull(cs_sold_date_sk#461) AND isnotnull(cs_bill_customer_sk#464))
      :           :     :     +- Relation spark_catalog.m.catalog_sales[cs_sold_date_sk#461,cs_sold_time_sk#462,cs_ship_date_sk#463,cs_bill_customer_sk#464,cs_bill_cdemo_sk#465,cs_bill_hdemo_sk#466,cs_bill_addr_sk#467,cs_ship_customer_sk#468,cs_ship_cdemo_sk#469,cs_ship_hdemo_sk#470,cs_ship_addr_sk#471,cs_call_center_sk#472,cs_catalog_page_sk#473,cs_ship_mode_sk#474,cs_warehouse_sk#475,cs_item_sk#476,cs_promo_sk#477,cs_order_number#478,cs_quantity#479,cs_wholesale_cost#480,cs_list_price#481,cs_sales_price#482,cs_ext_discount_amt#483,cs_ext_sales_price#484,... 10 more fields] parquet
      :           :     +- Project [d_date_sk#29795, d_date#29797]
      :           :        +- Filter ((isnotnull(d_month_seq#29798) AND ((d_month_seq#29798 >= 1179) AND (d_month_seq#29798 <= 1190))) AND isnotnull(d_date_sk#29795))
      :           :           +- Relation spark_catalog.m.date_dim[d_date_sk#29795,d_date_id#29796,d_date#29797,d_month_seq#29798,d_week_seq#29799,d_quarter_seq#29800,d_year#29801,d_dow#29802,d_moy#29803,d_dom#29804,d_qoy#29805,d_fy_year#29806,d_fy_quarter_seq#29807,d_fy_week_seq#29808,d_day_name#29809,d_quarter_name#29810,d_holiday#29811,d_weekend#29812,d_following_holiday#29813,d_first_dom#29814,d_last_dom#29815,d_same_day_ly#29816,d_same_day_lq#29817,d_current_day#29818,... 4 more fields] parquet
      :           +- Project [c_customer_sk#29823, c_first_name#29831, c_last_name#29832]
      :              +- Filter isnotnull(c_customer_sk#29823)
      :                 +- Relation spark_catalog.m.customer[c_customer_sk#29823,c_customer_id#29824,c_current_cdemo_sk#29825,c_current_hdemo_sk#29826,c_current_addr_sk#29827,c_first_shipto_date_sk#29828,c_first_sales_date_sk#29829,c_salutation#29830,c_first_name#29831,c_last_name#29832,c_preferred_cust_flag#29833,c_birth_day#29834,c_birth_month#29835,c_birth_year#29836,c_birth_country#29837,c_login#29838,c_email_address#29839,c_last_review_date#29840] parquet
      +- Aggregate [c_last_name#29878, c_first_name#29877, d_date#29843], [c_last_name#29878, c_first_name#29877, d_date#29843]
         +- Project [c_last_name#29878, c_first_name#29877, d_date#29843]
            +- Join Inner, (ws_bill_customer_sk#431 = c_customer_sk#29869)
               :- Project [ws_bill_customer_sk#431, d_date#29843]
               :  +- Join Inner, (ws_sold_date_sk#427 = d_date_sk#29841)
               :     :- Project [ws_sold_date_sk#427, ws_bill_customer_sk#431]
               :     :  +- Filter (isnotnull(ws_sold_date_sk#427) AND isnotnull(ws_bill_customer_sk#431))
               :     :     +- Relation spark_catalog.m.web_sales[ws_sold_date_sk#427,ws_sold_time_sk#428,ws_ship_date_sk#429,ws_item_sk#430,ws_bill_customer_sk#431,ws_bill_cdemo_sk#432,ws_bill_hdemo_sk#433,ws_bill_addr_sk#434,ws_ship_customer_sk#435,ws_ship_cdemo_sk#436,ws_ship_hdemo_sk#437,ws_ship_addr_sk#438,ws_web_page_sk#439,ws_web_site_sk#440,ws_ship_mode_sk#441,ws_warehouse_sk#442,ws_promo_sk#443,ws_order_number#444,ws_quantity#445,ws_wholesale_cost#446,ws_list_price#447,ws_sales_price#448,ws_ext_discount_amt#449,ws_ext_sales_price#450,... 10 more fields] parquet
               :     +- Project [d_date_sk#29841, d_date#29843]
               :        +- Filter ((isnotnull(d_month_seq#29844) AND ((d_month_seq#29844 >= 1179) AND (d_month_seq#29844 <= 1190))) AND isnotnull(d_date_sk#29841))
               :           +- Relation spark_catalog.m.date_dim[d_date_sk#29841,d_date_id#29842,d_date#29843,d_month_seq#29844,d_week_seq#29845,d_quarter_seq#29846,d_year#29847,d_dow#29848,d_moy#29849,d_dom#29850,d_qoy#29851,d_fy_year#29852,d_fy_quarter_seq#29853,d_fy_week_seq#29854,d_day_name#29855,d_quarter_name#29856,d_holiday#29857,d_weekend#29858,d_following_holiday#29859,d_first_dom#29860,d_last_dom#29861,d_same_day_ly#29862,d_same_day_lq#29863,d_current_day#29864,... 4 more fields] parquet
               +- Project [c_customer_sk#29869, c_first_name#29877, c_last_name#29878]
                  +- Filter isnotnull(c_customer_sk#29869)
                     +- Relation spark_catalog.m.customer[c_customer_sk#29869,c_customer_id#29870,c_current_cdemo_sk#29871,c_current_hdemo_sk#29872,c_current_addr_sk#29873,c_first_shipto_date_sk#29874,c_first_sales_date_sk#29875,c_salutation#29876,c_first_name#29877,c_last_name#29878,c_preferred_cust_flag#29879,c_birth_day#29880,c_birth_month#29881,c_birth_year#29882,c_birth_country#29883,c_login#29884,c_email_address#29885,c_last_review_date#29886] parquet

== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- HashAggregate(keys=[], functions=[count(1)], output=[count(1)#29887L])
   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=87949]
      +- HashAggregate(keys=[], functions=[partial_count(1)], output=[count#29897L])
         +- Project
            +- SortMergeJoin [coalesce(c_last_name#90, ), isnull(c_last_name#90), coalesce(c_first_name#89, ), isnull(c_first_name#89), coalesce(d_date#26, ), isnull(d_date#26)], [coalesce(c_last_name#29878, ), isnull(c_last_name#29878), coalesce(c_first_name#29877, ), isnull(c_first_name#29877), coalesce(d_date#29843, ), isnull(d_date#29843)], LeftSemi
               :- SortMergeJoin [coalesce(c_last_name#90, ), isnull(c_last_name#90), coalesce(c_first_name#89, ), isnull(c_first_name#89), coalesce(d_date#26, ), isnull(d_date#26)], [coalesce(c_last_name#29832, ), isnull(c_last_name#29832), coalesce(c_first_name#29831, ), isnull(c_first_name#29831), coalesce(d_date#29797, ), isnull(d_date#29797)], LeftSemi
               :  :- Sort [coalesce(c_last_name#90, ) ASC NULLS FIRST, isnull(c_last_name#90) ASC NULLS FIRST, coalesce(c_first_name#89, ) ASC NULLS FIRST, isnull(c_first_name#89) ASC NULLS FIRST, coalesce(d_date#26, ) ASC NULLS FIRST, isnull(d_date#26) ASC NULLS FIRST], false, 0
               :  :  +- Exchange hashpartitioning(coalesce(c_last_name#90, ), isnull(c_last_name#90), coalesce(c_first_name#89, ), isnull(c_first_name#89), coalesce(d_date#26, ), isnull(d_date#26), 200), ENSURE_REQUIREMENTS, [plan_id=87925]
               :  :     +- HashAggregate(keys=[c_last_name#90, c_first_name#89, d_date#26], functions=[], output=[c_last_name#90, c_first_name#89, d_date#26])
               :  :        +- Exchange hashpartitioning(c_last_name#90, c_first_name#89, d_date#26, 200), ENSURE_REQUIREMENTS, [plan_id=87910]
               :  :           +- HashAggregate(keys=[c_last_name#90, c_first_name#89, d_date#26], functions=[], output=[c_last_name#90, c_first_name#89, d_date#26])
               :  :              +- Project [c_last_name#90, c_first_name#89, d_date#26]
               :  :                 +- BroadcastHashJoin [ss_customer_sk#1251], [c_customer_sk#81], Inner, BuildRight, false
               :  :                    :- Project [ss_customer_sk#1251, d_date#26]
               :  :                    :  +- BroadcastHashJoin [ss_sold_date_sk#1248], [d_date_sk#24], Inner, BuildRight, false
               :  :                    :     :- Filter (isnotnull(ss_sold_date_sk#1248) AND isnotnull(ss_customer_sk#1251))
               :  :                    :     :  +- FileScan parquet spark_catalog.m.store_sales[ss_sold_date_sk#1248,ss_customer_sk#1251] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#1248), isnotnull(ss_customer_sk#1251)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int>
               :  :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=87901]
               :  :                    :        +- Project [d_date_sk#24, d_date#26]
               :  :                    :           +- Filter (((isnotnull(d_month_seq#27) AND (d_month_seq#27 >= 1179)) AND (d_month_seq#27 <= 1190)) AND isnotnull(d_date_sk#24))
               :  :                    :              +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#24,d_date#26,d_month_seq#27] Batched: true, DataFilters: [isnotnull(d_month_seq#27), (d_month_seq#27 >= 1179), (d_month_seq#27 <= 1190), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1179), LessThanOrEqual(d_month_seq,1190),..., ReadSchema: struct<d_date_sk:int,d_date:string,d_month_seq:int>
               :  :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=87905]
               :  :                       +- Filter isnotnull(c_customer_sk#81)
               :  :                          +- FileScan parquet spark_catalog.m.customer[c_customer_sk#81,c_first_name#89,c_last_name#90] Batched: true, DataFilters: [isnotnull(c_customer_sk#81)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>
               :  +- Sort [coalesce(c_last_name#29832, ) ASC NULLS FIRST, isnull(c_last_name#29832) ASC NULLS FIRST, coalesce(c_first_name#29831, ) ASC NULLS FIRST, isnull(c_first_name#29831) ASC NULLS FIRST, coalesce(d_date#29797, ) ASC NULLS FIRST, isnull(d_date#29797) ASC NULLS FIRST], false, 0
               :     +- Exchange hashpartitioning(coalesce(c_last_name#29832, ), isnull(c_last_name#29832), coalesce(c_first_name#29831, ), isnull(c_first_name#29831), coalesce(d_date#29797, ), isnull(d_date#29797), 200), ENSURE_REQUIREMENTS, [plan_id=87926]
               :        +- HashAggregate(keys=[c_last_name#29832, c_first_name#29831, d_date#29797], functions=[], output=[c_last_name#29832, c_first_name#29831, d_date#29797])
               :           +- Exchange hashpartitioning(c_last_name#29832, c_first_name#29831, d_date#29797, 200), ENSURE_REQUIREMENTS, [plan_id=87921]
               :              +- HashAggregate(keys=[c_last_name#29832, c_first_name#29831, d_date#29797], functions=[], output=[c_last_name#29832, c_first_name#29831, d_date#29797])
               :                 +- Project [c_last_name#29832, c_first_name#29831, d_date#29797]
               :                    +- BroadcastHashJoin [cs_bill_customer_sk#464], [c_customer_sk#29823], Inner, BuildRight, false
               :                       :- Project [cs_bill_customer_sk#464, d_date#29797]
               :                       :  +- BroadcastHashJoin [cs_sold_date_sk#461], [d_date_sk#29795], Inner, BuildRight, false
               :                       :     :- Filter (isnotnull(cs_sold_date_sk#461) AND isnotnull(cs_bill_customer_sk#464))
               :                       :     :  +- FileScan parquet spark_catalog.m.catalog_sales[cs_sold_date_sk#461,cs_bill_customer_sk#464] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#461), isnotnull(cs_bill_customer_sk#464)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int>
               :                       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=87912]
               :                       :        +- Project [d_date_sk#29795, d_date#29797]
               :                       :           +- Filter (((isnotnull(d_month_seq#29798) AND (d_month_seq#29798 >= 1179)) AND (d_month_seq#29798 <= 1190)) AND isnotnull(d_date_sk#29795))
               :                       :              +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#29795,d_date#29797,d_month_seq#29798] Batched: true, DataFilters: [isnotnull(d_month_seq#29798), (d_month_seq#29798 >= 1179), (d_month_seq#29798 <= 1190), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1179), LessThanOrEqual(d_month_seq,1190),..., ReadSchema: struct<d_date_sk:int,d_date:string,d_month_seq:int>
               :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=87916]
               :                          +- Filter isnotnull(c_customer_sk#29823)
               :                             +- FileScan parquet spark_catalog.m.customer[c_customer_sk#29823,c_first_name#29831,c_last_name#29832] Batched: true, DataFilters: [isnotnull(c_customer_sk#29823)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>
               +- Sort [coalesce(c_last_name#29878, ) ASC NULLS FIRST, isnull(c_last_name#29878) ASC NULLS FIRST, coalesce(c_first_name#29877, ) ASC NULLS FIRST, isnull(c_first_name#29877) ASC NULLS FIRST, coalesce(d_date#29843, ) ASC NULLS FIRST, isnull(d_date#29843) ASC NULLS FIRST], false, 0
                  +- Exchange hashpartitioning(coalesce(c_last_name#29878, ), isnull(c_last_name#29878), coalesce(c_first_name#29877, ), isnull(c_first_name#29877), coalesce(d_date#29843, ), isnull(d_date#29843), 200), ENSURE_REQUIREMENTS, [plan_id=87943]
                     +- HashAggregate(keys=[c_last_name#29878, c_first_name#29877, d_date#29843], functions=[], output=[c_last_name#29878, c_first_name#29877, d_date#29843])
                        +- Exchange hashpartitioning(c_last_name#29878, c_first_name#29877, d_date#29843, 200), ENSURE_REQUIREMENTS, [plan_id=87939]
                           +- HashAggregate(keys=[c_last_name#29878, c_first_name#29877, d_date#29843], functions=[], output=[c_last_name#29878, c_first_name#29877, d_date#29843])
                              +- Project [c_last_name#29878, c_first_name#29877, d_date#29843]
                                 +- BroadcastHashJoin [ws_bill_customer_sk#431], [c_customer_sk#29869], Inner, BuildRight, false
                                    :- Project [ws_bill_customer_sk#431, d_date#29843]
                                    :  +- BroadcastHashJoin [ws_sold_date_sk#427], [d_date_sk#29841], Inner, BuildRight, false
                                    :     :- Filter (isnotnull(ws_sold_date_sk#427) AND isnotnull(ws_bill_customer_sk#431))
                                    :     :  +- FileScan parquet spark_catalog.m.web_sales[ws_sold_date_sk#427,ws_bill_customer_sk#431] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#427), isnotnull(ws_bill_customer_sk#431)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int>
                                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=87930]
                                    :        +- Project [d_date_sk#29841, d_date#29843]
                                    :           +- Filter (((isnotnull(d_month_seq#29844) AND (d_month_seq#29844 >= 1179)) AND (d_month_seq#29844 <= 1190)) AND isnotnull(d_date_sk#29841))
                                    :              +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#29841,d_date#29843,d_month_seq#29844] Batched: true, DataFilters: [isnotnull(d_month_seq#29844), (d_month_seq#29844 >= 1179), (d_month_seq#29844 <= 1190), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1179), LessThanOrEqual(d_month_seq,1190),..., ReadSchema: struct<d_date_sk:int,d_date:string,d_month_seq:int>
                                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=87934]
                                       +- Filter isnotnull(c_customer_sk#29869)
                                          +- FileScan parquet spark_catalog.m.customer[c_customer_sk#29869,c_first_name#29877,c_last_name#29878] Batched: true, DataFilters: [isnotnull(c_customer_sk#29869)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>
