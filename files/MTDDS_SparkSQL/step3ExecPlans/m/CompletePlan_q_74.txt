== Parsed Logical Plan ==
CTE [year_total]
:  +- 'SubqueryAlias year_total
:     +- 'Union false, false
:        :- 'Aggregate ['c_customer_id, 'c_first_name, 'c_last_name, 'd_year], ['c_customer_id AS customer_id#41390, 'c_first_name AS customer_first_name#41391, 'c_last_name AS customer_last_name#41392, 'd_year AS year#41393, 'sum('ss_net_paid) AS year_total#41394, s AS sale_type#41395]
:        :  +- 'Filter ((('c_customer_sk = 'ss_customer_sk) AND ('ss_sold_date_sk = 'd_date_sk)) AND 'd_year IN (2000,(2000 + 1)))
:        :     +- 'Join Inner
:        :        :- 'Join Inner
:        :        :  :- 'UnresolvedRelation [customer], [], false
:        :        :  +- 'UnresolvedRelation [store_sales], [], false
:        :        +- 'UnresolvedRelation [date_dim], [], false
:        +- 'Aggregate ['c_customer_id, 'c_first_name, 'c_last_name, 'd_year], ['c_customer_id AS customer_id#41396, 'c_first_name AS customer_first_name#41397, 'c_last_name AS customer_last_name#41398, 'd_year AS year#41399, 'sum('ws_net_paid) AS year_total#41400, w AS sale_type#41401]
:           +- 'Filter ((('c_customer_sk = 'ws_bill_customer_sk) AND ('ws_sold_date_sk = 'd_date_sk)) AND 'd_year IN (2000,(2000 + 1)))
:              +- 'Join Inner
:                 :- 'Join Inner
:                 :  :- 'UnresolvedRelation [customer], [], false
:                 :  +- 'UnresolvedRelation [web_sales], [], false
:                 +- 'UnresolvedRelation [date_dim], [], false
+- 'GlobalLimit 100
   +- 'LocalLimit 100
      +- 'Sort [3 ASC NULLS FIRST, 2 ASC NULLS FIRST, 1 ASC NULLS FIRST], true
         +- 'Project ['t_s_secyear.customer_id, 't_s_secyear.customer_first_name, 't_s_secyear.customer_last_name]
            +- 'Filter ((((('t_s_secyear.customer_id = 't_s_firstyear.customer_id) AND ('t_s_firstyear.customer_id = 't_w_secyear.customer_id)) AND (('t_s_firstyear.customer_id = 't_w_firstyear.customer_id) AND ('t_s_firstyear.sale_type = s))) AND ((('t_w_firstyear.sale_type = w) AND ('t_s_secyear.sale_type = s)) AND ('t_w_secyear.sale_type = w))) AND (((('t_s_firstyear.year = 2000) AND ('t_s_secyear.year = (2000 + 1))) AND (('t_w_firstyear.year = 2000) AND ('t_w_secyear.year = (2000 + 1)))) AND ((('t_s_firstyear.year_total > 0) AND ('t_w_firstyear.year_total > 0)) AND (CASE WHEN ('t_w_firstyear.year_total > 0) THEN ('t_w_secyear.year_total / 't_w_firstyear.year_total) ELSE null END > CASE WHEN ('t_s_firstyear.year_total > 0) THEN ('t_s_secyear.year_total / 't_s_firstyear.year_total) ELSE null END))))
               +- 'Join Inner
                  :- 'Join Inner
                  :  :- 'Join Inner
                  :  :  :- 'SubqueryAlias t_s_firstyear
                  :  :  :  +- 'UnresolvedRelation [year_total], [], false
                  :  :  +- 'SubqueryAlias t_s_secyear
                  :  :     +- 'UnresolvedRelation [year_total], [], false
                  :  +- 'SubqueryAlias t_w_firstyear
                  :     +- 'UnresolvedRelation [year_total], [], false
                  +- 'SubqueryAlias t_w_secyear
                     +- 'UnresolvedRelation [year_total], [], false

== Analyzed Logical Plan ==
customer_id: string, customer_first_name: string, customer_last_name: string
WithCTE
:- CTERelationDef 59, false
:  +- SubqueryAlias year_total
:     +- Union false, false
:        :- Aggregate [c_customer_id#82, c_first_name#89, c_last_name#90, d_year#30], [c_customer_id#82 AS customer_id#41390, c_first_name#89 AS customer_first_name#41391, c_last_name#90 AS customer_last_name#41392, d_year#30 AS year#41393, sum(ss_net_paid#1268) AS year_total#41394, s AS sale_type#41395]
:        :  +- Filter (((c_customer_sk#81 = ss_customer_sk#1251) AND (ss_sold_date_sk#1248 = d_date_sk#24)) AND d_year#30 IN (2000,(2000 + 1)))
:        :     +- Join Inner
:        :        :- Join Inner
:        :        :  :- SubqueryAlias spark_catalog.m.customer
:        :        :  :  +- Relation spark_catalog.m.customer[c_customer_sk#81,c_customer_id#82,c_current_cdemo_sk#83,c_current_hdemo_sk#84,c_current_addr_sk#85,c_first_shipto_date_sk#86,c_first_sales_date_sk#87,c_salutation#88,c_first_name#89,c_last_name#90,c_preferred_cust_flag#91,c_birth_day#92,c_birth_month#93,c_birth_year#94,c_birth_country#95,c_login#96,c_email_address#97,c_last_review_date#98] parquet
:        :        :  +- SubqueryAlias spark_catalog.m.store_sales
:        :        :     +- Relation spark_catalog.m.store_sales[ss_sold_date_sk#1248,ss_sold_time_sk#1249,ss_item_sk#1250,ss_customer_sk#1251,ss_cdemo_sk#1252,ss_hdemo_sk#1253,ss_addr_sk#1254,ss_store_sk#1255,ss_promo_sk#1256,ss_ticket_number#1257,ss_quantity#1258,ss_wholesale_cost#1259,ss_list_price#1260,ss_sales_price#1261,ss_ext_discount_amt#1262,ss_ext_sales_price#1263,ss_ext_wholesale_cost#1264,ss_ext_list_price#1265,ss_ext_tax#1266,ss_coupon_amt#1267,ss_net_paid#1268,ss_net_paid_inc_tax#1269,ss_net_profit#1270] parquet
:        :        +- SubqueryAlias spark_catalog.m.date_dim
:        :           +- Relation spark_catalog.m.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet
:        +- Aggregate [c_customer_id#41403, c_first_name#41410, c_last_name#41411, d_year#41426], [c_customer_id#41403 AS customer_id#41396, c_first_name#41410 AS customer_first_name#41397, c_last_name#41411 AS customer_last_name#41398, d_year#41426 AS year#41399, sum(ws_net_paid#456) AS year_total#41400, w AS sale_type#41401]
:           +- Filter (((c_customer_sk#41402 = ws_bill_customer_sk#431) AND (ws_sold_date_sk#427 = d_date_sk#41420)) AND d_year#41426 IN (2000,(2000 + 1)))
:              +- Join Inner
:                 :- Join Inner
:                 :  :- SubqueryAlias spark_catalog.m.customer
:                 :  :  +- Relation spark_catalog.m.customer[c_customer_sk#41402,c_customer_id#41403,c_current_cdemo_sk#41404,c_current_hdemo_sk#41405,c_current_addr_sk#41406,c_first_shipto_date_sk#41407,c_first_sales_date_sk#41408,c_salutation#41409,c_first_name#41410,c_last_name#41411,c_preferred_cust_flag#41412,c_birth_day#41413,c_birth_month#41414,c_birth_year#41415,c_birth_country#41416,c_login#41417,c_email_address#41418,c_last_review_date#41419] parquet
:                 :  +- SubqueryAlias spark_catalog.m.web_sales
:                 :     +- Relation spark_catalog.m.web_sales[ws_sold_date_sk#427,ws_sold_time_sk#428,ws_ship_date_sk#429,ws_item_sk#430,ws_bill_customer_sk#431,ws_bill_cdemo_sk#432,ws_bill_hdemo_sk#433,ws_bill_addr_sk#434,ws_ship_customer_sk#435,ws_ship_cdemo_sk#436,ws_ship_hdemo_sk#437,ws_ship_addr_sk#438,ws_web_page_sk#439,ws_web_site_sk#440,ws_ship_mode_sk#441,ws_warehouse_sk#442,ws_promo_sk#443,ws_order_number#444,ws_quantity#445,ws_wholesale_cost#446,ws_list_price#447,ws_sales_price#448,ws_ext_discount_amt#449,ws_ext_sales_price#450,... 10 more fields] parquet
:                 +- SubqueryAlias spark_catalog.m.date_dim
:                    +- Relation spark_catalog.m.date_dim[d_date_sk#41420,d_date_id#41421,d_date#41422,d_month_seq#41423,d_week_seq#41424,d_quarter_seq#41425,d_year#41426,d_dow#41427,d_moy#41428,d_dom#41429,d_qoy#41430,d_fy_year#41431,d_fy_quarter_seq#41432,d_fy_week_seq#41433,d_day_name#41434,d_quarter_name#41435,d_holiday#41436,d_weekend#41437,d_following_holiday#41438,d_first_dom#41439,d_last_dom#41440,d_same_day_ly#41441,d_same_day_lq#41442,d_current_day#41443,... 4 more fields] parquet
+- GlobalLimit 100
   +- LocalLimit 100
      +- Sort [customer_last_name#41454 ASC NULLS FIRST, customer_first_name#41453 ASC NULLS FIRST, customer_id#41452 ASC NULLS FIRST], true
         +- Project [customer_id#41452, customer_first_name#41453, customer_last_name#41454]
            +- Filter (((((customer_id#41452 = customer_id#41390) AND (customer_id#41390 = customer_id#41464)) AND ((customer_id#41390 = customer_id#41458) AND (sale_type#41395 = s))) AND (((sale_type#41463 = w) AND (sale_type#41457 = s)) AND (sale_type#41469 = w))) AND ((((year#41393 = 2000) AND (year#41455 = (2000 + 1))) AND ((year#41461 = 2000) AND (year#41467 = (2000 + 1)))) AND (((year_total#41394 > cast(0 as double)) AND (year_total#41462 > cast(0 as double))) AND (CASE WHEN (year_total#41462 > cast(0 as double)) THEN (year_total#41468 / year_total#41462) ELSE cast(null as double) END > CASE WHEN (year_total#41394 > cast(0 as double)) THEN (year_total#41456 / year_total#41394) ELSE cast(null as double) END))))
               +- Join Inner
                  :- Join Inner
                  :  :- Join Inner
                  :  :  :- SubqueryAlias t_s_firstyear
                  :  :  :  +- SubqueryAlias year_total
                  :  :  :     +- CTERelationRef 59, true, [customer_id#41390, customer_first_name#41391, customer_last_name#41392, year#41393, year_total#41394, sale_type#41395], false
                  :  :  +- SubqueryAlias t_s_secyear
                  :  :     +- SubqueryAlias year_total
                  :  :        +- CTERelationRef 59, true, [customer_id#41452, customer_first_name#41453, customer_last_name#41454, year#41455, year_total#41456, sale_type#41457], false
                  :  +- SubqueryAlias t_w_firstyear
                  :     +- SubqueryAlias year_total
                  :        +- CTERelationRef 59, true, [customer_id#41458, customer_first_name#41459, customer_last_name#41460, year#41461, year_total#41462, sale_type#41463], false
                  +- SubqueryAlias t_w_secyear
                     +- SubqueryAlias year_total
                        +- CTERelationRef 59, true, [customer_id#41464, customer_first_name#41465, customer_last_name#41466, year#41467, year_total#41468, sale_type#41469], false

== Optimized Logical Plan ==
GlobalLimit 100
+- LocalLimit 100
   +- Sort [customer_last_name#41454 ASC NULLS FIRST, customer_first_name#41453 ASC NULLS FIRST, customer_id#41452 ASC NULLS FIRST], true
      +- Project [customer_id#41452, customer_first_name#41453, customer_last_name#41454]
         +- Join Inner, ((customer_id#41390 = customer_id#41464) AND (CASE WHEN (year_total#41400 > 0.0) THEN (year_total#41468 / year_total#41400) END > CASE WHEN (year_total#41394 > 0.0) THEN (year_total#41456 / year_total#41394) END))
            :- Project [customer_id#41390, year_total#41394, customer_id#41452, customer_first_name#41453, customer_last_name#41454, year_total#41456, year_total#41400]
            :  +- Join Inner, (customer_id#41390 = customer_id#41396)
            :     :- Join Inner, (customer_id#41452 = customer_id#41390)
            :     :  :- Filter (isnotnull(year_total#41394) AND (year_total#41394 > 0.0))
            :     :  :  +- Aggregate [c_customer_id#82, c_first_name#89, c_last_name#90, d_year#30], [c_customer_id#82 AS customer_id#41390, sum(ss_net_paid#1268) AS year_total#41394]
            :     :  :     +- Project [c_customer_id#82, c_first_name#89, c_last_name#90, ss_net_paid#1268, d_year#30]
            :     :  :        +- Join Inner, (ss_sold_date_sk#1248 = d_date_sk#24)
            :     :  :           :- Project [c_customer_id#82, c_first_name#89, c_last_name#90, ss_sold_date_sk#1248, ss_net_paid#1268]
            :     :  :           :  +- Join Inner, (c_customer_sk#81 = ss_customer_sk#1251)
            :     :  :           :     :- Project [c_customer_sk#81, c_customer_id#82, c_first_name#89, c_last_name#90]
            :     :  :           :     :  +- Filter (isnotnull(c_customer_sk#81) AND isnotnull(c_customer_id#82))
            :     :  :           :     :     +- Relation spark_catalog.m.customer[c_customer_sk#81,c_customer_id#82,c_current_cdemo_sk#83,c_current_hdemo_sk#84,c_current_addr_sk#85,c_first_shipto_date_sk#86,c_first_sales_date_sk#87,c_salutation#88,c_first_name#89,c_last_name#90,c_preferred_cust_flag#91,c_birth_day#92,c_birth_month#93,c_birth_year#94,c_birth_country#95,c_login#96,c_email_address#97,c_last_review_date#98] parquet
            :     :  :           :     +- Project [ss_sold_date_sk#1248, ss_customer_sk#1251, ss_net_paid#1268]
            :     :  :           :        +- Filter (isnotnull(ss_customer_sk#1251) AND isnotnull(ss_sold_date_sk#1248))
            :     :  :           :           +- Relation spark_catalog.m.store_sales[ss_sold_date_sk#1248,ss_sold_time_sk#1249,ss_item_sk#1250,ss_customer_sk#1251,ss_cdemo_sk#1252,ss_hdemo_sk#1253,ss_addr_sk#1254,ss_store_sk#1255,ss_promo_sk#1256,ss_ticket_number#1257,ss_quantity#1258,ss_wholesale_cost#1259,ss_list_price#1260,ss_sales_price#1261,ss_ext_discount_amt#1262,ss_ext_sales_price#1263,ss_ext_wholesale_cost#1264,ss_ext_list_price#1265,ss_ext_tax#1266,ss_coupon_amt#1267,ss_net_paid#1268,ss_net_paid_inc_tax#1269,ss_net_profit#1270] parquet
            :     :  :           +- Project [d_date_sk#24, d_year#30]
            :     :  :              +- Filter ((isnotnull(d_year#30) AND ((d_year#30 = 2000) AND d_year#30 IN (2000,2001))) AND isnotnull(d_date_sk#24))
            :     :  :                 +- Relation spark_catalog.m.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet
            :     :  +- Aggregate [c_customer_id#43393, c_first_name#43400, c_last_name#43401, d_year#43439], [c_customer_id#43393 AS customer_id#41452, c_first_name#43400 AS customer_first_name#41453, c_last_name#43401 AS customer_last_name#41454, sum(ss_net_paid#43430) AS year_total#41456]
            :     :     +- Project [c_customer_id#43393, c_first_name#43400, c_last_name#43401, ss_net_paid#43430, d_year#43439]
            :     :        +- Join Inner, (ss_sold_date_sk#43410 = d_date_sk#43433)
            :     :           :- Project [c_customer_id#43393, c_first_name#43400, c_last_name#43401, ss_sold_date_sk#43410, ss_net_paid#43430]
            :     :           :  +- Join Inner, (c_customer_sk#43392 = ss_customer_sk#43413)
            :     :           :     :- Project [c_customer_sk#43392, c_customer_id#43393, c_first_name#43400, c_last_name#43401]
            :     :           :     :  +- Filter (isnotnull(c_customer_sk#43392) AND isnotnull(c_customer_id#43393))
            :     :           :     :     +- Relation spark_catalog.m.customer[c_customer_sk#43392,c_customer_id#43393,c_current_cdemo_sk#43394,c_current_hdemo_sk#43395,c_current_addr_sk#43396,c_first_shipto_date_sk#43397,c_first_sales_date_sk#43398,c_salutation#43399,c_first_name#43400,c_last_name#43401,c_preferred_cust_flag#43402,c_birth_day#43403,c_birth_month#43404,c_birth_year#43405,c_birth_country#43406,c_login#43407,c_email_address#43408,c_last_review_date#43409] parquet
            :     :           :     +- Project [ss_sold_date_sk#43410, ss_customer_sk#43413, ss_net_paid#43430]
            :     :           :        +- Filter (isnotnull(ss_customer_sk#43413) AND isnotnull(ss_sold_date_sk#43410))
            :     :           :           +- Relation spark_catalog.m.store_sales[ss_sold_date_sk#43410,ss_sold_time_sk#43411,ss_item_sk#43412,ss_customer_sk#43413,ss_cdemo_sk#43414,ss_hdemo_sk#43415,ss_addr_sk#43416,ss_store_sk#43417,ss_promo_sk#43418,ss_ticket_number#43419,ss_quantity#43420,ss_wholesale_cost#43421,ss_list_price#43422,ss_sales_price#43423,ss_ext_discount_amt#43424,ss_ext_sales_price#43425,ss_ext_wholesale_cost#43426,ss_ext_list_price#43427,ss_ext_tax#43428,ss_coupon_amt#43429,ss_net_paid#43430,ss_net_paid_inc_tax#43431,ss_net_profit#43432] parquet
            :     :           +- Project [d_date_sk#43433, d_year#43439]
            :     :              +- Filter ((isnotnull(d_year#43439) AND ((d_year#43439 = 2001) AND d_year#43439 IN (2000,2001))) AND isnotnull(d_date_sk#43433))
            :     :                 +- Relation spark_catalog.m.date_dim[d_date_sk#43433,d_date_id#43434,d_date#43435,d_month_seq#43436,d_week_seq#43437,d_quarter_seq#43438,d_year#43439,d_dow#43440,d_moy#43441,d_dom#43442,d_qoy#43443,d_fy_year#43444,d_fy_quarter_seq#43445,d_fy_week_seq#43446,d_day_name#43447,d_quarter_name#43448,d_holiday#43449,d_weekend#43450,d_following_holiday#43451,d_first_dom#43452,d_last_dom#43453,d_same_day_ly#43454,d_same_day_lq#43455,d_current_day#43456,... 4 more fields] parquet
            :     +- Filter (isnotnull(year_total#41400) AND (year_total#41400 > 0.0))
            :        +- Aggregate [c_customer_id#43617, c_first_name#43624, c_last_name#43625, d_year#43674], [c_customer_id#43617 AS customer_id#41396, sum(ws_net_paid#43663) AS year_total#41400]
            :           +- Project [c_customer_id#43617, c_first_name#43624, c_last_name#43625, ws_net_paid#43663, d_year#43674]
            :              +- Join Inner, (ws_sold_date_sk#43634 = d_date_sk#43668)
            :                 :- Project [c_customer_id#43617, c_first_name#43624, c_last_name#43625, ws_sold_date_sk#43634, ws_net_paid#43663]
            :                 :  +- Join Inner, (c_customer_sk#43616 = ws_bill_customer_sk#43638)
            :                 :     :- Project [c_customer_sk#43616, c_customer_id#43617, c_first_name#43624, c_last_name#43625]
            :                 :     :  +- Filter (isnotnull(c_customer_sk#43616) AND isnotnull(c_customer_id#43617))
            :                 :     :     +- Relation spark_catalog.m.customer[c_customer_sk#43616,c_customer_id#43617,c_current_cdemo_sk#43618,c_current_hdemo_sk#43619,c_current_addr_sk#43620,c_first_shipto_date_sk#43621,c_first_sales_date_sk#43622,c_salutation#43623,c_first_name#43624,c_last_name#43625,c_preferred_cust_flag#43626,c_birth_day#43627,c_birth_month#43628,c_birth_year#43629,c_birth_country#43630,c_login#43631,c_email_address#43632,c_last_review_date#43633] parquet
            :                 :     +- Project [ws_sold_date_sk#43634, ws_bill_customer_sk#43638, ws_net_paid#43663]
            :                 :        +- Filter (isnotnull(ws_bill_customer_sk#43638) AND isnotnull(ws_sold_date_sk#43634))
            :                 :           +- Relation spark_catalog.m.web_sales[ws_sold_date_sk#43634,ws_sold_time_sk#43635,ws_ship_date_sk#43636,ws_item_sk#43637,ws_bill_customer_sk#43638,ws_bill_cdemo_sk#43639,ws_bill_hdemo_sk#43640,ws_bill_addr_sk#43641,ws_ship_customer_sk#43642,ws_ship_cdemo_sk#43643,ws_ship_hdemo_sk#43644,ws_ship_addr_sk#43645,ws_web_page_sk#43646,ws_web_site_sk#43647,ws_ship_mode_sk#43648,ws_warehouse_sk#43649,ws_promo_sk#43650,ws_order_number#43651,ws_quantity#43652,ws_wholesale_cost#43653,ws_list_price#43654,ws_sales_price#43655,ws_ext_discount_amt#43656,ws_ext_sales_price#43657,... 10 more fields] parquet
            :                 +- Project [d_date_sk#43668, d_year#43674]
            :                    +- Filter ((isnotnull(d_year#43674) AND ((d_year#43674 = 2000) AND d_year#43674 IN (2000,2001))) AND isnotnull(d_date_sk#43668))
            :                       +- Relation spark_catalog.m.date_dim[d_date_sk#43668,d_date_id#43669,d_date#43670,d_month_seq#43671,d_week_seq#43672,d_quarter_seq#43673,d_year#43674,d_dow#43675,d_moy#43676,d_dom#43677,d_qoy#43678,d_fy_year#43679,d_fy_quarter_seq#43680,d_fy_week_seq#43681,d_day_name#43682,d_quarter_name#43683,d_holiday#43684,d_weekend#43685,d_following_holiday#43686,d_first_dom#43687,d_last_dom#43688,d_same_day_ly#43689,d_same_day_lq#43690,d_current_day#43691,... 4 more fields] parquet
            +- Aggregate [c_customer_id#43772, c_first_name#43779, c_last_name#43780, d_year#43829], [c_customer_id#43772 AS customer_id#41464, sum(ws_net_paid#43818) AS year_total#41468]
               +- Project [c_customer_id#43772, c_first_name#43779, c_last_name#43780, ws_net_paid#43818, d_year#43829]
                  +- Join Inner, (ws_sold_date_sk#43789 = d_date_sk#43823)
                     :- Project [c_customer_id#43772, c_first_name#43779, c_last_name#43780, ws_sold_date_sk#43789, ws_net_paid#43818]
                     :  +- Join Inner, (c_customer_sk#43771 = ws_bill_customer_sk#43793)
                     :     :- Project [c_customer_sk#43771, c_customer_id#43772, c_first_name#43779, c_last_name#43780]
                     :     :  +- Filter (isnotnull(c_customer_sk#43771) AND isnotnull(c_customer_id#43772))
                     :     :     +- Relation spark_catalog.m.customer[c_customer_sk#43771,c_customer_id#43772,c_current_cdemo_sk#43773,c_current_hdemo_sk#43774,c_current_addr_sk#43775,c_first_shipto_date_sk#43776,c_first_sales_date_sk#43777,c_salutation#43778,c_first_name#43779,c_last_name#43780,c_preferred_cust_flag#43781,c_birth_day#43782,c_birth_month#43783,c_birth_year#43784,c_birth_country#43785,c_login#43786,c_email_address#43787,c_last_review_date#43788] parquet
                     :     +- Project [ws_sold_date_sk#43789, ws_bill_customer_sk#43793, ws_net_paid#43818]
                     :        +- Filter (isnotnull(ws_bill_customer_sk#43793) AND isnotnull(ws_sold_date_sk#43789))
                     :           +- Relation spark_catalog.m.web_sales[ws_sold_date_sk#43789,ws_sold_time_sk#43790,ws_ship_date_sk#43791,ws_item_sk#43792,ws_bill_customer_sk#43793,ws_bill_cdemo_sk#43794,ws_bill_hdemo_sk#43795,ws_bill_addr_sk#43796,ws_ship_customer_sk#43797,ws_ship_cdemo_sk#43798,ws_ship_hdemo_sk#43799,ws_ship_addr_sk#43800,ws_web_page_sk#43801,ws_web_site_sk#43802,ws_ship_mode_sk#43803,ws_warehouse_sk#43804,ws_promo_sk#43805,ws_order_number#43806,ws_quantity#43807,ws_wholesale_cost#43808,ws_list_price#43809,ws_sales_price#43810,ws_ext_discount_amt#43811,ws_ext_sales_price#43812,... 10 more fields] parquet
                     +- Project [d_date_sk#43823, d_year#43829]
                        +- Filter ((isnotnull(d_year#43829) AND ((d_year#43829 = 2001) AND d_year#43829 IN (2000,2001))) AND isnotnull(d_date_sk#43823))
                           +- Relation spark_catalog.m.date_dim[d_date_sk#43823,d_date_id#43824,d_date#43825,d_month_seq#43826,d_week_seq#43827,d_quarter_seq#43828,d_year#43829,d_dow#43830,d_moy#43831,d_dom#43832,d_qoy#43833,d_fy_year#43834,d_fy_quarter_seq#43835,d_fy_week_seq#43836,d_day_name#43837,d_quarter_name#43838,d_holiday#43839,d_weekend#43840,d_following_holiday#43841,d_first_dom#43842,d_last_dom#43843,d_same_day_ly#43844,d_same_day_lq#43845,d_current_day#43846,... 4 more fields] parquet

== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[customer_last_name#41454 ASC NULLS FIRST,customer_first_name#41453 ASC NULLS FIRST,customer_id#41452 ASC NULLS FIRST], output=[customer_id#41452,customer_first_name#41453,customer_last_name#41454])
   +- Project [customer_id#41452, customer_first_name#41453, customer_last_name#41454]
      +- SortMergeJoin [customer_id#41390], [customer_id#41464], Inner, (CASE WHEN (year_total#41400 > 0.0) THEN (year_total#41468 / year_total#41400) END > CASE WHEN (year_total#41394 > 0.0) THEN (year_total#41456 / year_total#41394) END)
         :- Project [customer_id#41390, year_total#41394, customer_id#41452, customer_first_name#41453, customer_last_name#41454, year_total#41456, year_total#41400]
         :  +- SortMergeJoin [customer_id#41390], [customer_id#41396], Inner
         :     :- SortMergeJoin [customer_id#41390], [customer_id#41452], Inner
         :     :  :- Sort [customer_id#41390 ASC NULLS FIRST], false, 0
         :     :  :  +- Exchange hashpartitioning(customer_id#41390, 200), ENSURE_REQUIREMENTS, [plan_id=143668]
         :     :  :     +- Filter (isnotnull(year_total#41394) AND (year_total#41394 > 0.0))
         :     :  :        +- HashAggregate(keys=[c_customer_id#82, c_first_name#89, c_last_name#90, d_year#30], functions=[sum(ss_net_paid#1268)], output=[customer_id#41390, year_total#41394])
         :     :  :           +- Exchange hashpartitioning(c_customer_id#82, c_first_name#89, c_last_name#90, d_year#30, 200), ENSURE_REQUIREMENTS, [plan_id=143652]
         :     :  :              +- HashAggregate(keys=[c_customer_id#82, c_first_name#89, c_last_name#90, d_year#30], functions=[partial_sum(ss_net_paid#1268)], output=[c_customer_id#82, c_first_name#89, c_last_name#90, d_year#30, sum#43361])
         :     :  :                 +- Project [c_customer_id#82, c_first_name#89, c_last_name#90, ss_net_paid#1268, d_year#30]
         :     :  :                    +- BroadcastHashJoin [ss_sold_date_sk#1248], [d_date_sk#24], Inner, BuildRight, false
         :     :  :                       :- Project [c_customer_id#82, c_first_name#89, c_last_name#90, ss_sold_date_sk#1248, ss_net_paid#1268]
         :     :  :                       :  +- BroadcastHashJoin [c_customer_sk#81], [ss_customer_sk#1251], Inner, BuildLeft, false
         :     :  :                       :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=143643]
         :     :  :                       :     :  +- Filter (isnotnull(c_customer_sk#81) AND isnotnull(c_customer_id#82))
         :     :  :                       :     :     +- FileScan parquet spark_catalog.m.customer[c_customer_sk#81,c_customer_id#82,c_first_name#89,c_last_name#90] Batched: true, DataFilters: [isnotnull(c_customer_sk#81), isnotnull(c_customer_id#82)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string>
         :     :  :                       :     +- Filter (isnotnull(ss_customer_sk#1251) AND isnotnull(ss_sold_date_sk#1248))
         :     :  :                       :        +- FileScan parquet spark_catalog.m.store_sales[ss_sold_date_sk#1248,ss_customer_sk#1251,ss_net_paid#1268] Batched: true, DataFilters: [isnotnull(ss_customer_sk#1251), isnotnull(ss_sold_date_sk#1248)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_net_paid:double>
         :     :  :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=143647]
         :     :  :                          +- Filter (((isnotnull(d_year#30) AND (d_year#30 = 2000)) AND d_year#30 IN (2000,2001)) AND isnotnull(d_date_sk#24))
         :     :  :                             +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#24,d_year#30] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 2000), d_year#30 IN (2000,2001), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), In(d_year, [2000,2001]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :     :  +- Sort [customer_id#41452 ASC NULLS FIRST], false, 0
         :     :     +- Exchange hashpartitioning(customer_id#41452, 200), ENSURE_REQUIREMENTS, [plan_id=143669]
         :     :        +- HashAggregate(keys=[c_customer_id#43393, c_first_name#43400, c_last_name#43401, d_year#43439], functions=[sum(ss_net_paid#43430)], output=[customer_id#41452, customer_first_name#41453, customer_last_name#41454, year_total#41456])
         :     :           +- Exchange hashpartitioning(c_customer_id#43393, c_first_name#43400, c_last_name#43401, d_year#43439, 200), ENSURE_REQUIREMENTS, [plan_id=143664]
         :     :              +- HashAggregate(keys=[c_customer_id#43393, c_first_name#43400, c_last_name#43401, d_year#43439], functions=[partial_sum(ss_net_paid#43430)], output=[c_customer_id#43393, c_first_name#43400, c_last_name#43401, d_year#43439, sum#43876])
         :     :                 +- Project [c_customer_id#43393, c_first_name#43400, c_last_name#43401, ss_net_paid#43430, d_year#43439]
         :     :                    +- BroadcastHashJoin [ss_sold_date_sk#43410], [d_date_sk#43433], Inner, BuildRight, false
         :     :                       :- Project [c_customer_id#43393, c_first_name#43400, c_last_name#43401, ss_sold_date_sk#43410, ss_net_paid#43430]
         :     :                       :  +- BroadcastHashJoin [c_customer_sk#43392], [ss_customer_sk#43413], Inner, BuildLeft, false
         :     :                       :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=143655]
         :     :                       :     :  +- Filter (isnotnull(c_customer_sk#43392) AND isnotnull(c_customer_id#43393))
         :     :                       :     :     +- FileScan parquet spark_catalog.m.customer[c_customer_sk#43392,c_customer_id#43393,c_first_name#43400,c_last_name#43401] Batched: true, DataFilters: [isnotnull(c_customer_sk#43392), isnotnull(c_customer_id#43393)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string>
         :     :                       :     +- Filter (isnotnull(ss_customer_sk#43413) AND isnotnull(ss_sold_date_sk#43410))
         :     :                       :        +- FileScan parquet spark_catalog.m.store_sales[ss_sold_date_sk#43410,ss_customer_sk#43413,ss_net_paid#43430] Batched: true, DataFilters: [isnotnull(ss_customer_sk#43413), isnotnull(ss_sold_date_sk#43410)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_net_paid:double>
         :     :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=143659]
         :     :                          +- Filter (((isnotnull(d_year#43439) AND (d_year#43439 = 2001)) AND d_year#43439 IN (2000,2001)) AND isnotnull(d_date_sk#43433))
         :     :                             +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#43433,d_year#43439] Batched: true, DataFilters: [isnotnull(d_year#43439), (d_year#43439 = 2001), d_year#43439 IN (2000,2001), isnotnull(d_date_sk..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), In(d_year, [2000,2001]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :     +- Sort [customer_id#41396 ASC NULLS FIRST], false, 0
         :        +- Exchange hashpartitioning(customer_id#41396, 200), ENSURE_REQUIREMENTS, [plan_id=143687]
         :           +- Filter (isnotnull(year_total#41400) AND (year_total#41400 > 0.0))
         :              +- HashAggregate(keys=[c_customer_id#43617, c_first_name#43624, c_last_name#43625, d_year#43674], functions=[sum(ws_net_paid#43663)], output=[customer_id#41396, year_total#41400])
         :                 +- Exchange hashpartitioning(c_customer_id#43617, c_first_name#43624, c_last_name#43625, d_year#43674, 200), ENSURE_REQUIREMENTS, [plan_id=143682]
         :                    +- HashAggregate(keys=[c_customer_id#43617, c_first_name#43624, c_last_name#43625, d_year#43674], functions=[partial_sum(ws_net_paid#43663)], output=[c_customer_id#43617, c_first_name#43624, c_last_name#43625, d_year#43674, sum#43878])
         :                       +- Project [c_customer_id#43617, c_first_name#43624, c_last_name#43625, ws_net_paid#43663, d_year#43674]
         :                          +- BroadcastHashJoin [ws_sold_date_sk#43634], [d_date_sk#43668], Inner, BuildRight, false
         :                             :- Project [c_customer_id#43617, c_first_name#43624, c_last_name#43625, ws_sold_date_sk#43634, ws_net_paid#43663]
         :                             :  +- BroadcastHashJoin [c_customer_sk#43616], [ws_bill_customer_sk#43638], Inner, BuildLeft, false
         :                             :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=143673]
         :                             :     :  +- Filter (isnotnull(c_customer_sk#43616) AND isnotnull(c_customer_id#43617))
         :                             :     :     +- FileScan parquet spark_catalog.m.customer[c_customer_sk#43616,c_customer_id#43617,c_first_name#43624,c_last_name#43625] Batched: true, DataFilters: [isnotnull(c_customer_sk#43616), isnotnull(c_customer_id#43617)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string>
         :                             :     +- Filter (isnotnull(ws_bill_customer_sk#43638) AND isnotnull(ws_sold_date_sk#43634))
         :                             :        +- FileScan parquet spark_catalog.m.web_sales[ws_sold_date_sk#43634,ws_bill_customer_sk#43638,ws_net_paid#43663] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#43638), isnotnull(ws_sold_date_sk#43634)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_bill_customer_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int,ws_net_paid:double>
         :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=143677]
         :                                +- Filter (((isnotnull(d_year#43674) AND (d_year#43674 = 2000)) AND d_year#43674 IN (2000,2001)) AND isnotnull(d_date_sk#43668))
         :                                   +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#43668,d_year#43674] Batched: true, DataFilters: [isnotnull(d_year#43674), (d_year#43674 = 2000), d_year#43674 IN (2000,2001), isnotnull(d_date_sk..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), In(d_year, [2000,2001]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         +- Sort [customer_id#41464 ASC NULLS FIRST], false, 0
            +- Exchange hashpartitioning(customer_id#41464, 200), ENSURE_REQUIREMENTS, [plan_id=143704]
               +- HashAggregate(keys=[c_customer_id#43772, c_first_name#43779, c_last_name#43780, d_year#43829], functions=[sum(ws_net_paid#43818)], output=[customer_id#41464, year_total#41468])
                  +- Exchange hashpartitioning(c_customer_id#43772, c_first_name#43779, c_last_name#43780, d_year#43829, 200), ENSURE_REQUIREMENTS, [plan_id=143700]
                     +- HashAggregate(keys=[c_customer_id#43772, c_first_name#43779, c_last_name#43780, d_year#43829], functions=[partial_sum(ws_net_paid#43818)], output=[c_customer_id#43772, c_first_name#43779, c_last_name#43780, d_year#43829, sum#43880])
                        +- Project [c_customer_id#43772, c_first_name#43779, c_last_name#43780, ws_net_paid#43818, d_year#43829]
                           +- BroadcastHashJoin [ws_sold_date_sk#43789], [d_date_sk#43823], Inner, BuildRight, false
                              :- Project [c_customer_id#43772, c_first_name#43779, c_last_name#43780, ws_sold_date_sk#43789, ws_net_paid#43818]
                              :  +- BroadcastHashJoin [c_customer_sk#43771], [ws_bill_customer_sk#43793], Inner, BuildLeft, false
                              :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=143691]
                              :     :  +- Filter (isnotnull(c_customer_sk#43771) AND isnotnull(c_customer_id#43772))
                              :     :     +- FileScan parquet spark_catalog.m.customer[c_customer_sk#43771,c_customer_id#43772,c_first_name#43779,c_last_name#43780] Batched: true, DataFilters: [isnotnull(c_customer_sk#43771), isnotnull(c_customer_id#43772)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string>
                              :     +- Filter (isnotnull(ws_bill_customer_sk#43793) AND isnotnull(ws_sold_date_sk#43789))
                              :        +- FileScan parquet spark_catalog.m.web_sales[ws_sold_date_sk#43789,ws_bill_customer_sk#43793,ws_net_paid#43818] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#43793), isnotnull(ws_sold_date_sk#43789)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_bill_customer_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int,ws_net_paid:double>
                              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=143695]
                                 +- Filter (((isnotnull(d_year#43829) AND (d_year#43829 = 2001)) AND d_year#43829 IN (2000,2001)) AND isnotnull(d_date_sk#43823))
                                    +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#43823,d_year#43829] Batched: true, DataFilters: [isnotnull(d_year#43829), (d_year#43829 = 2001), d_year#43829 IN (2000,2001), isnotnull(d_date_sk..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), In(d_year, [2000,2001]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
