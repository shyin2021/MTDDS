== Parsed Logical Plan ==
'GlobalLimit 100
+- 'LocalLimit 100
   +- 'Sort ['ca_zip ASC NULLS FIRST], true
      +- 'Aggregate ['ca_zip], ['ca_zip, unresolvedalias('sum('cs_sales_price), None)]
         +- 'Filter (((('cs_bill_customer_sk = 'c_customer_sk) AND ('c_current_addr_sk = 'ca_address_sk)) AND (('substr('ca_zip, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR 'ca_state IN (CA,WA,GA)) OR ('cs_sales_price > 500))) AND ((('cs_sold_date_sk = 'd_date_sk) AND ('d_qoy = 1)) AND ('d_year = 2000)))
            +- 'Join Inner
               :- 'Join Inner
               :  :- 'Join Inner
               :  :  :- 'UnresolvedRelation [catalog_sales], [], false
               :  :  +- 'UnresolvedRelation [customer], [], false
               :  +- 'UnresolvedRelation [customer_address], [], false
               +- 'UnresolvedRelation [date_dim], [], false

== Analyzed Logical Plan ==
ca_zip: string, sum(cs_sales_price): double
GlobalLimit 100
+- LocalLimit 100
   +- Sort [ca_zip#8180 ASC NULLS FIRST], true
      +- Aggregate [ca_zip#8180], [ca_zip#8180, sum(cs_sales_price#482) AS sum(cs_sales_price)#20225]
         +- Filter ((((cs_bill_customer_sk#464 = c_customer_sk#81) AND (c_current_addr_sk#85 = ca_address_sk#8171)) AND ((substr(ca_zip#8180, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR ca_state#8179 IN (CA,WA,GA)) OR (cs_sales_price#482 > cast(500 as double)))) AND (((cs_sold_date_sk#461 = d_date_sk#24) AND (d_qoy#34 = 1)) AND (d_year#30 = 2000)))
            +- Join Inner
               :- Join Inner
               :  :- Join Inner
               :  :  :- SubqueryAlias spark_catalog.m.catalog_sales
               :  :  :  +- Relation spark_catalog.m.catalog_sales[cs_sold_date_sk#461,cs_sold_time_sk#462,cs_ship_date_sk#463,cs_bill_customer_sk#464,cs_bill_cdemo_sk#465,cs_bill_hdemo_sk#466,cs_bill_addr_sk#467,cs_ship_customer_sk#468,cs_ship_cdemo_sk#469,cs_ship_hdemo_sk#470,cs_ship_addr_sk#471,cs_call_center_sk#472,cs_catalog_page_sk#473,cs_ship_mode_sk#474,cs_warehouse_sk#475,cs_item_sk#476,cs_promo_sk#477,cs_order_number#478,cs_quantity#479,cs_wholesale_cost#480,cs_list_price#481,cs_sales_price#482,cs_ext_discount_amt#483,cs_ext_sales_price#484,... 10 more fields] parquet
               :  :  +- SubqueryAlias spark_catalog.m.customer
               :  :     +- Relation spark_catalog.m.customer[c_customer_sk#81,c_customer_id#82,c_current_cdemo_sk#83,c_current_hdemo_sk#84,c_current_addr_sk#85,c_first_shipto_date_sk#86,c_first_sales_date_sk#87,c_salutation#88,c_first_name#89,c_last_name#90,c_preferred_cust_flag#91,c_birth_day#92,c_birth_month#93,c_birth_year#94,c_birth_country#95,c_login#96,c_email_address#97,c_last_review_date#98] parquet
               :  +- SubqueryAlias spark_catalog.m.customer_address
               :     +- Relation spark_catalog.m.customer_address[ca_address_sk#8171,ca_address_id#8172,ca_street_number#8173,ca_street_name#8174,ca_street_type#8175,ca_suite_number#8176,ca_city#8177,ca_county#8178,ca_state#8179,ca_zip#8180,ca_country#8181,ca_gmt_offset#8182,ca_location_type#8183] parquet
               +- SubqueryAlias spark_catalog.m.date_dim
                  +- Relation spark_catalog.m.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet

== Optimized Logical Plan ==
GlobalLimit 100
+- LocalLimit 100
   +- Sort [ca_zip#8180 ASC NULLS FIRST], true
      +- Aggregate [ca_zip#8180], [ca_zip#8180, sum(cs_sales_price#482) AS sum(cs_sales_price)#20225]
         +- Project [cs_sales_price#482, ca_zip#8180]
            +- Join Inner, (cs_sold_date_sk#461 = d_date_sk#24)
               :- Project [cs_sold_date_sk#461, cs_sales_price#482, ca_zip#8180]
               :  +- Join Inner, ((c_current_addr_sk#85 = ca_address_sk#8171) AND ((substr(ca_zip#8180, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR ca_state#8179 IN (CA,WA,GA)) OR (cs_sales_price#482 > 500.0)))
               :     :- Project [cs_sold_date_sk#461, cs_sales_price#482, c_current_addr_sk#85]
               :     :  +- Join Inner, (cs_bill_customer_sk#464 = c_customer_sk#81)
               :     :     :- Project [cs_sold_date_sk#461, cs_bill_customer_sk#464, cs_sales_price#482]
               :     :     :  +- Filter (isnotnull(cs_bill_customer_sk#464) AND isnotnull(cs_sold_date_sk#461))
               :     :     :     +- Relation spark_catalog.m.catalog_sales[cs_sold_date_sk#461,cs_sold_time_sk#462,cs_ship_date_sk#463,cs_bill_customer_sk#464,cs_bill_cdemo_sk#465,cs_bill_hdemo_sk#466,cs_bill_addr_sk#467,cs_ship_customer_sk#468,cs_ship_cdemo_sk#469,cs_ship_hdemo_sk#470,cs_ship_addr_sk#471,cs_call_center_sk#472,cs_catalog_page_sk#473,cs_ship_mode_sk#474,cs_warehouse_sk#475,cs_item_sk#476,cs_promo_sk#477,cs_order_number#478,cs_quantity#479,cs_wholesale_cost#480,cs_list_price#481,cs_sales_price#482,cs_ext_discount_amt#483,cs_ext_sales_price#484,... 10 more fields] parquet
               :     :     +- Project [c_customer_sk#81, c_current_addr_sk#85]
               :     :        +- Filter (isnotnull(c_customer_sk#81) AND isnotnull(c_current_addr_sk#85))
               :     :           +- Relation spark_catalog.m.customer[c_customer_sk#81,c_customer_id#82,c_current_cdemo_sk#83,c_current_hdemo_sk#84,c_current_addr_sk#85,c_first_shipto_date_sk#86,c_first_sales_date_sk#87,c_salutation#88,c_first_name#89,c_last_name#90,c_preferred_cust_flag#91,c_birth_day#92,c_birth_month#93,c_birth_year#94,c_birth_country#95,c_login#96,c_email_address#97,c_last_review_date#98] parquet
               :     +- Project [ca_address_sk#8171, ca_state#8179, ca_zip#8180]
               :        +- Filter isnotnull(ca_address_sk#8171)
               :           +- Relation spark_catalog.m.customer_address[ca_address_sk#8171,ca_address_id#8172,ca_street_number#8173,ca_street_name#8174,ca_street_type#8175,ca_suite_number#8176,ca_city#8177,ca_county#8178,ca_state#8179,ca_zip#8180,ca_country#8181,ca_gmt_offset#8182,ca_location_type#8183] parquet
               +- Project [d_date_sk#24]
                  +- Filter (((isnotnull(d_qoy#34) AND isnotnull(d_year#30)) AND ((d_qoy#34 = 1) AND (d_year#30 = 2000))) AND isnotnull(d_date_sk#24))
                     +- Relation spark_catalog.m.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,... 4 more fields] parquet

== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[ca_zip#8180 ASC NULLS FIRST], output=[ca_zip#8180,sum(cs_sales_price)#20225])
   +- HashAggregate(keys=[ca_zip#8180], functions=[sum(cs_sales_price#482)], output=[ca_zip#8180, sum(cs_sales_price)#20225])
      +- Exchange hashpartitioning(ca_zip#8180, 200), ENSURE_REQUIREMENTS, [plan_id=48928]
         +- HashAggregate(keys=[ca_zip#8180], functions=[partial_sum(cs_sales_price#482)], output=[ca_zip#8180, sum#20235])
            +- Project [cs_sales_price#482, ca_zip#8180]
               +- BroadcastHashJoin [cs_sold_date_sk#461], [d_date_sk#24], Inner, BuildRight, false
                  :- Project [cs_sold_date_sk#461, cs_sales_price#482, ca_zip#8180]
                  :  +- BroadcastHashJoin [c_current_addr_sk#85], [ca_address_sk#8171], Inner, BuildRight, ((substr(ca_zip#8180, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR ca_state#8179 IN (CA,WA,GA)) OR (cs_sales_price#482 > 500.0)), false
                  :     :- Project [cs_sold_date_sk#461, cs_sales_price#482, c_current_addr_sk#85]
                  :     :  +- BroadcastHashJoin [cs_bill_customer_sk#464], [c_customer_sk#81], Inner, BuildRight, false
                  :     :     :- Filter (isnotnull(cs_bill_customer_sk#464) AND isnotnull(cs_sold_date_sk#461))
                  :     :     :  +- FileScan parquet spark_catalog.m.catalog_sales[cs_sold_date_sk#461,cs_bill_customer_sk#464,cs_sales_price#482] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#464), isnotnull(cs_sold_date_sk#461)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_bill_customer_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_sales_price:double>
                  :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=48915]
                  :     :        +- Filter (isnotnull(c_customer_sk#81) AND isnotnull(c_current_addr_sk#85))
                  :     :           +- FileScan parquet spark_catalog.m.customer[c_customer_sk#81,c_current_addr_sk#85] Batched: true, DataFilters: [isnotnull(c_customer_sk#81), isnotnull(c_current_addr_sk#85)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
                  :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=48919]
                  :        +- Filter isnotnull(ca_address_sk#8171)
                  :           +- FileScan parquet spark_catalog.m.customer_address[ca_address_sk#8171,ca_state#8179,ca_zip#8180] Batched: true, DataFilters: [isnotnull(ca_address_sk#8171)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_zip:string>
                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=48923]
                     +- Project [d_date_sk#24]
                        +- Filter ((((isnotnull(d_qoy#34) AND isnotnull(d_year#30)) AND (d_qoy#34 = 1)) AND (d_year#30 = 2000)) AND isnotnull(d_date_sk#24))
                           +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#24,d_year#30,d_qoy#34] Batched: true, DataFilters: [isnotnull(d_qoy#34), isnotnull(d_year#30), (d_qoy#34 = 1), (d_year#30 = 2000), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,1), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
