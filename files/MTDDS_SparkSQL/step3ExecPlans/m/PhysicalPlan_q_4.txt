AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=100, orderBy=[customer_id#1451 ASC NULLS FIRST,customer_first_name#1452 ASC NULLS FIRST,customer_last_name#1453 ASC NULLS FIRST,customer_birth_country#1455 ASC NULLS FIRST], output=[customer_id#1451,customer_first_name#1452,customer_last_name#1453,customer_birth_country#1455])
   +- Project [customer_id#1451, customer_first_name#1452, customer_last_name#1453, customer_birth_country#1455]
      +- SortMergeJoin [customer_id#1322], [customer_id#1491], Inner, (CASE WHEN (year_total#1340 > 0.0) THEN (year_total#1479 / year_total#1340) END > CASE WHEN (year_total#1350 > 0.0) THEN (year_total#1499 / year_total#1350) END)
         :- Project [customer_id#1322, customer_id#1451, customer_first_name#1452, customer_last_name#1453, customer_birth_country#1455, year_total#1340, year_total#1479, year_total#1350]
         :  +- SortMergeJoin [customer_id#1322], [customer_id#1342], Inner
         :     :- Project [customer_id#1322, customer_id#1451, customer_first_name#1452, customer_last_name#1453, customer_birth_country#1455, year_total#1340, year_total#1479]
         :     :  +- SortMergeJoin [customer_id#1322], [customer_id#1471], Inner, (CASE WHEN (year_total#1340 > 0.0) THEN (year_total#1479 / year_total#1340) END > CASE WHEN (year_total#1330 > 0.0) THEN (year_total#1459 / year_total#1330) END)
         :     :     :- Project [customer_id#1322, year_total#1330, customer_id#1451, customer_first_name#1452, customer_last_name#1453, customer_birth_country#1455, year_total#1459, year_total#1340]
         :     :     :  +- SortMergeJoin [customer_id#1322], [customer_id#1332], Inner
         :     :     :     :- SortMergeJoin [customer_id#1322], [customer_id#1451], Inner
         :     :     :     :  :- Sort [customer_id#1322 ASC NULLS FIRST], false, 0
         :     :     :     :  :  +- Exchange hashpartitioning(customer_id#1322, 200), ENSURE_REQUIREMENTS, [plan_id=6150]
         :     :     :     :  :     +- Filter (isnotnull(year_total#1330) AND (year_total#1330 > 0.0))
         :     :     :     :  :        +- HashAggregate(keys=[c_customer_id#82, c_first_name#89, c_last_name#90, c_preferred_cust_flag#91, c_birth_country#95, c_login#96, c_email_address#97, d_year#30], functions=[sum(((((ss_ext_list_price#1265 - ss_ext_wholesale_cost#1264) - ss_ext_discount_amt#1262) + ss_ext_sales_price#1263) / 2.0))], output=[customer_id#1322, year_total#1330])
         :     :     :     :  :           +- Exchange hashpartitioning(c_customer_id#82, c_first_name#89, c_last_name#90, c_preferred_cust_flag#91, c_birth_country#95, c_login#96, c_email_address#97, d_year#30, 200), ENSURE_REQUIREMENTS, [plan_id=6134]
         :     :     :     :  :              +- HashAggregate(keys=[c_customer_id#82, c_first_name#89, c_last_name#90, c_preferred_cust_flag#91, c_birth_country#95, c_login#96, c_email_address#97, d_year#30], functions=[partial_sum(((((ss_ext_list_price#1265 - ss_ext_wholesale_cost#1264) - ss_ext_discount_amt#1262) + ss_ext_sales_price#1263) / 2.0))], output=[c_customer_id#82, c_first_name#89, c_last_name#90, c_preferred_cust_flag#91, c_birth_country#95, c_login#96, c_email_address#97, d_year#30, sum#7740])
         :     :     :     :  :                 +- Project [c_customer_id#82, c_first_name#89, c_last_name#90, c_preferred_cust_flag#91, c_birth_country#95, c_login#96, c_email_address#97, ss_ext_discount_amt#1262, ss_ext_sales_price#1263, ss_ext_wholesale_cost#1264, ss_ext_list_price#1265, d_year#30]
         :     :     :     :  :                    +- BroadcastHashJoin [ss_sold_date_sk#1248], [d_date_sk#24], Inner, BuildRight, false
         :     :     :     :  :                       :- Project [c_customer_id#82, c_first_name#89, c_last_name#90, c_preferred_cust_flag#91, c_birth_country#95, c_login#96, c_email_address#97, ss_sold_date_sk#1248, ss_ext_discount_amt#1262, ss_ext_sales_price#1263, ss_ext_wholesale_cost#1264, ss_ext_list_price#1265]
         :     :     :     :  :                       :  +- BroadcastHashJoin [c_customer_sk#81], [ss_customer_sk#1251], Inner, BuildLeft, false
         :     :     :     :  :                       :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=6125]
         :     :     :     :  :                       :     :  +- Filter (isnotnull(c_customer_sk#81) AND isnotnull(c_customer_id#82))
         :     :     :     :  :                       :     :     +- FileScan parquet spark_catalog.m.customer[c_customer_sk#81,c_customer_id#82,c_first_name#89,c_last_name#90,c_preferred_cust_flag#91,c_birth_country#95,c_login#96,c_email_address#97] Batched: true, DataFilters: [isnotnull(c_customer_sk#81), isnotnull(c_customer_id#82)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
         :     :     :     :  :                       :     +- Filter (isnotnull(ss_customer_sk#1251) AND isnotnull(ss_sold_date_sk#1248))
         :     :     :     :  :                       :        +- FileScan parquet spark_catalog.m.store_sales[ss_sold_date_sk#1248,ss_customer_sk#1251,ss_ext_discount_amt#1262,ss_ext_sales_price#1263,ss_ext_wholesale_cost#1264,ss_ext_list_price#1265] Batched: true, DataFilters: [isnotnull(ss_customer_sk#1251), isnotnull(ss_sold_date_sk#1248)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_ext_discount_amt:double,ss_ext_sales_price:doubl...
         :     :     :     :  :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=6129]
         :     :     :     :  :                          +- Filter ((isnotnull(d_year#30) AND (d_year#30 = 1999)) AND isnotnull(d_date_sk#24))
         :     :     :     :  :                             +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#24,d_year#30] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 1999), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :     :     :     :  +- Sort [customer_id#1451 ASC NULLS FIRST], false, 0
         :     :     :     :     +- Exchange hashpartitioning(customer_id#1451, 200), ENSURE_REQUIREMENTS, [plan_id=6151]
         :     :     :     :        +- HashAggregate(keys=[c_customer_id#6445, c_first_name#6452, c_last_name#6453, c_preferred_cust_flag#6454, c_birth_country#6458, c_login#6459, c_email_address#6460, d_year#6491], functions=[sum(((((ss_ext_list_price#6479 - ss_ext_wholesale_cost#6478) - ss_ext_discount_amt#6476) + ss_ext_sales_price#6477) / 2.0))], output=[customer_id#1451, customer_first_name#1452, customer_last_name#1453, customer_birth_country#1455, year_total#1459])
         :     :     :     :           +- Exchange hashpartitioning(c_customer_id#6445, c_first_name#6452, c_last_name#6453, c_preferred_cust_flag#6454, c_birth_country#6458, c_login#6459, c_email_address#6460, d_year#6491, 200), ENSURE_REQUIREMENTS, [plan_id=6146]
         :     :     :     :              +- HashAggregate(keys=[c_customer_id#6445, c_first_name#6452, c_last_name#6453, c_preferred_cust_flag#6454, c_birth_country#6458, c_login#6459, c_email_address#6460, d_year#6491], functions=[partial_sum(((((ss_ext_list_price#6479 - ss_ext_wholesale_cost#6478) - ss_ext_discount_amt#6476) + ss_ext_sales_price#6477) / 2.0))], output=[c_customer_id#6445, c_first_name#6452, c_last_name#6453, c_preferred_cust_flag#6454, c_birth_country#6458, c_login#6459, c_email_address#6460, d_year#6491, sum#7742])
         :     :     :     :                 +- Project [c_customer_id#6445, c_first_name#6452, c_last_name#6453, c_preferred_cust_flag#6454, c_birth_country#6458, c_login#6459, c_email_address#6460, ss_ext_discount_amt#6476, ss_ext_sales_price#6477, ss_ext_wholesale_cost#6478, ss_ext_list_price#6479, d_year#6491]
         :     :     :     :                    +- BroadcastHashJoin [ss_sold_date_sk#6462], [d_date_sk#6485], Inner, BuildRight, false
         :     :     :     :                       :- Project [c_customer_id#6445, c_first_name#6452, c_last_name#6453, c_preferred_cust_flag#6454, c_birth_country#6458, c_login#6459, c_email_address#6460, ss_sold_date_sk#6462, ss_ext_discount_amt#6476, ss_ext_sales_price#6477, ss_ext_wholesale_cost#6478, ss_ext_list_price#6479]
         :     :     :     :                       :  +- BroadcastHashJoin [c_customer_sk#6444], [ss_customer_sk#6465], Inner, BuildLeft, false
         :     :     :     :                       :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=6137]
         :     :     :     :                       :     :  +- Filter (isnotnull(c_customer_sk#6444) AND isnotnull(c_customer_id#6445))
         :     :     :     :                       :     :     +- FileScan parquet spark_catalog.m.customer[c_customer_sk#6444,c_customer_id#6445,c_first_name#6452,c_last_name#6453,c_preferred_cust_flag#6454,c_birth_country#6458,c_login#6459,c_email_address#6460] Batched: true, DataFilters: [isnotnull(c_customer_sk#6444), isnotnull(c_customer_id#6445)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
         :     :     :     :                       :     +- Filter (isnotnull(ss_customer_sk#6465) AND isnotnull(ss_sold_date_sk#6462))
         :     :     :     :                       :        +- FileScan parquet spark_catalog.m.store_sales[ss_sold_date_sk#6462,ss_customer_sk#6465,ss_ext_discount_amt#6476,ss_ext_sales_price#6477,ss_ext_wholesale_cost#6478,ss_ext_list_price#6479] Batched: true, DataFilters: [isnotnull(ss_customer_sk#6465), isnotnull(ss_sold_date_sk#6462)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_ext_discount_amt:double,ss_ext_sales_price:doubl...
         :     :     :     :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=6141]
         :     :     :     :                          +- Filter ((isnotnull(d_year#6491) AND (d_year#6491 = 2000)) AND isnotnull(d_date_sk#6485))
         :     :     :     :                             +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#6485,d_year#6491] Batched: true, DataFilters: [isnotnull(d_year#6491), (d_year#6491 = 2000), isnotnull(d_date_sk#6485)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :     :     :     +- Sort [customer_id#1332 ASC NULLS FIRST], false, 0
         :     :     :        +- Exchange hashpartitioning(customer_id#1332, 200), ENSURE_REQUIREMENTS, [plan_id=6169]
         :     :     :           +- Filter (isnotnull(year_total#1340) AND (year_total#1340 > 0.0))
         :     :     :              +- HashAggregate(keys=[c_customer_id#6753, c_first_name#6760, c_last_name#6761, c_preferred_cust_flag#6762, c_birth_country#6766, c_login#6767, c_email_address#6768, d_year#6810], functions=[sum(((((cs_ext_list_price#6795 - cs_ext_wholesale_cost#6794) - cs_ext_discount_amt#6792) + cs_ext_sales_price#6793) / 2.0))], output=[customer_id#1332, year_total#1340])
         :     :     :                 +- Exchange hashpartitioning(c_customer_id#6753, c_first_name#6760, c_last_name#6761, c_preferred_cust_flag#6762, c_birth_country#6766, c_login#6767, c_email_address#6768, d_year#6810, 200), ENSURE_REQUIREMENTS, [plan_id=6164]
         :     :     :                    +- HashAggregate(keys=[c_customer_id#6753, c_first_name#6760, c_last_name#6761, c_preferred_cust_flag#6762, c_birth_country#6766, c_login#6767, c_email_address#6768, d_year#6810], functions=[partial_sum(((((cs_ext_list_price#6795 - cs_ext_wholesale_cost#6794) - cs_ext_discount_amt#6792) + cs_ext_sales_price#6793) / 2.0))], output=[c_customer_id#6753, c_first_name#6760, c_last_name#6761, c_preferred_cust_flag#6762, c_birth_country#6766, c_login#6767, c_email_address#6768, d_year#6810, sum#7744])
         :     :     :                       +- Project [c_customer_id#6753, c_first_name#6760, c_last_name#6761, c_preferred_cust_flag#6762, c_birth_country#6766, c_login#6767, c_email_address#6768, cs_ext_discount_amt#6792, cs_ext_sales_price#6793, cs_ext_wholesale_cost#6794, cs_ext_list_price#6795, d_year#6810]
         :     :     :                          +- BroadcastHashJoin [cs_sold_date_sk#6770], [d_date_sk#6804], Inner, BuildRight, false
         :     :     :                             :- Project [c_customer_id#6753, c_first_name#6760, c_last_name#6761, c_preferred_cust_flag#6762, c_birth_country#6766, c_login#6767, c_email_address#6768, cs_sold_date_sk#6770, cs_ext_discount_amt#6792, cs_ext_sales_price#6793, cs_ext_wholesale_cost#6794, cs_ext_list_price#6795]
         :     :     :                             :  +- BroadcastHashJoin [c_customer_sk#6752], [cs_bill_customer_sk#6773], Inner, BuildLeft, false
         :     :     :                             :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=6155]
         :     :     :                             :     :  +- Filter (isnotnull(c_customer_sk#6752) AND isnotnull(c_customer_id#6753))
         :     :     :                             :     :     +- FileScan parquet spark_catalog.m.customer[c_customer_sk#6752,c_customer_id#6753,c_first_name#6760,c_last_name#6761,c_preferred_cust_flag#6762,c_birth_country#6766,c_login#6767,c_email_address#6768] Batched: true, DataFilters: [isnotnull(c_customer_sk#6752), isnotnull(c_customer_id#6753)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
         :     :     :                             :     +- Filter (isnotnull(cs_bill_customer_sk#6773) AND isnotnull(cs_sold_date_sk#6770))
         :     :     :                             :        +- FileScan parquet spark_catalog.m.catalog_sales[cs_sold_date_sk#6770,cs_bill_customer_sk#6773,cs_ext_discount_amt#6792,cs_ext_sales_price#6793,cs_ext_wholesale_cost#6794,cs_ext_list_price#6795] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#6773), isnotnull(cs_sold_date_sk#6770)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_bill_customer_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_ext_discount_amt:double,cs_ext_sales_price:...
         :     :     :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=6159]
         :     :     :                                +- Filter ((isnotnull(d_year#6810) AND (d_year#6810 = 1999)) AND isnotnull(d_date_sk#6804))
         :     :     :                                   +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#6804,d_year#6810] Batched: true, DataFilters: [isnotnull(d_year#6810), (d_year#6810 = 1999), isnotnull(d_date_sk#6804)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :     :     +- Sort [customer_id#1471 ASC NULLS FIRST], false, 0
         :     :        +- Exchange hashpartitioning(customer_id#1471, 200), ENSURE_REQUIREMENTS, [plan_id=6186]
         :     :           +- HashAggregate(keys=[c_customer_id#6992, c_first_name#6999, c_last_name#7000, c_preferred_cust_flag#7001, c_birth_country#7005, c_login#7006, c_email_address#7007, d_year#7049], functions=[sum(((((cs_ext_list_price#7034 - cs_ext_wholesale_cost#7033) - cs_ext_discount_amt#7031) + cs_ext_sales_price#7032) / 2.0))], output=[customer_id#1471, year_total#1479])
         :     :              +- Exchange hashpartitioning(c_customer_id#6992, c_first_name#6999, c_last_name#7000, c_preferred_cust_flag#7001, c_birth_country#7005, c_login#7006, c_email_address#7007, d_year#7049, 200), ENSURE_REQUIREMENTS, [plan_id=6182]
         :     :                 +- HashAggregate(keys=[c_customer_id#6992, c_first_name#6999, c_last_name#7000, c_preferred_cust_flag#7001, c_birth_country#7005, c_login#7006, c_email_address#7007, d_year#7049], functions=[partial_sum(((((cs_ext_list_price#7034 - cs_ext_wholesale_cost#7033) - cs_ext_discount_amt#7031) + cs_ext_sales_price#7032) / 2.0))], output=[c_customer_id#6992, c_first_name#6999, c_last_name#7000, c_preferred_cust_flag#7001, c_birth_country#7005, c_login#7006, c_email_address#7007, d_year#7049, sum#7746])
         :     :                    +- Project [c_customer_id#6992, c_first_name#6999, c_last_name#7000, c_preferred_cust_flag#7001, c_birth_country#7005, c_login#7006, c_email_address#7007, cs_ext_discount_amt#7031, cs_ext_sales_price#7032, cs_ext_wholesale_cost#7033, cs_ext_list_price#7034, d_year#7049]
         :     :                       +- BroadcastHashJoin [cs_sold_date_sk#7009], [d_date_sk#7043], Inner, BuildRight, false
         :     :                          :- Project [c_customer_id#6992, c_first_name#6999, c_last_name#7000, c_preferred_cust_flag#7001, c_birth_country#7005, c_login#7006, c_email_address#7007, cs_sold_date_sk#7009, cs_ext_discount_amt#7031, cs_ext_sales_price#7032, cs_ext_wholesale_cost#7033, cs_ext_list_price#7034]
         :     :                          :  +- BroadcastHashJoin [c_customer_sk#6991], [cs_bill_customer_sk#7012], Inner, BuildLeft, false
         :     :                          :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=6173]
         :     :                          :     :  +- Filter (isnotnull(c_customer_sk#6991) AND isnotnull(c_customer_id#6992))
         :     :                          :     :     +- FileScan parquet spark_catalog.m.customer[c_customer_sk#6991,c_customer_id#6992,c_first_name#6999,c_last_name#7000,c_preferred_cust_flag#7001,c_birth_country#7005,c_login#7006,c_email_address#7007] Batched: true, DataFilters: [isnotnull(c_customer_sk#6991), isnotnull(c_customer_id#6992)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
         :     :                          :     +- Filter (isnotnull(cs_bill_customer_sk#7012) AND isnotnull(cs_sold_date_sk#7009))
         :     :                          :        +- FileScan parquet spark_catalog.m.catalog_sales[cs_sold_date_sk#7009,cs_bill_customer_sk#7012,cs_ext_discount_amt#7031,cs_ext_sales_price#7032,cs_ext_wholesale_cost#7033,cs_ext_list_price#7034] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#7012), isnotnull(cs_sold_date_sk#7009)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_bill_customer_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_ext_discount_amt:double,cs_ext_sales_price:...
         :     :                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=6177]
         :     :                             +- Filter ((isnotnull(d_year#7049) AND (d_year#7049 = 2000)) AND isnotnull(d_date_sk#7043))
         :     :                                +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#7043,d_year#7049] Batched: true, DataFilters: [isnotnull(d_year#7049), (d_year#7049 = 2000), isnotnull(d_date_sk#7043)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :     +- Sort [customer_id#1342 ASC NULLS FIRST], false, 0
         :        +- Exchange hashpartitioning(customer_id#1342, 200), ENSURE_REQUIREMENTS, [plan_id=6204]
         :           +- Filter (isnotnull(year_total#1350) AND (year_total#1350 > 0.0))
         :              +- HashAggregate(keys=[c_customer_id#7311, c_first_name#7318, c_last_name#7319, c_preferred_cust_flag#7320, c_birth_country#7324, c_login#7325, c_email_address#7326, d_year#7368], functions=[sum(((((ws_ext_list_price#7353 - ws_ext_wholesale_cost#7352) - ws_ext_discount_amt#7350) + ws_ext_sales_price#7351) / 2.0))], output=[customer_id#1342, year_total#1350])
         :                 +- Exchange hashpartitioning(c_customer_id#7311, c_first_name#7318, c_last_name#7319, c_preferred_cust_flag#7320, c_birth_country#7324, c_login#7325, c_email_address#7326, d_year#7368, 200), ENSURE_REQUIREMENTS, [plan_id=6199]
         :                    +- HashAggregate(keys=[c_customer_id#7311, c_first_name#7318, c_last_name#7319, c_preferred_cust_flag#7320, c_birth_country#7324, c_login#7325, c_email_address#7326, d_year#7368], functions=[partial_sum(((((ws_ext_list_price#7353 - ws_ext_wholesale_cost#7352) - ws_ext_discount_amt#7350) + ws_ext_sales_price#7351) / 2.0))], output=[c_customer_id#7311, c_first_name#7318, c_last_name#7319, c_preferred_cust_flag#7320, c_birth_country#7324, c_login#7325, c_email_address#7326, d_year#7368, sum#7748])
         :                       +- Project [c_customer_id#7311, c_first_name#7318, c_last_name#7319, c_preferred_cust_flag#7320, c_birth_country#7324, c_login#7325, c_email_address#7326, ws_ext_discount_amt#7350, ws_ext_sales_price#7351, ws_ext_wholesale_cost#7352, ws_ext_list_price#7353, d_year#7368]
         :                          +- BroadcastHashJoin [ws_sold_date_sk#7328], [d_date_sk#7362], Inner, BuildRight, false
         :                             :- Project [c_customer_id#7311, c_first_name#7318, c_last_name#7319, c_preferred_cust_flag#7320, c_birth_country#7324, c_login#7325, c_email_address#7326, ws_sold_date_sk#7328, ws_ext_discount_amt#7350, ws_ext_sales_price#7351, ws_ext_wholesale_cost#7352, ws_ext_list_price#7353]
         :                             :  +- BroadcastHashJoin [c_customer_sk#7310], [ws_bill_customer_sk#7332], Inner, BuildLeft, false
         :                             :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=6190]
         :                             :     :  +- Filter (isnotnull(c_customer_sk#7310) AND isnotnull(c_customer_id#7311))
         :                             :     :     +- FileScan parquet spark_catalog.m.customer[c_customer_sk#7310,c_customer_id#7311,c_first_name#7318,c_last_name#7319,c_preferred_cust_flag#7320,c_birth_country#7324,c_login#7325,c_email_address#7326] Batched: true, DataFilters: [isnotnull(c_customer_sk#7310), isnotnull(c_customer_id#7311)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
         :                             :     +- Filter (isnotnull(ws_bill_customer_sk#7332) AND isnotnull(ws_sold_date_sk#7328))
         :                             :        +- FileScan parquet spark_catalog.m.web_sales[ws_sold_date_sk#7328,ws_bill_customer_sk#7332,ws_ext_discount_amt#7350,ws_ext_sales_price#7351,ws_ext_wholesale_cost#7352,ws_ext_list_price#7353] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#7332), isnotnull(ws_sold_date_sk#7328)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_bill_customer_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int,ws_ext_discount_amt:double,ws_ext_sales_price:...
         :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=6194]
         :                                +- Filter ((isnotnull(d_year#7368) AND (d_year#7368 = 1999)) AND isnotnull(d_date_sk#7362))
         :                                   +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#7362,d_year#7368] Batched: true, DataFilters: [isnotnull(d_year#7368), (d_year#7368 = 1999), isnotnull(d_date_sk#7362)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         +- Sort [customer_id#1491 ASC NULLS FIRST], false, 0
            +- Exchange hashpartitioning(customer_id#1491, 200), ENSURE_REQUIREMENTS, [plan_id=6221]
               +- HashAggregate(keys=[c_customer_id#7550, c_first_name#7557, c_last_name#7558, c_preferred_cust_flag#7559, c_birth_country#7563, c_login#7564, c_email_address#7565, d_year#7607], functions=[sum(((((ws_ext_list_price#7592 - ws_ext_wholesale_cost#7591) - ws_ext_discount_amt#7589) + ws_ext_sales_price#7590) / 2.0))], output=[customer_id#1491, year_total#1499])
                  +- Exchange hashpartitioning(c_customer_id#7550, c_first_name#7557, c_last_name#7558, c_preferred_cust_flag#7559, c_birth_country#7563, c_login#7564, c_email_address#7565, d_year#7607, 200), ENSURE_REQUIREMENTS, [plan_id=6217]
                     +- HashAggregate(keys=[c_customer_id#7550, c_first_name#7557, c_last_name#7558, c_preferred_cust_flag#7559, c_birth_country#7563, c_login#7564, c_email_address#7565, d_year#7607], functions=[partial_sum(((((ws_ext_list_price#7592 - ws_ext_wholesale_cost#7591) - ws_ext_discount_amt#7589) + ws_ext_sales_price#7590) / 2.0))], output=[c_customer_id#7550, c_first_name#7557, c_last_name#7558, c_preferred_cust_flag#7559, c_birth_country#7563, c_login#7564, c_email_address#7565, d_year#7607, sum#7750])
                        +- Project [c_customer_id#7550, c_first_name#7557, c_last_name#7558, c_preferred_cust_flag#7559, c_birth_country#7563, c_login#7564, c_email_address#7565, ws_ext_discount_amt#7589, ws_ext_sales_price#7590, ws_ext_wholesale_cost#7591, ws_ext_list_price#7592, d_year#7607]
                           +- BroadcastHashJoin [ws_sold_date_sk#7567], [d_date_sk#7601], Inner, BuildRight, false
                              :- Project [c_customer_id#7550, c_first_name#7557, c_last_name#7558, c_preferred_cust_flag#7559, c_birth_country#7563, c_login#7564, c_email_address#7565, ws_sold_date_sk#7567, ws_ext_discount_amt#7589, ws_ext_sales_price#7590, ws_ext_wholesale_cost#7591, ws_ext_list_price#7592]
                              :  +- BroadcastHashJoin [c_customer_sk#7549], [ws_bill_customer_sk#7571], Inner, BuildLeft, false
                              :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=6208]
                              :     :  +- Filter (isnotnull(c_customer_sk#7549) AND isnotnull(c_customer_id#7550))
                              :     :     +- FileScan parquet spark_catalog.m.customer[c_customer_sk#7549,c_customer_id#7550,c_first_name#7557,c_last_name#7558,c_preferred_cust_flag#7559,c_birth_country#7563,c_login#7564,c_email_address#7565] Batched: true, DataFilters: [isnotnull(c_customer_sk#7549), isnotnull(c_customer_id#7550)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
                              :     +- Filter (isnotnull(ws_bill_customer_sk#7571) AND isnotnull(ws_sold_date_sk#7567))
                              :        +- FileScan parquet spark_catalog.m.web_sales[ws_sold_date_sk#7567,ws_bill_customer_sk#7571,ws_ext_discount_amt#7589,ws_ext_sales_price#7590,ws_ext_wholesale_cost#7591,ws_ext_list_price#7592] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#7571), isnotnull(ws_sold_date_sk#7567)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_bill_customer_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int,ws_ext_discount_amt:double,ws_ext_sales_price:...
                              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=6212]
                                 +- Filter ((isnotnull(d_year#7607) AND (d_year#7607 = 2000)) AND isnotnull(d_date_sk#7601))
                                    +- FileScan parquet spark_catalog.m.date_dim[d_date_sk#7601,d_year#7607] Batched: true, DataFilters: [isnotnull(d_year#7607), (d_year#7607 = 2000), isnotnull(d_date_sk#7601)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://gros-121:9000/usr/spark/spark-warehouse/m.db/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
